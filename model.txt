********************************************************************************
*                                                                              *
*                         Formatted Listing of Model:                          *
* C:\Users\jcowden\OneDrive - BigBear.ai\Desktop\Projects\Logan\Hot Mill Project\Model\Logan Strategic Model v30.MOD *
*                                                                              *
********************************************************************************

  ??????:                             
#
#ACad distance col 96-40 = 1587 ft
#at sf = 1:  825.75
#therefore new sf = 1587 / 825.75 = 1.92
  Time Units:                        Minutes
  Distance Units:                    Feet
  Initialization Logic:              ANIMATE 100
                                     Activate Sub1()
                                     Activate s_Day_Countdown()
                                     
                                     //v_Destination_for_A602 = m_CM
                                     order 1 TrayHMCar to HMCarE
                                     order 1 TrayAnCar to SACarE
                                     order 1 TrayAnCar to NACarE
                                     Order 1 TrayHMInspStCar To HM_InspSt_Car_Load
                                     Order 1 Orange_Car To Orange_Car_W
                                     Order m_Total_Conestoga Conestoga_Truck To C4_Pick_Up_Outside
                                     Order 1 Carrier To A602 


********************************************************************************
*                                  Locations                                   *
********************************************************************************

  Name                          Cap      Units Stats       Rules               Cost        
  ----------------------------- -------- ----- ----------- ------------------- ------------
  Production_Control            INFINITE 1     None        Oldest, , First                 
  WIP                           INF      1     None        Oldest, , First                 
  HM_Ent                        1        1     Time Series Oldest, , First                 
  HMill                         1        1     Time Series Oldest, , First                 
  HM_Exit                       2        1     None        Oldest, , First                 
  HM_ExtQ                       6        1     Time Series Oldest, FIFO, First             
  HM_InspSt_Car_Unload          1        1     Time Series Oldest, , First                 
  HM_InspSt_Car_Load            2        1     Time Series Oldest, , First                 
  HM_InspST                     1        1     Time Series Oldest, , First                 
  HM_Scrap                      INFINITE 1     Time Series Oldest, , First                 
  HMCarE                        1        1     Time Series Oldest, , First                 
  HMCarW                        1        1     Time Series Oldest, , First                 
  CMCool_Lower_1                44       1     Time Series Oldest, , First                 
  CMCool_Lower_2                95       1     Time Series Oldest, , First                 
  CMCool_Lower_3                49       1     Time Series Oldest, , First                 
  CMCool_Middle_1               44       1     Time Series Oldest, , First                 
  CMCool_Middle_2               95       1     Time Series Oldest, , First                 
  CMCool_Middle_3               49       1     Time Series Oldest, , First                 
  CMCool_Upper_1                44       1     Time Series Oldest, , First                 
  CMCool_Upper_2                95       1     Time Series Oldest, , First                 
  CMCool_Upper_3                49       1     Time Series Oldest, , First                 
  CMCool_HM_OF                  5000     1     Time Series Oldest, , First                 
  CMCool_CM_OF                  5000     1     Time Series Oldest, , First                 
  CMCool_5182_OF                5000     1     Time Series Oldest, , First                 
  CFCool_1                      35       1     Time Series Oldest, , First                 
  CFCool_2                      35       1     Time Series Oldest, , First                 
  CFCool_3                      36       1     Time Series Oldest, , First                 
  CFCool_4                      33       1     Time Series Oldest, , First                 
  CFDensePack                   53       1     Time Series Oldest, , First                 
  CMEnt                         8        1     None        Oldest, FIFO, First             
  CMMill                        1        1     Time Series Oldest, , First                 
  CMExit                        7        1     None        Oldest, FIFO, First             
  NACarQ                        4        1     Time Series Oldest, , First                 
  NACarE_Unload                 1        1     None        Oldest, , First                 
  NACarE                        1        1     Time Series Oldest, , First                 
  NACarM_Unload                 1        1     None        Oldest, , First                 
  NACarM                        1        1     Time Series Oldest, , First                 
  NACarW                        1        1     Time Series Oldest, , First                 
  NACarW_Unload                 1        1     None        Oldest, ,                       
  NACarExit                     1        1     None        Oldest, , First                 
  LMCoolSE                      9        1     Time Series Oldest, , First                 
  LMEntQ                        9        1     None        Oldest, , First                 
  LMEnt1                        1        1     None        Oldest, , First                 
  LMEnt2                        1        1     None        Oldest, , First                 
  LMMill                        1        1     Time Series Oldest, , First                 
  LMExit                        1        1     None        Oldest, , First                 
  Anneal_1                      1        1     Time Series Oldest, , First                 
  Anneal_1_Unload               1        1     None        Oldest, ,                       
  Anneal_2                      1        1     Time Series Oldest, ,                       
  Anneal_2_Unload               1        1     None        Oldest, ,                       
  SACarE                        1        1     Time Series Oldest, , First                 
  SACarE_Unload                 1        1     None        Oldest, ,                       
  SACarW                        1        1     Time Series Oldest, , First                 
  SACarW_Unload                 1        1     None        Oldest, ,                       
  SAExit                        1        1     None        Oldest, , First                 
  C3Ent                         12       1     None        Oldest, , First                 
  C3Mill                        1        1     Time Series Oldest, , First                 
  C3ExitE                       1        1     None        Oldest, , First                 
  C3ExitW                       1        1     None        Oldest, , First                 
  ASRSEntry                     58       1     Time Series Oldest, , First                 
  ASRSMiddle                    18       1     Time Series Oldest, , First                 
  ASRSStore                     154      1     Time Series Oldest, , First                 
  A200                          1        1     Time Series Oldest, , First                 
  A210                          1        1     Time Series Oldest, , First                 
  A601                          1        1     Time Series Oldest, , First                 
  A602                          2        1     Time Series Oldest, , First                 
  A700                          1        1     Time Series Oldest, , First                 
  A700_Load                     1        1     Time Series Oldest, , First                 
  A800                          1        1     Time Series Oldest, , First                 
  A800_Load                     1        1     Time Series Oldest, , First                 
  Pup_Coil_Sleeve_pickup        INFINITE 1     None        Oldest, , First                 
  Pup_Coil_Pickup               1        1     None        Oldest, , First                 
  Pup_Coil_Accum_LM             INFINITE 1     None        Oldest, , First                 
  CMExitPU                      1        1     Time Series Oldest, , First                 
  HMExitQPU                     1        1     Time Series Oldest, , First                 
  Rate_Count                    1        1     None        Oldest, , First                 
  CF_OF                         INFINITE 1     Time Series Oldest, , First                 
  LMPrep_S01                    1        1     None        Oldest, , First                 
  LMPrep_S02                    1        1     None        Oldest, , First                 
  LMPrep_S03                    1        1     None        Oldest, , First                 
  LMPrep_S04                    1        1     None        Oldest, , First                 
  LMPrep_S05                    1        1     None        Oldest, , First                 
  LMPrep_S06                    1        1     None        Oldest, , First                 
  LMPrep_S07                    1        1     None        Oldest, , First                 
  LMPrep_S08                    1        1     None        Oldest, , First                 
  LMPrep                        1        1     Time Series Oldest, , First                 
  TransferCar_Home              1        1     None        Oldest, , First                 
  CoilCar1_PickUp               1        1     None        Oldest, , First                 
  ASRS_S01                      1        1     None        Oldest, , First                 
  ASRS_S02                      1        1     None        Oldest, , First                 
  ASRS_S03                      1        1     None        Oldest, , First                 
  ASRS_S04                      1        1     None        Oldest, , First                 
  LM_Ent_HOLD                   1        1     None        Oldest, , First                 
  LM_Ent_S01                    1        1     None        Oldest, , First                 
  LM_Ent_S02                    1        1     None        Oldest, , First                 
  LM_Ent_S03                    1        1     None        Oldest, , First                 
  LM_Ent_S04                    1        1     None        Oldest, , First                 
  LM_Exit_S01                   1        1     None        Oldest, , First                 
  LM_Exit_S02                   1        1     None        Oldest, , First                 
  LM_Exit_CCHome                1        1     None        Oldest, , First                 
  LM_Exit_S03                   1        1     None        Oldest, , First                 
  LM_Exit_S04                   1        1     None        Oldest, , First                 
  LM_Exit_S05                   1        1     None        Oldest, , First                 
  LM_Exit_S06                   1        1     None        Oldest, , First                 
  LM_Exit_S07                   1        1     None        Oldest, , First                 
  LM_Exit_S08                   1        1     None        Oldest, , First                 
  LM_Exit_S09                   1        1     None        Oldest, , First                 
  LM_Exit_S10                   1        1     None        Oldest, , First                 
  Forced_Air_Cool_Tier1         72       1     Time Series Oldest, , First                 
  Forced_Air_Cool_Tier2         18       1     Time Series Oldest, , First                 
  FAC_Overflow                  Inf      1     Time Series Oldest, , First                 
  LM_Inspect                    1        1     Time Series Oldest, , First                 
  SL3_Entry                     4        1     Time Series Oldest, FIFO, First             
  Slitter_3                     1        1     Time Series Oldest, , First                 
  Slitter_3_Exit                4        1     None        Oldest, , First                 
  P2_South_Ent                  3        1     Time Series Oldest, FIFO, First             
  P2_South                      1        1     Time Series Oldest, , First                 
  P2_South_Exit                 1        1     None        Oldest, , First                 
  South_Finished_Goods          1030     1     Time Series Oldest, , First                 
  Coating_Line_Ent              1        1     None        Oldest, , First                 
  Coating_Line                  1        1     Time Series Oldest, , First                 
  Coating_Line_Exit             1        1     None        Oldest, , First                 
  LCL_Ent                       2        1     None        Oldest, , First                 
  LCL_Level_Clean_Line          1        1     Time Series Oldest, , First                 
  LCL_Exit                      2        1     None        Oldest, , First                 
  TL_Ent                        1        1     None        Oldest, , First                 
  TL_Tension_Leveler            1        1     Time Series Oldest, , First                 
  TL_Exit                       2        1     None        Oldest, , First                 
  HG_Slitter_Ent                4        1     None        Oldest, , First                 
  HG_Heavy_Gauge_Slitter        1        1     Time Series Oldest, , First                 
  HG_Exit                       4        1     None        Oldest, , First                 
  LG_Slitter_Ent                4        1     None        Oldest, , First                 
  LG_Light_Gauge_Slitter        1        1     Time Series Oldest, , First                 
  LG_Exit                       4        1     None        Oldest, , First                 
  PK_Line_Ent                   5        1     Time Series Oldest, FIFO, First             
  PK_Line                       1        1     Time Series Oldest, , First                 
  PK_Line_Exit                  1        1     None        Oldest, , First                 
  LCL_Racks                     54       1     Time Series Oldest, , First                 
  LCL_OF                        INF      1     Time Series Oldest, , First                 
  Anneal_Saddles                14       1     Time Series Oldest, , First                 
  Anneal_Saddles_OF             Inf      1     Time Series Oldest, ,                       
  North_Finished_Goods          1600     1     Time Series Oldest, , First                 
  Slitter_Bay_Racks             100      1     Time Series Oldest, , First                 
  Slitter_Bay_OF                INF      1     Time Series Oldest, , First                 
  Breezeway_SL                  1        1     Time Series Oldest, , First                 
  PK_Saddles                    18       1     Time Series Oldest, , First                 
  PK_Floorspace                 100      1     Time Series Oldest, , First                 
  PK_Auto_Racks                 30       1     Time Series Oldest, , First                 
  Supercooling                  124      1     Time Series Oldest, , First                 
  Upender                       1        1     Time Series Oldest, , First                 
  Orange_Car_W                  1        1     Time Series Oldest, , First                 
  Orange_Car_W_UL               1        1     None        Oldest, , First                 
  Orange_Car_M                  1        1     Time Series Oldest, , First                 
  Orange_Car_M_UL               1        1     None        Oldest, , First                 
  Orange_Car_E                  1        1     None        Oldest, , First                 
  Orange_Car_E_UL               1        1     None        Oldest, , First                 
  Yellow_Spot                   1        1     Time Series Oldest, , First                 
  TS_Breezway_PU                1        1     Time Series Oldest, , First                 
  SL4_Entry                     4        1     Time Series Oldest, FIFO,                   
  Slitter_4                     1        1     Time Series Oldest, ,                       
  Slitter_4_Exit                4        1     Time Series Oldest, ,                       
  C4_Drop_Off                   1        1     Time Series Oldest, ,                       
  Loc1                          1        1     Time Series Oldest, ,                       
  C4_Pick_Up                    1        1     Time Series Oldest, ,                       
  C4_Drop_Off_Queue             INF      1     Time Series Oldest, ,                       
  C4_Drop_Off_Outside           1        1     Time Series Oldest, ,                       
  C4_Racks                      255      1     Time Series Oldest, ,                       
  C4_Racks_OF                   INF      1     Time Series Oldest, ,                       
  C4_Mill_Drop_Off              1        1     Time Series Oldest, ,                       
  C4_Mill_Input_Conv            10       1     Time Series Oldest, FIFO,                   
  C4                            1        1     Time Series Oldest, ,                       
  C4_Mill_Output_Conv           6        1     Time Series Oldest, FIFO,                   
  C4_Mill_Pick_Up               1        1     Time Series Oldest, ,                       
  C4_Pick_Up_Outside            1        1     Time Series Oldest, ,                       
  Fluids_Storage_3xxx_DropOff   1        1     Time Series Oldest, ,                       
#
#//TOTAL of 30 capacity if you cound the DropOff Location!
  Fluids_Storage                30       1     Time Series Oldest, ,                       
  Fluids_Storage_Overflow       INF      1     Time Series Oldest, ,                       
  HMCar_Fluids_Bay_Drop_Off     1        1     Time Series Oldest, ,                       
  HMCar_Fluids_Bay_Pick_Up      1        1     Time Series Oldest, ,                       
  Conestoga_Fluids_Bay_Drop_Off 1        1     Time Series Oldest, ,                       
  Conestoga_Fluids_Bay_Pick_Up  1        1     Time Series Oldest, ,                       
  CM_PU_DO_Storage              INF      1     Time Series Oldest, ,                       
  CM_Conestoga_PU               1        1     Time Series Oldest, ,                       
  CM_Conestoga_DO               1        1     Time Series Oldest, ,                       
  CM_Storage_RETURN             1        1     Time Series Oldest, ,                       
  PK_Line_2_Ent                 5        1     Time Series Oldest, FIFO,                   
  PK_Line_2                     1        1     Time Series Oldest, ,                       
  PK_Line_2_Exit                1        1     Time Series Oldest, ,                       
  LOC_WIP_TEMP                  INF      1     Time Series Oldest, ,                       
  LOC_Remelt_Production_Control INF      1     Time Series Oldest, ,                       
  LOC_Remelt_Arrival_Buffer     INF      1     Time Series Oldest, ,                       
#
#Start of New Process
  LOC_Remelt                    1        1     Time Series Oldest, ,                       
  LOC_Remelt_Transfer           INFINITE 1     Time Series Oldest, FIFO,                   
  LOC_Scalper_1_Staging         6        1     Time Series Oldest, ,                       
  LOC_Scalper_1                 1        1     Time Series Oldest, ,                       
  LOC_Scalper_2_Staging         6        1     Time Series Oldest, ,                       
  LOC_Scalper_2                 1        1     Time Series Oldest, ,                       
  LOC_Transfer_Car              1        1     Time Series Oldest, ,                       
  LOC_Ingot_Storage             200      1     Time Series Oldest, ,                       
  LOC_Yard_Door                 1        1     Time Series Oldest, ,                       
  LOC_Yard_Storage              INF      1     Time Series Oldest, ,                       
  LOC_West_Dock_Entrance        INF      1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_1_Staging  32       1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_2_Staging  32       1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_3_Staging  32       1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_4_Staging  32       1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_1_ENTER    1        1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_2_ENTER    1        1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_3_ENTER    1        1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_4_ENTER    1        1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_1          INF      1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_2          INF      1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_3          INF      1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_4          INF      1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_1_EXIT     1        1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_2_EXIT     1        1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_3_EXIT     1        1     Time Series Oldest, ,                       
  LOC_Pusher_Furnace_4_EXIT     1        1     Time Series Oldest, ,                       
  LOC_Reversing_Finishing_Mill  3        1     Time Series Oldest, ,                       
  LOC_Scrap_Arrival             INF      1     Time Series Oldest, ,                       
  LOC_Scrap_Conv_IN             INF      1     Time Series Oldest, FIFO,                   
  LOC_Scrap_Conv_IN_Pick        1        1     Time Series Oldest, ,                       
  LOC_Scrap_Storage             INF      1     Time Series Oldest, ,                       
  LOC_Scrap_Melt_1              1        1     Time Series Oldest, ,                       
  LOC_Scrap_Melt_2              1        1     Time Series Oldest, ,                       
  LOC_Scrap_Melt_3              1        1     Time Series Oldest, ,                       
  LOC_Empty_Tub_Exit            INF      1     Time Series Oldest, ,                       


********************************************************************************
*                        Clock downtimes for Locations                         *
********************************************************************************

  Loc                    Frequency                  First Time   Priority     Scheduled Disable Logic
  ---------------------- -------------------------- ------------ ------------ --------- ------- ------------------
  HMill                  yDT[1,(vMonth-1)*4+1] min               99           Yes       No      Wait yDT[1,(vMonth-1)*4+2] min
  CMMill                 yDT[2,(vMonth-1)*4+1] min               99           Yes       No      Real rTime = yDT[2,(vMonth-1)*4+2]
                                                                                                Wait N(rTime,m_DT_SD*rTime) min
  LMMill                 yDT[3,(vMonth-1)*4+1] min               99           Yes       Yes     Real rTime = yDT[3,(vMonth-1)*4+2]
                                                                                                Wait N(rTime,m_DT_SD*rTime) min
  C3Mill                 yDT[4,(vMonth-1)*4+1] min               99           Yes       No      Real rTime = yDT[4,(vMonth-1)*4+2]
                                                                                                Wait N(rTime,m_DT_SD*rTime) min
  Slitter_3              yDT[6,(vMonth-1)*4+1] min               99           Yes       No      Real rTime = yDT[6,(vMonth-1)*4+2]
                                                                                                Wait N(rTime,m_DT_SD*rTime) min
  Coating_Line           yDT[11,(vMonth-1)*4+1] min              99           Yes       No      Real rTime = yDT[11,(vMonth-1)*4+2]
                                                                                                Wait N(rTime,m_DT_SD*rTime) min
  LCL_Level_Clean_Line   yDT[10,(vMonth-1)*4+1] min              99           Yes       No      Real rTime = yDT[10,(vMonth-1)*4+2]
                                                                                                Wait N(rTime,m_DT_SD*rTime) min
  TL_Tension_Leveler     yDT[9,(vMonth-1)*4+1] min               99           Yes       No      Real rTime = yDT[9,(vMonth-1)*4+2]
                                                                                                Wait N(rTime,m_DT_SD*rTime) min
  HG_Heavy_Gauge_Slitter yDT[7,(vMonth-1)*4+1] min               99           Yes       No      Real rTime = yDT[7,(vMonth-1)*4+2]
                                                                                                Wait N(rTime,m_DT_SD*rTime) min
  LG_Light_Gauge_Slitter yDT[8,(vMonth-1)*4+1] min               99           Yes       No      Real rTime = yDT[8,(vMonth-1)*4+2]
                                                                                                Wait N(rTime,m_DT_SD*rTime) min
  Slitter_4              yDT[12,(vMonth-1)*4+1] min              99           Yes       No      Real rTime = yDT[12,(vMonth-1)*4+2]
                                                                                                Wait N(rTime,m_DT_SD*rTime) min
  C4                     yDT[13,(vMonth-1)*4+1] min              99           Yes       No      Real rTime = yDT[13,(vMonth-1)*4+2]
                                                                                                Wait N(rTime,m_DT_SD*rTime) min


********************************************************************************
*                        Usage downtimes for Locations                         *
********************************************************************************

  Loc                    Frequency                  First Time   Priority     Logic
  ---------------------- -------------------------- ------------ ------------ ------------------
  HMill                  yDT[1,(vMonth-1)*4+3] min               999          Real rTime = yDT[1,(vMonth-1)*4+4]
                                                                              Wait N(rTime, m_DT_SD*rTime) min
  CMMill                 yDT[2,(vMonth-1)*4+3] min               999          Real rTime = yDT[2,(vMonth-1)*4+4]
                                                                              Wait N(rTime,m_DT_SD*rTime) min
  LMMill                 yDT[3,(vMonth-1)*4+3] min               999          Real rTime = yDT[3,(vMonth-1)*4+4]
                                                                              Wait N(rTime,m_DT_SD*rTime) min
  C3Mill                 yDT[4,(vMonth-1)*4+3] min               999          Real rTime = yDT[4,(vMonth-1)*4+4]
                                                                              Wait N(rTime,m_DT_SD*rTime) min
  Slitter_3              yDT[6,(vMonth-1)*4+3] min               999          Real rTime = yDT[6,(vMonth-1)*4+4]
                                                                              Wait N(rTime,m_DT_SD*rTime) min
  Coating_Line           yDT[11,(vMonth-1)*4+3] min              999          Real rTime = yDT[11,(vMonth-1)*4+4]
                                                                              Wait N(rTime,m_DT_SD*rTime) min
  LCL_Level_Clean_Line   yDT[10,(vMonth-1)*4+3] min              999          Real rTime = yDT[10,(vMonth-1)*4+4]
                                                                              Wait N(rTime,m_DT_SD*rTime) min
  TL_Tension_Leveler     yDT[9,(vMonth-1)*4+3] min               999          Real rTime = yDT[9,(vMonth-1)*4+4]
                                                                              Wait N(rTime,m_DT_SD*rTime) min
  HG_Heavy_Gauge_Slitter yDT[7,(vMonth-1)*4+3] min               999          Real rTime = yDT[7,(vMonth-1)*4+4]
                                                                              Wait N(rTime,m_DT_SD*rTime) min
  LG_Light_Gauge_Slitter yDT[8,(vMonth-1)*4+3] min               999          Real rTime = yDT[8,(vMonth-1)*4+4]
                                                                              Wait N(rTime,m_DT_SD*rTime) min
  Slitter_4              yDT[12,(vMonth-1)*4+3] min              999          Real rTime = yDT[12,(vMonth-1)*4+4]
                                                                              Wait N(rTime,m_DT_SD*rTime) min
  C4                     yDT[13,(vMonth-1)*4+3] min              999          Real rTime = yDT[13,(vMonth-1)*4+4]
                                                                              Wait N(rTime,m_DT_SD*rTime) min


********************************************************************************
*                        Called downtimes for Locations                        *
********************************************************************************

  Loc        Name       Priority     Scheduled Logic
  ---------- ---------- ------------ --------- ------------------
  HMill      HM_Delay   99           No        //WAIT mHM_Delay_Hrs hr


********************************************************************************
*                                   Entities                                   *
********************************************************************************

  Name                 Speed (fpm)  Stats       Cost        
  -------------------- ------------ ----------- ------------
  Coil                 150          Time Series             
  Pup_Coil             150          None                    
  Pup_Coil_3           150          None                    
  Sleeves_3            150          None                    
  Carrier              150          Time Series             
  TrayHMCar            150          None                    
  TrayAnCar            150          None                    
  Rate_Counter         150          None                    
  TrayHMInspStCar      150          None                    
  Dummy                150          Time Series             
  Orange_Car           150          None                    
  Anneal_Car           150          None                    
  Conestoga_Truck      545          Time Series             
  ENT_Ingot            150          Time Series             
  ENT_WIP_Trigger_TEMP 150          Time Series             
  ENT_Scrap_Tub        150          Time Series             


********************************************************************************
*                                Path Networks                                 *
********************************************************************************

  Name                      Type        T/S              From      To        BI   Dist/Time  Speed Factor
  ------------------------- ----------- ---------------- --------- --------- ---- ---------- ------------
  Crane_CM_Bay              Crane       Speed & Distance Origin    Rail1End  Uni             
                                                         Origin    BridgeEnd Uni             
                                                         BridgeEnd Rail2End  Uni             
  Crane_CF_Bay              Crane       Speed & Distance Origin    Rail1End  Uni             
                                                         Origin    BridgeEnd Uni             
                                                         BridgeEnd Rail2End  Uni             
  AGV_path                  Non-Passing Speed & Distance N3        near300   Uni  139.56     1
                                                         near300   N4        Uni  266.49     1
                                                         N4        near601   Uni  27.10      1
                                                         near601   at601     Bi   25.28      1
                                                         N4        N7        Uni  11.69      1
                                                         N7        near602   Uni  25.01      1
                                                         near602   at602     Bi   14.47      1
                                                         near601   N10       Uni  27.77      1
                                                         near602   N11       Bi   26.67      1
                                                         N10       N11       Uni  8.82       1
                                                         N11       N13       Uni  616.46     1
                                                         N13       N14       Bi   7.68       1
                                                         N14       near700   Bi   32.20      1
                                                         near700   at700     Bi   37.64      1
                                                         N13       N17       Bi   27.81      1
                                                         near700   N17       Bi   36.81      1
                                                         N14       N18       Bi   44.17      1
                                                         N17       at800     Bi   69.12      1
                                                         at800     near800   Bi   94.14      1
                                                         near800   N21       Uni  19.36      1
                                                         N21       NPup      Uni  26.94      1
                                                         NPup      near210   Bi   46.64      1
                                                         near210   N24       Bi   66.23      1
                                                         N24       N25       Uni  52.49      1
                                                         N26       near200   Bi   31.54      1
                                                         N25       near200   Uni  38.24      1
                                                         near200   at200     Bi   41.29      1
                                                         N26       N29       Bi   42.40      1
                                                         N30       N29       Bi   11.80      1
                                                         N29       N31       Bi   73.44      1
                                                         at200     N31       Bi   48.63      1
                                                         NPup      N33       Uni  33.85      1
                                                         N21       N33       Uni  26.52      1
                                                         N33       N3        Uni  176.70     1
                                                         N18       Home3     Bi   44.66      1
                                                         Home3     Home2     Bi   23.85      1
                                                         Home2     Home1     Bi   36.32      1
                                                         Home1     near800   Bi   55.08      1
                                                         near210   at210     Bi   19.78      1
                                                         N7        N10       Bi   24.32      1
                                                         N26       N24       Uni  59.20      1
  Car_HM_path               Passing     Speed & Distance N1        N2        Bi   80.64      1
                                                         N1        N3        Bi   86.24      1
                                                         N3        N4        Bi   11.68      1
  Car_C3_path               Passing     Speed & Distance N1        N2        Bi   97.92      1
  Car_AN_north_path         Passing     Speed & Distance N1        N2        Bi   47.68      1
                                                         N2        N3        Bi   96.00      1
  Car_AN_south_path         Passing     Speed & Distance N1        N2        Bi   97.44      1
  HM_Insp_Car_path          Passing     Time             N1        N2        Bi   0.33       
  LM_Prep_Path              Passing     Speed & Distance N1        N2        Bi   20.30      1
                                                         N2        N3        Bi   10.56      1
                                                         N3        N4        Bi   47.20      1
                                                         N4        N5        Bi   11.52      1
                                                         N5        N6        Bi   11.04      1
                                                         N6        N7        Bi   11.84      1
                                                         N7        N8        Bi   13.60      1
                                                         N8        N9        Bi   10.40      1
                                                         N8        N10       Bi   19.20      1
                                                         N10       N11       Bi   9.29       1
                                                         N11       N12       Bi   6.88       1
  LM_Path                   Passing     Speed & Distance N1        N2        Bi   8.03       1
                                                         N2        N3        Bi   9.28       1
                                                         N3        N4        Bi   8.64       1
                                                         N4        N5        Bi   58.88      1
                                                         N5        N6        Bi   5.60       1
                                                         N6        N7        Bi   18.40      1
                                                         N7        N8        Bi   16.64      1
                                                         N8        N9        Bi   12.32      1
                                                         N9        N10       Bi   55.52      1
                                                         N10       N11       Bi   49.29      1
                                                         N11       N12       Bi   15.68      1
                                                         N12       N13       Bi   13.76      1
                                                         N13       N14       Bi   63.68      1
                                                         N13       N15       Bi   14.40      1
                                                         N15       N16       Bi   15.84      1
                                                         N16       N17       Bi   12.64      1
                                                         N17       N18       Bi   11.36      1
                                                         N18       N19       Bi   11.68      1
                                                         N19       N20       Bi   11.36      1
                                                         N20       N21       Bi   11.20      1
                                                         N21       N22       Bi   11.84      1
  Slitter_Bay               Crane       Speed & Distance Origin    Rail1End  Uni             
                                                         Origin    BridgeEnd Uni             
                                                         BridgeEnd Rail2End  Uni             
  Coating_Bay               Crane       Speed & Distance Origin    Rail1End  Uni             
                                                         Origin    BridgeEnd Uni             
                                                         BridgeEnd Rail2End  Uni             
  Car_Orange_path           Passing     Speed & Distance NCT       NSL       Bi   64.00      1
                                                         NSL       NCF       Bi   106.72     1
  Fork_Truck_Path           Passing     Speed & Distance N1        N2        Bi   133.78     1
                                                         N2        N3        Bi   35.84      1
                                                         N3        N4        Bi   29.12      1
                                                         N4        NS3       Bi   178.88     1
                                                         NS3       N6        Bi   32.96      1
                                                         N6        N7        Bi   68.16      1
                                                         NS3       N8        Bi   295.04     1
                                                         N8        N10       Bi   32.96      1
                                                         N9        N10       Bi   33.92      1
                                                         N9        N11       Bi   165.76     1
                                                         N11       N12       Bi   44.80      1
                                                         N12       N13       Bi   47.68      1
                                                         N13       NCTBay    Bi   40.00      1
                                                         N13       NOTC      Bi   90.88      1
                                                         NOTC      N16       Bi   51.84      1
                                                         N16       N17       Bi   26.93      1
                                                         N16       N18       Bi   71.04      1
                                                         N18       N19       Bi   35.20      1
                                                         N18       N20       Bi   87.36      1
                                                         NOTC      N22       Bi   39.07      1
                                                         NCTBay    N23       Bi   264.80     1
                                                         N21       N24       Bi   38.88      1
                                                         N24       N25       Bi   40.00      1
                                                         N26       N25       Bi   37.44      1
                                                         N20       N26       Bi   94.82      1
                                                         N26       N21       Bi   49.28      1
                                                         N27       N28       Bi   89.92      1
                                                         N28       N29       Bi   31.81      1
                                                         N28       N30       Bi   50.24      1
                                                         N30       N31       Bi   14.72      1
                                                         N32       N33       Bi   42.56      1
                                                         N34       N35       Bi   37.15      1
                                                         N34       N36       Bi   64.97      1
                                                         N23       N41       Bi   244.43     1
                                                         N41       N40       Bi   170.56     1
                                                         N40       N42       Bi   39.04      1
                                                         N32       N43       Bi   39.36      1
                                                         N43       N34       Bi   40.96      1
                                                         N30       NSLBay    Bi   59.04      1
                                                         NSLBay    N32       Bi   35.84      1
                                                         NSLBay    NTS_PU    Bi   176.80     1
                                                         NCTBay    N46       Bi   57.28      1
                                                         N46       N23       Bi   271.82     1
                                                         N6        N47       Bi   32.00      1
                                                         NSLBay    N48       Bi   24.69      1
                                                         N48       N41       Bi   96.49      1
                                                         N42       N5        Bi   123.31     1
                                                         N23       N15       Bi   86.28      1
  Conestoga_Path            Passing     Speed & Distance N1        N2        Bi   86.47      1
                                                         N2        N3        Bi   62.28      1
                                                         N4        N5        Uni  406.64     1
                                                         N6        N7        Bi   24.64      1
                                                         N7        N8        Bi   55.46      1
                                                         N12       N13       Bi   135.52     1
                                                         N13       N14       Bi   152.82     1
                                                         N14       N15       Bi   523.04     1
                                                         N15       N16       Bi   93.44      1
                                                         N16       N17       Bi   496.16     1
                                                         N17       N18       Bi   1343.64    1
                                                         N21       N22       Bi   248.07     1
                                                         N22       N4        Bi   96.57      1
                                                         N8        N19       Uni  479.55     1
                                                         N3        N21       Bi   130.13     1
                                                         N19       N21       Bi   28.15      1
                                                         N18       N9        Bi   800.00     1
                                                         N9        N20       Bi   487.20     1
                                                         N20       N23       Bi   179.36     1
                                                         N23       N21       Bi   741.38     1
                                                         N5        N24       Bi   144.11     1
                                                         N24       N6        Bi   19.50      1
  Crane_Fluids_Bay          Crane       Speed & Distance Origin    Rail1End  Uni             
                                                         Origin    BridgeEnd Uni             
                                                         BridgeEnd Rail2End  Uni             
  NET_Crane_Ingot_Storage   Crane       Speed & Distance Origin    Rail1End  Uni             
                                                         Origin    BridgeEnd Uni             
                                                         BridgeEnd Rail2End  Uni             
  NET_Crane_Pusher_Furnaces Crane       Speed & Distance Origin    Rail1End  Uni             
                                                         Origin    BridgeEnd Uni             
                                                         BridgeEnd Rail2End  Uni             
  NET_Crane_C4_Bay          Crane       Speed & Distance Origin    Rail1End  Uni             
                                                         Origin    BridgeEnd Uni             
                                                         BridgeEnd Rail2End  Uni             
  NET_Crane_Scrap_Bay       Crane       Speed & Distance Origin    Rail1End  Uni             
                                                         Origin    BridgeEnd Uni             
                                                         BridgeEnd Rail2End  Uni             
  NET_Scrap_Forktruck       Passing     Speed & Distance N1        N2        Bi   69.52      1
                                                         N1        N3        Bi   210.73     1
                                                         N4        N5        Bi   70.72      1
                                                         N4        N2        Bi   47.30      1
                                                         N2        N6        Bi   113.76     1
                                                         N6        N7        Bi   59.02      1
                                                         N1        N8        Bi   28.64      1
                                                         N8        N4        Bi   27.52      1
  NET_Ingot_Forktruck       Passing     Speed & Distance N1        N2        Bi   39.84      1
                                                         N2        N3        Bi   61.77      1
                                                         N3        N4        Bi   50.94      1
                                                         N3        N5        Bi   232.73     1
                                                         N5        N6        Bi   80.16      1
                                                         N6        N7        Bi   100.96     1
                                                         N7        N8        Bi   51.68      1
                                                         N8        N9        Bi   13.92      1
                                                         N9        N10       Bi   40.80      1
                                                         N10       N11       Bi   40.40      1
                                                         N11       N12       Bi   65.29      1
                                                         N12       N13       Bi   31.68      1
                                                         N13       N14       Bi   78.98      1
                                                         N9        N15       Bi   10.90      1


********************************************************************************
*                                  Interfaces                                  *
********************************************************************************

  Net                       Node           Location                      Coords (R,B)
  ------------------------- -------------- ----------------------------- ------------
  Crane_CM_Bay              N1             C3ExitE                       237.60, 22.08
                            N2             C3Mill                        308.48, 21.60
                            N3             C3Ent                         405.28, 21.60
                            N5             NACarE                        854.56, 79.36
                            N7             CMEnt                         1075.20, 67.84
                            N56            CMCool_Upper_3                1153.92, 83.20
                            N57            CMCool_Middle_3               1153.92, 48.64
                            N58            CMCool_Lower_3                1153.92, 17.92
                            N59            CMCool_Upper_2                1292.16, 83.20
                            N60            CMCool_Middle_2               1292.16, 50.56
                            N61            CMCool_Lower_2                1292.16, 17.92
                            N62            CMCool_Upper_1                1441.92, 83.20
                            N63            CMCool_Middle_1               1441.92, 48.64
                            N64            CMCool_Lower_1                1441.92, 17.92
                            N65            HMCarE                        1496.16, 63.52
                            N68            HM_Exit                       1546.56, 26.56
                            N69            HM_Scrap                      1510.88, 14.08
                            N8             NACarQ                        866.88, 56.48
                            N9             CMCool_HM_OF                  1197.12, 51.52
                            N6             CMExitPU                      882.72, 70.88
                            N10            CMCool_5182_OF                1194.72, 17.28
                            N66            HMExitQPU                     1573.92, 66.72
                            N9             CMCool_CM_OF                  1197.12, 51.52
                            N11            HM_InspSt_Car_Load            1531.04, 76.64
                            N11            HM_InspSt_Car_Unload          1531.04, 76.64
                            N12            TS_Breezway_PU                1505.28, 23.04
  Crane_CF_Bay              N1             HMCarW                        1485.28, 41.61
                            N21            CFCool_3                      1255.20, 23.13
                            N22            CFCool_2                      1328.16, 23.13
                            N23            CFCool_1                      1395.36, 23.13
                            N24            A200                          1244.64, 54.46
                            N25            A210                          993.92, 69.08
                            N26            A602                          420.80, 69.40
                            N27            A601                          419.84, 33.25
                            N29            C3ExitW                       244.80, 28.27
                            N30            ASRSMiddle                    262.56, 46.27
                            N31            ASRSEntry                     335.52, 44.34
                            N33            C3Ent                         405.92, 26.99
                            N40            LMEntQ                        511.04, 31.97
                            N35            LMEnt1                        532.32, 54.62
                            N36            LMExit                        591.68, 53.17
                            N37            SACarE                        704.80, 33.73
                            N38            NACarM                        830.08, 34.06
                            N42            LMCoolSE                      667.84, 15.26
                            N43            Pup_Coil_Sleeve_pickup        1019.36, 24.90
                            N44            Pup_Coil_Accum_LM             517.92, 46.27
                            N28            ASRSStore                     97.60, 44.66
                            N45            CFCool_4                      1153.12, 23.45
                            N47            Anneal_1                      794.40, 63.61
                            N48            Pup_Coil_Pickup               517.92, 57.83
                            CFDensePack    CFDensePack                   1104.96, 23.78
                            N3             CF_OF                         1105.60, 47.39
                            N47            Forced_Air_Cool_Tier1         794.40, 63.61
                            N39            Forced_Air_Cool_Tier2         907.04, 57.19
                            N5             LMPrep_S08                    757.44, 26.02
                            N6             ASRS_S01                      439.52, 35.34
                            N7             LM_Ent_S01                    470.56, 32.93
                            N9             LM_Exit_S02                   611.52, 57.51
                            N47            FAC_Overflow                  794.40, 63.61
                            N32            SL3_Entry                     375.20, 67.31
                            N11            Loc1                          1477.76, 47.71
                            N11            C4_Pick_Up                    1477.76, 47.71
                            N12            Orange_Car_E                  962.72, 44.82
  AGV_path                  at601          A601                          1
                            at602          A602                          1
                            at700          A700                          1
                            at800          A800                          1
                            at210          A210                          
                            at200          A200                          1
                            at800          A800_Load                     1
                            at700          A700_Load                     1
  Car_HM_path               N2             HMCarW                        
                            N1             HMCarE                        
                            N3             HMCar_Fluids_Bay_Pick_Up      
                            N4             HMCar_Fluids_Bay_Drop_Off     
  Car_C3_path               N2             C3ExitW                       
                            N1             C3ExitE                       
  Car_AN_north_path         N2             NACarM                        
                            N1             NACarE                        
                            N3             NACarW                        
                            N2             NACarM_Unload                 
                            N1             NACarE_Unload                 
                            N3             Anneal_1_Unload               
  Car_AN_south_path         N2             SACarW                        
                            N1             SACarE                        
                            N1             SACarE_Unload                 
                            N2             SACarW_Unload                 
                            N2             Anneal_2_Unload               
  HM_Insp_Car_path          N1             HM_InspST                     
                            N2             HM_InspSt_Car_Load            
                            N2             HM_InspSt_Car_Unload          
  LM_Prep_Path              N1             CMExitPU                      
                            N2             TransferCar_Home              
                            N3             CoilCar1_PickUp               
                            N4             LMPrep_S01                    
                            N5             LMPrep_S02                    
                            N6             LMPrep_S03                    
                            N7             LMPrep_S04                    
                            N8             LMPrep_S05                    
                            N9             LMPrep                        
                            N10            LMPrep_S06                    
                            N11            LMPrep_S07                    
                            N12            LMPrep_S08                    
  LM_Path                   N1             ASRS_S01                      
                            N2             ASRS_S02                      
                            N3             ASRS_S03                      
                            N4             ASRS_S04                      
                            N5             LM_Ent_HOLD                   
                            N6             LM_Ent_S01                    
                            N7             LM_Ent_S02                    
                            N8             LM_Ent_S03                    
                            N9             LM_Ent_S04                    
                            N10            LMMill                        
                            N11            LMExit                        
                            N12            LM_Exit_S01                   
                            N13            LM_Exit_S02                   
                            N14            LM_Inspect                    
                            N16            LM_Exit_S03                   
                            N17            LM_Exit_S04                   
                            N18            LM_Exit_S05                   
                            N19            LM_Exit_S06                   
                            N20            LM_Exit_S07                   
                            N21            LM_Exit_S08                   
                            N22            LM_Exit_S09                   
                            N15            LM_Exit_CCHome                
  Slitter_Bay               N8             A800                          503.84, 75.76
                            N7             A800_Load                     558.88, 67.42
                            nSuperCool     Supercooling                  377.44, 70.38
                            N5             TL_Exit                       753.44, 61.57
                            nSlitter_Racks Slitter_Bay_Racks             682.08, 11.36
                            N1             SACarW                        286.56, 51.55
                            N3             NACarW                        407.52, 52.77
                            N4             LM_Exit_S09                   263.84, 18.28
                            N14            SAExit                        286.88, 88.02
                            N13            NACarExit                     407.20, 88.29
                            N23            HG_Slitter_Ent                821.28, 54.49
                            N20            LG_Exit                       1014.56, 36.16
                            N21            LG_Slitter_Ent                954.08, 57.95
                            N19            PK_Saddles                    1109.92, 69.08
                            N17            PK_Floorspace                 1188.00, 57.52
                            N16            PK_Line_Ent                   1285.60, 4.99
                            N15            Upender                       1343.20, 23.21
                            N24            TL_Ent                        594.40, 66.44
                            N11            Anneal_Saddles                453.92, 30.03
                            N22            HG_Exit                       875.36, 33.03
                            N2             Anneal_1                      363.04, 23.19
                            N6             Orange_Car_M_UL               524.16, 73.83
                            N6             Orange_Car_M                  524.16, 73.83
                            N9             Slitter_Bay_OF                846.56, 15.92
                            N10            Breezeway_SL                  1062.88, 45.10
                            N15            PK_Auto_Racks                 1343.20, 23.21
                            N12            Anneal_2                      321.12, 21.61
                            N12            Anneal_1_Unload               321.12, 21.61
                            N2             Anneal_2_Unload               363.04, 23.19
                            N10            C4_Drop_Off                   1062.88, 45.10
                            N11            Anneal_Saddles_OF             453.92, 30.03
                            N25            PK_Line_2_Ent                 1272.16, 4.68
  Coating_Bay               N6             Coating_Line_Ent              372.77, 73.97
                            N5             Coating_Line_Exit             352.92, 50.78
                            N4             LCL_Ent                       469.98, 40.61
                            N3             LCL_Exit                      593.76, 60.36
                            N1             A700                          682.68, 80.62
                            nLCL_Racks     LCL_Racks                     547.70, 91.12
                            N2             Yellow_Spot                   680.13, 5.88
                            N7             Orange_Car_W_UL               642.28, 39.68
                            N7             Orange_Car_W                  642.28, 39.68
                            N8             LCL_OF                        696.67, 91.65
                            N1             A700_Load                     682.68, 80.62
                            N11            SL4_Entry                     772.42, 79.75
                            N10            Slitter_4_Exit                824.10, 79.87
                            N12            CM_Storage_RETURN             721.16, 61.86
  Car_Orange_path           NCF            Orange_Car_E                  
                            NSL            Orange_Car_M_UL               
                            NCT            Orange_Car_W_UL               
                            NCT            Orange_Car_W                  
                            NSL            Orange_Car_M                  
                            NCF            Orange_Car_E_UL               
  Fork_Truck_Path           N8             Coating_Line_Exit             
                            N9             Coating_Line_Ent              
                            N10            LCL_Ent                       
                            N11            LCL_Racks                     
                            N12            LCL_Exit                      
                            N2             P2_South_Exit                 
                            N4             P2_South                      
                            N1             South_Finished_Goods          
                            N6             P2_South_Ent                  
                            N7             SL3_Entry                     
                            NCTBay         A700                          
                            NOTC           A800                          
                            N17            Anneal_Saddles                
                            N17            Supercooling                  
                            N20            Slitter_Bay_Racks             
                            N21            TL_Exit                       
                            N19            TL_Ent                        
                            N22            A800_Load                     
                            N42            PK_Line_Exit                  
                            N36            PK_Floorspace                 
                            N31            LG_Exit                       
                            N29            LG_Slitter_Ent                
                            N27            HG_Exit                       
                            N24            HG_Slitter_Ent                
                            N43            PK_Auto_Racks                 
                            N33            PK_Saddles                    
                            N23            North_Finished_Goods          
                            NTS_PU         HM_Scrap                      
                            N46            Yellow_Spot                   
                            N47            Slitter_3_Exit                
                            NTS_PU         TS_Breezway_PU                
                            N27            Slitter_Bay_OF                
                            NCTBay         LCL_OF                        
                            N48            Breezeway_SL                  
                            NCTBay         Slitter_4_Exit                
                            N46            SL4_Entry                     
                            N5             Upender                       
                            N15            CM_PU_DO_Storage              
                            NCTBay         CM_Storage_RETURN             
  Conestoga_Path            N1             Conestoga_Fluids_Bay_Pick_Up  
                            N2             Conestoga_Fluids_Bay_Drop_Off 
                            N6             C4_Drop_Off_Outside           
                            N7             C4_Pick_Up_Outside            
                            N12            CM_Conestoga_PU               
                            N12            CM_Conestoga_DO               
                            N12            CM_PU_DO_Storage              
                            N24            C4_Drop_Off_Queue             
  Crane_Fluids_Bay          N1             Fluids_Storage                1443.84, 30.59
                            N3             HMCar_Fluids_Bay_Drop_Off     1493.28, 30.32
                            N3             HMCar_Fluids_Bay_Pick_Up      1493.28, 30.32
                            N4             Conestoga_Fluids_Bay_Pick_Up  1486.88, 17.68
                            N5             Conestoga_Fluids_Bay_Drop_Off 1487.20, 7.60
                            N6             Fluids_Storage_Overflow       1471.04, 4.06
  NET_Crane_Ingot_Storage   N2             LOC_Pusher_Furnace_1_Staging  259.20, 64.80
                            N3             LOC_Pusher_Furnace_2_Staging  313.28, 64.29
                            N4             LOC_Pusher_Furnace_3_Staging  355.52, 65.06
                            N5             LOC_Pusher_Furnace_4_Staging  451.04, 65.48
                            N9             LOC_Scalper_2                 502.56, 88.97
                            N8             LOC_Scalper_2_Staging         318.08, 89.56
                            N1             LOC_Ingot_Storage             127.84, 14.64
                            N6             LOC_Yard_Door                 503.36, 14.41
                            N7             LOC_West_Dock_Entrance        275.84, 90.55
                            N1             LOC_Transfer_Car              127.84, 14.64
  NET_Crane_Pusher_Furnaces N7             LOC_Pusher_Furnace_4_Staging  697.61, 140.97
                            N6             LOC_Pusher_Furnace_3_Staging  601.61, 141.56
                            N5             LOC_Pusher_Furnace_2_Staging  560.17, 140.32
                            N4             LOC_Pusher_Furnace_1_Staging  506.57, 138.94
                            N1             LOC_Scalper_1_Staging         43.91, 80.27
                            N2             LOC_Remelt_Transfer           143.71, 118.08
                            N3             LOC_Ingot_Storage             376.97, 138.29
                            N3             LOC_Transfer_Car              376.97, 138.29
                            N1             LOC_Scalper_1                 43.91, 80.27
  NET_Crane_C4_Bay          N_Truck_Load   C4_Pick_Up_Outside            244.00, 12.66
                            N_Truck_Unload C4_Drop_Off_Outside           244.63, 38.10
                            N_Racks        C4_Racks                      171.83, 25.07
                            N_Mill_Load    C4_Mill_Drop_Off              23.37, 27.17
                            N_Mill_Unload  C4_Mill_Pick_Up               8.98, 27.67
                            N1             C4_Racks_OF                   163.43, 44.44
  NET_Crane_Scrap_Bay       N4             LOC_Scrap_Melt_1              274.02, 79.72
                            N3             LOC_Empty_Tub_Exit            203.00, 8.15
                            N1             LOC_Scrap_Conv_IN_Pick        209.84, 17.11
                            N2             LOC_Scrap_Melt_2              149.69, 83.15
                            N5             LOC_Scrap_Storage             214.72, 68.32
  NET_Scrap_Forktruck       N2             LOC_Scrap_Melt_2              
                            N1             LOC_Empty_Tub_Exit            
                            N1             LOC_Scrap_Conv_IN_Pick        
                            N3             LOC_Scrap_Arrival             
                            N3             LOC_Scrap_Conv_IN             
                            N5             LOC_Scrap_Melt_1              
                            N7             LOC_Scrap_Melt_3              
                            N8             LOC_Scrap_Storage             
  NET_Ingot_Forktruck       N1             LOC_Scalper_1                 
                            N4             LOC_Scalper_1_Staging         
                            N5             LOC_Transfer_Car              
                            N5             LOC_Ingot_Storage             
                            N8             LOC_Pusher_Furnace_1_Staging  
                            N10            LOC_Pusher_Furnace_2_Staging  
                            N11            LOC_Pusher_Furnace_3_Staging  
                            N13            LOC_Pusher_Furnace_4_Staging  
                            N14            LOC_Yard_Door                 
                            N15            LOC_West_Dock_Entrance        
                            N12            LOC_Scalper_2                 
                            N3             LOC_Remelt_Transfer           
                            N10            LOC_Scalper_2_Staging         


********************************************************************************
*                                   Mapping                                    *
********************************************************************************

  Net                 From       To         Dest
  ------------------- ---------- ---------- ------------
  AGV_path            N4         near601    
                      N7         N10        
                      N10        N11        
                      N11        N13        
                      N13        N17        
                      N14        N13        
                      near700    N17        
                      N17        at800      
                      N18        Home3      
                      at800      near800    
                      near800    N21        
                      N21        N33        
                      NPup       N33        
                      near210    NPup       
                      N24        near210    
                      N26        N24        
                      near200    N26        
                      at200      near200    
                      N29        N26        
                      N31        N29        
                      Home3      Home2      
                      Home2      Home1      
                      Home1      near800    
                      N4         N7         
                      N7         near602    
                      N11        near602    
                      N13        N14        
                      N14        near700    
                      near700    at700      
                      N17        near700    
                      N18        N14        
                      at800      N17        
                      near800    at800      
                      Home3      N18        
                      Home2      Home3      
                      Home1      Home2      
                      N21        NPup       
                      NPup       near210    
                      near210    N24        
                      N24        N25        
                      N26        near200    
                      near200    at200      
                      N31        at200      
                      N14        N18        
                      near700    N14        
                      N17        N13        
                      near800    Home1      
                      near210    at210      
  LM_Prep_Path        N3         N2         
                      N4         N3         
                      N5         N4         
                      N6         N5         
                      N7         N6         
                      N8         N7         
                      N10        N8         
                      N3         N4         
                      N4         N5         
                      N5         N6         
                      N6         N7         
                      N7         N8         
                      N8         N9         
                      N8         N10        
                      N10        N11        
  LM_Path             N3         N2         
                      N4         N3         
                      N5         N4         
                      N6         N5         
                      N7         N6         
                      N8         N7         
                      N9         N8         
                      N10        N9         
                      N11        N10        
                      N13        N12        
                      N16        N15        
                      N17        N16        
                      N18        N17        
                      N19        N18        
                      N20        N19        
                      N12        N11        
                      N15        N13        
                      N3         N4         
                      N4         N5         
                      N5         N6         
                      N6         N7         
                      N7         N8         
                      N8         N9         
                      N9         N10        
                      N10        N11        
                      N11        N12        
                      N12        N13        
                      N13        N14        
                      N13        N15        
                      N15        N16        
                      N16        N17        
                      N17        N18        
                      N18        N19        
                      N19        N20        
                      N20        N21        
  Fork_Truck_Path     N3         N2         
                      N4         N3         
                      NS3        N4         
                      N6         NS3        
                      N8         NS3        
                      N10        N8         
                      N9         N10        
                      N11        N9         
                      N12        N11        
                      N13        N12        
                      NCTBay     N13        
                      NOTC       N13        
                      N16        NOTC       
                      N18        N16        
                      N20        N18        
                      N21        N26        
                      N23        NCTBay     
                      N24        N25        
                      N25        N26        
                      N26        N20        
                      N28        N30        
                      N30        NSLBay     
                      N32        NSLBay     
                      N34        N43        
                      N40        N41        
                      N41        N23        
                      N43        N32        
                      NSLBay     N48        
                      N46        NCTBay     
                      N48        N41        
                      N3         N4         
                      N4         NS3        
                      NS3        N6         
                      N6         N7         
                      NS3        N8         
                      N8         N10        
                      N10        N9         
                      N9         N11        
                      N11        N12        
                      N12        N13        
                      N13        NCTBay     
                      N13        NOTC       
                      NOTC       N16        
                      N16        N17        
                      N16        N18        
                      N18        N19        
                      N18        N20        
                      N20        N26        
                      N24        N21        
                      N25        N24        
                      N26        N21        
                      NOTC       N22        
                      NCTBay     N23        
                      N46        N23        
                      N21        N24        
                      N26        N25        
                      N23        N41        
                      N28        N27        
                      N30        N28        
                      N41        N48        
                      NSLBay     N30        
                      N48        NSLBay     
                      N28        N29        
                      N30        N31        
                      N32        N33        
                      NSLBay     N32        
                      N32        N43        
                      N34        N36        
                      N43        N34        
                      N40        N42        
                      N41        N40        
                      NSLBay     NTS_PU     
                      NCTBay     N46        
                      N23        N46        
                      N6         N47        
                      N23        N15        
  Conestoga_Path      N3         N2         
                      N4         N22        
                      N6         N7         
                      N7         N8         
                      N8         N19        
                      N14        N15        
                      N15        N16        
                      N16        N17        
                      N17        N18        
                      N18        N9         
                      N21        N3         
                      N22        N21        
                      N9         N20        
                      N20        N23        
                      N23        N21        
                      N3         N21        
                      N4         N5         
                      N7         N6         
                      N8         N7         
                      N21        N22        
                      N22        N4         
                      N14        N13        
                      N15        N14        
                      N16        N15        
                      N17        N16        
                      N18        N17        
                      N21        N23        
                      N9         N18        
                      N20        N9         
                      N23        N20        
                      N6         N24        
  NET_Scrap_Forktruck N2         N1         
                      N4         N8         
                      N8         N1         
                      N1         N2         
                      N4         N2         
                      N8         N4         
                      N1         N3         
                      N1         N8         
                      N2         N4         
                      N4         N5         
                      N2         N6         
  NET_Ingot_Forktruck N3         N2         
                      N5         N3         
                      N6         N5         
                      N7         N6         
                      N8         N7         
                      N9         N8         
                      N10        N9         
                      N11        N10        
                      N12        N11        
                      N3         N4         
                      N3         N5         
                      N5         N6         
                      N6         N7         
                      N7         N8         
                      N8         N9         
                      N9         N10        
                      N10        N11        
                      N11        N12        
                      N12        N13        
                      N9         N15        


********************************************************************************
*                                  Resources                                   *
********************************************************************************

                                     Res        Ent                                                                      
  Name                Units Stats    Search     Search  Path                      Motion                     Cost        
  ------------------- ----- -------- ---------- ------- ------------------------- -------------------------- ------------
  Crane_616           1     By Unit  Closest    Oldest  Crane_CF_Bay              Empty: 350,135 fpm                     
                                                        Home: Home616             Full: 350,135 fpm                      
                                                                                  Accel: 1 fpss                          
                                                                                  Decel: 1 fpss                          
                                                                                  Pickup: v_CranePU Seconds              
                                                                                  Deposit: v_CraneDO Seconds             

  Crane_614           1     By Unit  Closest    Oldest  Crane_CF_Bay              Empty: 350,135 fpm                     
                                                        Home: Home614             Full: 350,135 fpm                      
                                                                                  Accel: 1 fpss                          
                                                                                  Decel: 1 fpss                          
                                                                                  Pickup: v_CranePU Seconds              
                                                                                  Deposit: v_CraneDO Seconds             

  Crane_208           1     By Unit  Closest    Closest Crane_CM_Bay              Empty: 430,135 fpm                     
                                                        Home: Home208             Full: 430,135 fpm                      
                                                        (Return)                  Accel: 1 fpss                          
                                                                                  Decel: 1 fpss                          
                                                                                  Pickup: v_CranePU Seconds              
                                                                                  Deposit: v_CraneDO Seconds             

  Crane_300           1     By Unit  Closest    Oldest  Crane_CM_Bay              Empty: 460,135 fpm                     
                                                        Home: Home300             Full: 460,135 fpm                      
                                                                                  Accel: 1 fpss                          
                                                                                  Decel: 1 fpss                          
                                                                                  Pickup: v_CranePU Seconds              
                                                                                  Deposit: v_CraneDO Seconds             

  Crane_ASRS          1     By Unit  Closest    Oldest  Crane_CF_Bay              Empty: 510,135 fpm                     
                                                        Home: HomeASRS            Full: 510,135 fpm                      
                                                                                  Accel: 1 fpss                          
                                                                                  Decel: 1 fpss                          
                                                                                  Pickup: v_ASRS_PU Seconds              
                                                                                  Deposit: v_ASRS_DO Seconds             

  Crane_624           1     By Unit  Closest    Closest Slitter_Bay               Empty: 350,135 fpm                     
                                                        Home: nSuperCool          Full: 350,135 fpm                      
                                                                                  Accel: 1 fpss                          
                                                                                  Decel: 1 fpss                          
                                                                                  Pickup: v_CranePU Seconds              
                                                                                  Deposit: v_CraneDO Seconds             

  Crane_622           1     By Unit  Least Used Oldest  Slitter_Bay               Empty: 350,135 fpm                     
                                                        Home: N22Home             Full: 350,135 fpm                      
                                                                                  Accel: 1 fpss                          
                                                                                  Decel: 1 fpss                          
                                                                                  Pickup: v_CranePU Seconds              
                                                                                  Deposit: v_CraneDO Seconds             

  Crane_634           1     By Unit  Least Used Oldest  Coating_Bay               Empty: 350,135 fpm                     
                                                        Home: NHOME               Full: 350,135 fpm                      
                                                                                  Accel: 1 fpss                          
                                                                                  Decel: 1 fpss                          
                                                                                  Pickup: v_CranePU Seconds              
                                                                                  Deposit: v_CraneDO Seconds             

  AGV_1               3     By Unit  Closest    Closest AGV_path                  Empty: 150 fpm                         
                                                        Home: Home1               Full: 80 fpm                           
                                                                                  Accel: 0.25 fpss                       
                                                                                  Decel: 0.25 fpss                       
                                                                                  Pickup: 60 Seconds                     
                                                                                  Deposit: 60 Seconds                    

  Car_HM              1     By Unit  Closest    Oldest  Car_HM_path               Empty: 150 fpm                         
                                                        Home: N1                  Full: 150 fpm                          

  Car_C3              1     By Unit  Closest    Oldest  Car_C3_path               Empty: 150 fpm                         
                                                        Home: N1                  Full: 150 fpm                          
                                                        (Return)                                                         

  Car_AN_N            1     By Unit  Closest    Oldest  Car_AN_north_path         Empty: 150 fpm                         
                                                        Home: N1                  Full: 150 fpm                          

  Car_AN_S            1     By Unit  Closest    Oldest  Car_AN_south_path         Empty: 150 fpm                         
                                                        Home: N1                  Full: 150 fpm                          

  Transfer_Car        1     By Unit  Closest    Oldest  LM_Prep_Path              Empty: 60 fpm                          
                                                        Home: N2                  Full: 60 fpm                           
                                                        (Return)                                                         

  Car_Orange          1     By Unit  Closest    Oldest  Car_Orange_path           Empty: 150 fpm                         
                                                        Home: NSL                 Full: 150 fpm                          

  LMPrep_CC1          1     By Unit  Closest    Oldest  LM_Prep_Path              Empty: 60 fpm                          
                                                        Home: N3                  Full: 60 fpm                           
                                                        (Return)                                                         

  LMPrep_CC2          1     By Unit  Closest    Oldest  LM_Prep_Path              Empty: 60 fpm                          
                                                        Home: N5                  Full: 60 fpm                           
                                                        (Return)                                                         

  LMPrep_CC3          1     By Unit  Closest    Oldest  LM_Prep_Path              Empty: 60 fpm                          
                                                        Home: N9                  Full: 60 fpm                           
                                                        (Return)                                                         

  LMPrep_CC4          1     By Unit  Closest    Oldest  LM_Prep_Path              Empty: 60 fpm                          
                                                        Home: N10                 Full: 60 fpm                           
                                                        (Return)                                                         

  ASRS_CC1            1     By Unit  Closest    Oldest  LM_Path                   Empty: 60 fpm                          
                                                        Home: N1                  Full: 60 fpm                           
                                                        (Return)                                                         

  ASRS_CC2            1     By Unit  Closest    Oldest  LM_Path                   Empty: 60 fpm                          
                                                        Home: N4                  Full: 60 fpm                           
                                                        (Return)                                                         

  LM_Ent_CC1          1     By Unit  Closest    Oldest  LM_Path                   Empty: 60 fpm                          
                                                        Home: N7                  Full: 60 fpm                           
                                                        (Return)                                                         

  LM_Exit_CC1         1     By Unit  None       Oldest  LM_Path                   Empty: 60 fpm                          
                                                        Home: N12                 Full: 60 fpm                           
                                                        (Return)                                                         

  LM_Exit_CC2         1     By Unit  Closest    Oldest  LM_Path                   Empty: 60 fpm                          
                                                        Home: N15                 Full: 60 fpm                           
                                                        (Return)                                                         

  LM_Exit_CC3         1     By Unit  Closest    Oldest  LM_Path                   Empty: 60 fpm                          
                                                        Home: N19                 Full: 60 fpm                           
                                                        (Return)                                                         

  ForkTrucks          8     By Unit  Closest    Closest Fork_Truck_Path           Empty: 546 fpm                         
                                                        Home: N13                 Full: 546 fpm                          

  Conestoga           5     By Unit  Closest    Closest Conestoga_Path            Empty: 545 fpm                         
                                                        Home: N1                  Full: 545 fpm                          

  Fluids_Crane        1     By Unit  Closest    Oldest  Crane_Fluids_Bay          Empty: 350,135 fpm                     
                                                        Home: Origin              Full: 350,135 fpm                      
                                                                                  Accel: 1 fpss                          
                                                                                  Decel: 1 fpss                          
                                                                                  Pickup: 30 Seconds                     
                                                                                  Deposit: 30 Seconds                    

  RES_Crane_142       1     By Unit  Closest    Oldest  NET_Crane_Pusher_Furnaces Empty: 350,135 fpm                     
                                                        Home: Origin              Full: 350,135 fpm                      
                                                                                  Accel: 1 fpss                          
                                                                                  Decel: 1 fpss                          
                                                                                  Pickup: v_CranePU Seconds              
                                                                                  Deposit: v_CraneDO Seconds             

  RES_Crane_144       1     By Unit  Closest    Oldest  NET_Crane_Ingot_Storage   Empty: 350,135 fpm                     
                                                        Home: Origin              Full: 350,135 fpm                      
                                                                                  Accel: 1 fpss                          
                                                                                  Decel: 1 fpss                          
                                                                                  Pickup: v_CranePU Seconds              
                                                                                  Deposit: v_CraneDO Seconds             

  RES_Crane_C4        1     By Unit  Closest    Oldest  NET_Crane_C4_Bay          Empty: 150,150 fpm                     
                                                        Home: Origin              Full: 150,150 fpm                      

  RES_Crane_112_114   1     By Unit  Closest    Oldest  NET_Crane_Scrap_Bay       Empty: 200,350 fpm                     
                                                        Home: Origin              Full: 200,350 fpm                      

  RES_Scrap_Forktruck 4     By Unit  Closest    Oldest  NET_Scrap_Forktruck       Empty: 546 fpm                         
                                                        Home: N1                  Full: 546 fpm                          

  RES_Ingot_Forktruck 4     By Unit  Closest    Oldest  NET_Ingot_Forktruck       Empty: 546 fpm                         
                                                        Home: N1                  Full: 546 fpm                          


********************************************************************************
*                                Park Searches                                 *
********************************************************************************

  Res        Node       Parking Node List
  ---------- ---------- ------------
  AGV_1      at601      at602, at200, Home3
             at700      at200, at602, Home3
             at800      at200, at602, Home3
             at210      at200, at602, Home3


********************************************************************************
*                             Resource Node Logic                              *
********************************************************************************

  Res        Node       Entry Logic                      Exit Logic 
  ---------- ---------- -------------------------------- ------------------
  Crane_624  Origin     //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             BridgeEnd  //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N7         //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N11        //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             nSuperCool //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N1         //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N3         //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N4         //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N8         //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N13        //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N14        //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N24        //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N2         //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N6         //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N12        //ZONE 1                          
                        If yCrane_Zones[1] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[1] = 1               
             N5         //ZONE 2                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 2               
             nSlitter_Racks //ZONE 2                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 2               
             N20        //ZONE 2                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 2               
             N21        //ZONE 2                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 2               
             N22        //ZONE 2                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 2               
             N23        //ZONE 2                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 2               
             N9         //ZONE 2                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 2               
             N10        //ZONE 2                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[1] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 2               
             Rail1End   //ZONE 3                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[1] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 3               
             Rail2End   //ZONE 3                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[1] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 3               
             N15        //ZONE 3                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[1] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 3               
             N16        //ZONE 3                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[1] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 3               
             N17        //ZONE 3                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[1] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 3               
             N18        //ZONE 3                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[1] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 3               
             N19        //ZONE 3                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[1] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 3               
             N22Home    //ZONE 3                          
                        If yCrane_Zones[1] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[1] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[1] = 3               
  Crane_622  Origin     //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             BridgeEnd  //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N7         //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N11        //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             nSuperCool //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N1         //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N3         //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N4         //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N8         //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N13        //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N14        //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N24        //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N2         //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N6         //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N12        //ZONE 1                          
                        If yCrane_Zones[2] = 2 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        yCrane_Zones[2] = 1               
             N5         //ZONE 2                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 2               
             nSlitter_Racks //ZONE 2                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 2               
             N20        //ZONE 2                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 2               
             N21        //ZONE 2                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 2               
             N22        //ZONE 2                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 2               
             N23        //ZONE 2                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 2               
             N9         //ZONE 2                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 2               
             N10        //ZONE 2                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        }                                 
                        Else If yCrane_Zones[2] = 3 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 2               
             Rail1End   //ZONE 3                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[2] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 3               
             Rail2End   //ZONE 3                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[2] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 3               
             N15        //ZONE 3                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[2] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 3               
             N16        //ZONE 3                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[2] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 3               
             N17        //ZONE 3                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[2] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 3               
             N18        //ZONE 3                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[2] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 3               
             N19        //ZONE 3                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[2] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 3               
             N22Home    //ZONE 3                          
                        If yCrane_Zones[2] = 1 Then       
                        {                                 
                        	Inc vTraff_OTC_Brzway            
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        Else If yCrane_Zones[2] = 2 Then  
                        {                                 
                        	Inc vTraff_SL_Bay_Brzway         
                        }                                 
                        yCrane_Zones[2] = 3               
  Crane_634  Origin     //ZONE 1                          
                        If yCrane_Zones[3] = 2 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 1               
             BridgeEnd  //ZONE 1                          
                        If yCrane_Zones[3] = 2 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 1               
             nLCL_Racks //ZONE 1                          
                        If yCrane_Zones[3] = 2 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 1               
             N3         //ZONE 1                          
                        If yCrane_Zones[3] = 2 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 1               
             N4         //ZONE 1                          
                        If yCrane_Zones[3] = 2 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 1               
             N5         //ZONE 1                          
                        If yCrane_Zones[3] = 2 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 1               
             N6         //ZONE 1                          
                        If yCrane_Zones[3] = 2 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 1               
             Rail1End   //ZONE 2                          
                        If yCrane_Zones[3] = 1 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 2               
             Rail2End   //ZONE 2                          
                        If yCrane_Zones[3] = 1 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 2               
             N1         //ZONE 2                          
                        If yCrane_Zones[3] = 1 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 2               
             N2         //ZONE 2                          
                        If yCrane_Zones[3] = 1 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 2               
             N7         //ZONE 2                          
                        If yCrane_Zones[3] = 1 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 2               
             N8         //ZONE 2                          
                        If yCrane_Zones[3] = 1 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 2               
             NHOME      //ZONE 2                          
                        If yCrane_Zones[3] = 1 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 2               
             N9         //ZONE 2                          
                        If yCrane_Zones[3] = 1 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 2               
             N10        //ZONE 2                          
                        If yCrane_Zones[3] = 1 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 2               
             N11        //ZONE 2                          
                        If yCrane_Zones[3] = 1 Then       
                        {                                 
                        	Inc vTraff_Coating_Bay           
                        }                                 
                        yCrane_Zones[3] = 2               
  AGV_1      at602      vAGVAtA602 = 1                   vAGVAtA602=0 
             at800      Inc yTraffic[3]                  vAGVAtA800=0 
                                                          
                        vAGVAtA800=1                      
                        INT iMaxCount, iMaxDest, iCoolHours  
                        # Find which destination has the most coils waiting  
                        iMaxCount=0                       
                        iMaxDest=0                        
                        IF v_Coils_to_A800_601>iMaxCount THEN   
                        	{                                
                        	iMaxCount=v_Coils_to_A800_601    
                        	iMaxDest=m_S3                    
                        	}                                
                        IF v_Coils_to_A800_700>iMaxCount THEN   
                        	{                                
                        	iMaxCount=v_Coils_to_A800_700    
                        	iMaxDest=m_CT                    
                        	}                                
                                                          
                        v_Destination_for_A800=iMaxDest   
                        	                                 
                        IF CONTENTS(LOC(A800_Load),Carrier)=0 AND iMaxDest<>0 THEN  
                        	{                                
                        	ORDER 1 Carrier TO A800_Load     
                        	}                                
                                                          
             at200      vAGVAtA200=1                     vAGVAtA200=0 
                        IF CONTENTS(LOC(A200),Carrier)=0 THEN ORDER 1 Carrier TO A200  
             at700      vAGVAtA700=1                     vAGVAtA700=0 
                                                          
                        IF CONTENTS(LOC(A700_Load),Carrier)=0 THEN ORDER 1 Carrier TO A700_Load  
             near700    Inc yTraffic[4]                   
             NPup       Inc yTraffic[2]                   
             Home2      Inc yTraffic[3]                   
             NCT        Inc yTraffic[4]                   
  Car_Orange NCT        Inc yTraffic[4]                   
             NSL        Inc yTraffic[3]                   
             NCF        Inc yTraffic[2]                   
  ForkTrucks NS3        Inc yTraffic[1]                   
             NSLBay     Inc yTraffic[5]                   
             NCTBay     Inc yTraffic[4]                   
             NOTC       Inc yTraffic[3]                   
             NTS_PU     Inc yTraffic[6]                  Inc yTraffic[6] 


********************************************************************************
*                                  Processing                                  *
********************************************************************************

                                                              Process                                                 Routing

 Entity               Location                      Operation            Blk  Output               Destination                  Rule         Move Logic
 -------------------- ----------------------------- ------------------   ---- -------------------- ---------------------------- -----------  ------------
 Dummy                Production_Control            Int lv_lb_Produced
                                                    Int lv_Coils_Produced
                                                    Int iStep
                                                    Real lv_Rand
                                                    Real lv_Month_1_DAILY_Demand
                                                    Real lv_Month_2_DAILY_Demand
                                                    Real lv_Month_3_DAILY_Demand
                                                    Real lv_Month_1_Remainder
                                                    Real lv_Month_2_Remainder
                                                    Real lv_Month_3_Remainder
                                                    Real lv_Current_Remainder //tracks when additional coils need to m_BE added to the daily demand
                                                    Int lv_Day_Counter = 1 //tracks demand for each day (y_Day_Countdown)
                                                    int lv_Day_Counter_Per_Month = 1 //tracks days in the month
                                                    Int iWIPRow
                                                    
                                                    //WIP Orders
                                                    iWIPRow = 1  //Row in the WIP Array
                                                    While iWIPRow <= 2000 Do
                                                    {
                                                    	If yWIP[iWIPRow, 12] <> Exclude Then //AVOID Excluded product
                                                    	{
                                                    		//Assign Attributes
                                                    		aRow = iWIPRow
                                                    		a_Alloy = yWIP[iWIPRow,11]
                                                    		a_Destination = yWIP[iWIPRow,10]
                                                    		aProduct = yWIP[iWIPRow,13]
                                                    		aRoutingIndex = yWIP[iWIPRow,14]
                                                    		//ADDED 9/16/2021
                                                    		a_Owner = yProduct_Data[aProduct, 2]
                                                    		a_Category = yProduct_Data[aProduct, 3]
                                                    		
                                                    		Order yWIP[iWIPRow,6] Coil To WIP  //Orders a coil to WIP
                                                    	}
                                                    	Inc iWIPRow  //moves to the next row in the array
                                                    	If yWIP[iWIPRow,6] = 0 Then iWIPRow = 2001  //Checks to see if next row is blank
                                                    }
                                                    
                                                    //determine coils per day for each month 
                                                    lv_Month_1_DAILY_Demand = (vMonth1_Demand / vMonth1_Days) 
                                                    If lv_Month_1_DAILY_Demand > Trunc(lv_Month_1_DAILY_Demand) Then lv_Month_1_Remainder = (lv_Month_1_DAILY_Demand - Trunc(lv_Month_1_DAILY_Demand))
                                                    lv_Month_2_DAILY_Demand = (vMonth2_Demand / vMonth2_Days) 
                                                    If lv_Month_2_DAILY_Demand > Trunc(lv_Month_2_DAILY_Demand) Then lv_Month_2_Remainder = (lv_Month_2_DAILY_Demand - Trunc(lv_Month_2_DAILY_Demand))
                                                    lv_Month_3_DAILY_Demand = (vMonth3_Demand / vMonth3_Days) 
                                                    If lv_Month_3_DAILY_Demand > Trunc(lv_Month_3_DAILY_Demand) Then lv_Month_3_Remainder = (lv_Month_3_DAILY_Demand - Trunc(lv_Month_3_DAILY_Demand))
                                                    
                                                    //set remainder for first month
                                                    lv_Current_Remainder = lv_Month_1_Remainder 
                                                    
                                                    //New Orders Logic
                                                    While vMonth <= 3 Do
                                                    {
                                                    	aProduct = 0 //reset
                                                    	If vMonth = 1 Then
                                                    	{
                                                    		If y_Day_Countdown[lv_Day_Counter, 2] > 0 Then
                                                    		{
                                                    			If lv_Coils_Produced < lv_Month_1_DAILY_Demand Then //coils per day
                                                    			{
                                                    				aProduct = udMonth1Demand()
                                                    			}
                                                    			Else If lv_lb_Produced < m_Daily_Lb_Demand And Contents(HM_Ent) = 0 Then //pounds per day
                                                    			{		
                                                    				//Determine Owner
                                                    				lv_Rand = rand(1)
                                                    				If lv_Rand <= v_TAA_Percent Then a_Owner = TAA 
                                                    				Else a_Owner = Novelis 
                                                    				//Determine Type
                                                    				lv_Rand = rand(1)
                                                    				If lv_Rand <= v_CB_Percent Then a_Category = m_CB //Can Body
                                                    				Else a_Category = m_BE 
                                                    				
                                                    				If a_Owner = TAA Then //ADD
                                                    				{
                                                    					If a_Category = m_CB Then aProduct = udTAA_CB_Excess() 
                                                    					Else If a_Category = m_BE Then aProduct = udTAA_BE_Excess() 
                                                    					//TEMP! Ajust Product Number
                                                    					aProduct = y_TEMP_Adjusted_Prod_Num[aProduct]
                                                    				}
                                                    				Else If a_Owner = Novelis Then //ADD
                                                    				{
                                                    					If a_Category = m_CB Then aProduct = udNOVELIS_CB_Excess() 
                                                    					Else If a_Category = m_BE Then aProduct = udNOVELIS_BE_Excess() 
                                                    					//TEMP! Ajust Product Number
                                                    					aProduct = y_TEMP_Adjusted_Prod_Num[aProduct]
                                                    				}
                                                    			}
                                                    			Else
                                                    			{
                                                    				//do nothing! We've made enough coils for today
                                                    				wait 1 min 
                                                    			}
                                                    		}
                                                    		Else If y_Day_Countdown[lv_Day_Counter, 2] <= 0 Then
                                                    		{
                                                    			//reset for the next day
                                                    			lv_Coils_Produced = 0
                                                    			lv_lb_Produced = 0
                                                    			Inc lv_Day_Counter 
                                                    			Inc lv_Day_Counter_Per_Month 
                                                    			Inc lv_Current_Remainder, lv_Month_1_Remainder 
                                                    			If (lv_Current_Remainder - 1) >= 0 Then lv_Month_1_DAILY_Demand = ((vMonth1_Demand / vMonth1_Days) + 1)
                                                    			Else lv_Month_1_DAILY_Demand = (vMonth1_Demand / vMonth1_Days)
                                                    			If lv_Day_Counter_Per_Month > vMonth1_Days Then
                                                    			{
                                                    				Inc vMonth 
                                                    				lv_Day_Counter_Per_Month = 1
                                                    				//stats
                                                    				v_STATS_Monthly_Exits_North = vExitNorth 
                                                    				v_STATS_Monthly_Exits_South = vExitSouth 
                                                    				v_STATS_Monthly_Exits_Total = vExitTotalPlant 
                                                    				vExitNorth = 0
                                                    				vExitSouth = 0
                                                    				vExitTotalPlant = 0
                                                    			}
                                                    		}	
                                                    	}	
                                                    	Else If vMonth = 2 Then 
                                                    	{
                                                    		If y_Day_Countdown[lv_Day_Counter, 2] > 0 Then
                                                    		{
                                                    			If lv_Coils_Produced < lv_Month_2_DAILY_Demand Then //coils per day
                                                    			{
                                                    				aProduct = udMonth2Demand()
                                                    			}
                                                    			Else If lv_lb_Produced < m_Daily_Lb_Demand And Contents(HM_Ent) = 0 Then //pounds per day
                                                    			{		
                                                    				//Determine Owner
                                                    				lv_Rand = rand(1)
                                                    				If lv_Rand <= v_TAA_Percent Then a_Owner = TAA 
                                                    				Else a_Owner = Novelis 
                                                    				//Determine Type
                                                    				lv_Rand = rand(1)
                                                    				If lv_Rand <= v_CB_Percent Then a_Category = m_CB //Can Body
                                                    				Else a_Category = m_BE //
                                                    				
                                                    				If a_Owner = TAA Then //ADD
                                                    				{
                                                    					If a_Category = m_CB Then aProduct = udTAA_CB_Excess() 
                                                    					Else If a_Category = m_BE Then aProduct = udTAA_BE_Excess() 
                                                    					//TEMP! Ajust Product Number
                                                    					aProduct = y_TEMP_Adjusted_Prod_Num[aProduct]
                                                    				}
                                                    				Else If a_Owner = Novelis Then //ADD
                                                    				{
                                                    					If a_Category = m_CB Then aProduct = udNOVELIS_CB_Excess() 
                                                    					Else If a_Category = m_BE Then aProduct = udNOVELIS_BE_Excess() 
                                                    					//TEMP! Ajust Product Number
                                                    					aProduct = y_TEMP_Adjusted_Prod_Num[aProduct]
                                                    				}
                                                    			}
                                                    			Else
                                                    			{
                                                    				//do nothing! We've made enough coils for today
                                                    				wait 1 min 
                                                    			}
                                                    		}
                                                    		Else If y_Day_Countdown[lv_Day_Counter, 2] <= 0 Then
                                                    		{
                                                    			//reset for the next day
                                                    			lv_Coils_Produced = 0
                                                    			lv_lb_Produced = 0
                                                    			Inc lv_Day_Counter 
                                                    			Inc lv_Day_Counter_Per_Month 
                                                    			Inc lv_Current_Remainder, lv_Month_2_Remainder 
                                                    			If (lv_Current_Remainder - 1) >= 0 Then lv_Month_2_DAILY_Demand = ((vMonth2_Demand / vMonth2_Days) + 1)
                                                    			Else lv_Month_2_DAILY_Demand = (vMonth2_Demand / vMonth2_Days)
                                                    			If lv_Day_Counter_Per_Month > vMonth2_Days Then
                                                    			{
                                                    				Inc vMonth 
                                                    				lv_Day_Counter_Per_Month = 1
                                                    				//stats
                                                    				v_STATS_Monthly_Exits_North = vExitNorth 
                                                    				v_STATS_Monthly_Exits_South = vExitSouth 
                                                    				v_STATS_Monthly_Exits_Total = vExitTotalPlant 
                                                    				vExitNorth = 0
                                                    				vExitSouth = 0
                                                    				vExitTotalPlant = 0
                                                    			}
                                                    		}	
                                                    	}	
                                                    	Else If vMonth = 3 Then 
                                                    	{
                                                    		If y_Day_Countdown[lv_Day_Counter, 2] > 0 Then
                                                    		{
                                                    			If lv_Coils_Produced < lv_Month_3_DAILY_Demand Then //coils per day
                                                    			{
                                                    				aProduct = udMonth3Demand()
                                                    			}
                                                    			Else If lv_lb_Produced < m_Daily_Lb_Demand And Contents(HM_Ent) = 0 Then //pounds per day
                                                    			{		
                                                    				//Determine Owner
                                                    				lv_Rand = rand(1)
                                                    				If lv_Rand <= v_TAA_Percent Then a_Owner = TAA 
                                                    				Else a_Owner = Novelis 
                                                    				//Determine Type
                                                    				lv_Rand = rand(1)
                                                    				If lv_Rand <= v_CB_Percent Then a_Category = m_CB //Can Body
                                                    				Else a_Category = m_BE //
                                                    				
                                                    				If a_Owner = TAA Then //ADD
                                                    				{
                                                    					If a_Category = m_CB Then aProduct = udTAA_CB_Excess() 
                                                    					Else If a_Category = m_BE Then aProduct = udTAA_BE_Excess() 
                                                    					//TEMP! Ajust Product Number
                                                    					aProduct = y_TEMP_Adjusted_Prod_Num[aProduct]
                                                    				}
                                                    				Else If a_Owner = Novelis Then //ADD
                                                    				{
                                                    					If a_Category = m_CB Then aProduct = udNOVELIS_CB_Excess() 
                                                    					Else If a_Category = m_BE Then aProduct = udNOVELIS_BE_Excess() 
                                                    					//TEMP! Ajust Product Number
                                                    					aProduct = y_TEMP_Adjusted_Prod_Num[aProduct]
                                                    				}
                                                    			}
                                                    			Else
                                                    			{
                                                    				//do nothing! We've made enough coils for today
                                                    				wait 1 min 
                                                    			}
                                                    		}
                                                    		Else If y_Day_Countdown[lv_Day_Counter, 2] <= 0 Then
                                                    		{
                                                    			//reset for the next day
                                                    			lv_Coils_Produced = 0
                                                    			lv_lb_Produced = 0
                                                    			Inc lv_Day_Counter 
                                                    			Inc lv_Day_Counter_Per_Month 
                                                    			Inc lv_Current_Remainder, lv_Month_3_Remainder 
                                                    			If (lv_Current_Remainder - 1) >= 0 Then lv_Month_3_DAILY_Demand = ((vMonth3_Demand / vMonth3_Days) + 1)
                                                    			Else lv_Month_3_DAILY_Demand = (vMonth3_Demand / vMonth3_Days)
                                                    			If lv_Day_Counter_Per_Month > vMonth3_Days Then
                                                    			{
                                                    				Inc vMonth 
                                                    				lv_Day_Counter_Per_Month = 1
                                                    				//stats
                                                    				v_STATS_Monthly_Exits_North = vExitNorth 
                                                    				v_STATS_Monthly_Exits_South = vExitSouth 
                                                    				v_STATS_Monthly_Exits_Total = vExitTotalPlant 
                                                    				vExitNorth = 0
                                                    				vExitSouth = 0
                                                    				vExitTotalPlant = 0
                                                    			}
                                                    		}	
                                                    	}	
                                                    
                                                    	If aProduct > 0 then
                                                    	{
                                                    		iStep = yProduct_Data[aProduct,8]  //assigns start row for Routing Array	
                                                    		While iStep < 2000 Do
                                                    		{
                                                    			If yRouting_Data[iStep,3] = m_HM And yRouting_Data[iStep + 1,3] < 30 Then //CHANGED!!! Can SC and PF m_BE negative numbers? 
                                                    			{
                                                    				aRoutingIndex = iStep  //Assigns Routing Index for the Routing Array
                                                    				Goto ORDERENTITY //Skip to creating part below
                                                    			}
                                                    			Else If yRouting_Data[iStep,2] <= yRouting_Data[iStep + 1,2] Then
                                                    			{
                                                    				Inc iStep  //Checks to make sure it is still the same part
                                                    			}
                                                    			Else 
                                                    			{
                                                    				Display "No HM Starting Point " $ ", Product =" $ aProduct $ ", Row = " $ iStep
                                                    				GoTo NEXTPART
                                                    			}
                                                    		}
                                                    			
                                                    		ORDERENTITY:
                                                    		
                                                    		//Assign Attributes
                                                    		a_Destination = m_HM 
                                                    		a_Alloy = yProduct_Data[aProduct,9]
                                                    		If a_Alloy = 6000 Then a_Alloy = 6000
                                                    		Else If a_Alloy = 7000 Or a_Alloy = 5000 Then a_Alloy = 5000
                                                    		Else a_Alloy = 3000
                                                    		a_Owner = yProduct_Data[aProduct, 2]
                                                    		a_Category = yProduct_Data[aProduct, 3]
                                                    			
                                                    		//HM Time
                                                    		//Wait yRouting_Data[iStep,12] hr //NOTE: We send this to the HM to wait again? ERROR? DOUBLEDIPPING?
                                                    		Order 1 Coil To HM_Ent	
                                                    			
                                                    		//daily stats
                                                    		Inc lv_Coils_Produced 
                                                    		Inc lv_lb_Produced, yRouting_Data[aRoutingIndex, 8]
                                                    					
                                                    		NEXTPART:
                                                    	}
                                                    }                    1    Dummy                EXIT                         FIRST 1      
 Coil                 WIP                           Int iWIPLoc = yWIP[aRow,12]  //Storage Location from WIP Array
                                                    //Determine where to go to
                                                    If iWIPLoc = Exclude Then Route 1
                                                    Else
                                                    {
                                                    	//Update Variables And WIP
                                                    	Inc vCoilsInPlant
                                                    	If a_Destination < 5 Or a_Destination = 15 Then Inc vMill_WIP
                                                    	Else 
                                                    	{
                                                    		Inc vFinishing_WIP
                                                    		Inc a_DUMMY_First_tracker
                                                    	}
                                                    	Inc y_Coil_Count[a_Destination+1,1] // # Coils waiting for the next operation
                                                    	Inc y_Coil_Count[a_Destination+1,2], yRouting_Data[aRoutingIndex,12] // Hrs of work waiting for the next operation
                                                    	
                                                    	If iWIPLoc = CMCool_Lower_1 And a_Alloy >= 5000 THEN 
                                                    	{
                                                    		//s_CM_LM_Queue_ENTER
                                                    		If a_Owner = TAA then 
                                                    		{
                                                    			a_Already_Added_to_C4_Queue_Lb = 1
                                                    			Inc v_Current_CM_LM_Queue, yProduct_Data[aProduct, 4]
                                                    		}
                                                    		ROUTE 2
                                                    	}
                                                    	Else If iWIPLoc = CMCool_Lower_1 And a_Alloy < 5000 THEN 
                                                    	{
                                                    		//s_CM_LM_Queue_ENTER
                                                    		If a_Owner = TAA then 
                                                    		{
                                                    			a_Already_Added_to_C4_Queue_Lb = 1
                                                    			Inc v_Current_CM_LM_Queue, yProduct_Data[aProduct, 4]
                                                    		}
                                                    		ROUTE 3
                                                    	}
                                                    	Else If iWIPLoc = CFCool_1 THEN ROUTE 4
                                                    	Else If iWIPLoc = LMEntQ THEN 
                                                    	{
                                                    		//s_CM_LM_Queue_ENTER
                                                    		If a_Owner = TAA then 
                                                    		{
                                                    			a_Already_Added_to_C4_Queue_Lb = 1
                                                    			Inc v_Current_CM_LM_Queue, yProduct_Data[aProduct, 4]
                                                    		}
                                                    		ROUTE 5
                                                    	}
                                                    	Else If iWIPLoc = C3Ent THEN ROUTE 6
                                                    	Else If iWIPLoc = ASRSEntry THEN ROUTE 7
                                                    	Else If iWIPLoc = ASRSStore THEN ROUTE 8
                                                    	Else If iWIPLoc = Forced_Air_Cool_Tier1 and a_Destination = 4 THEN ROUTE 19
                                                    	Else If iWIPLoc = Forced_Air_Cool_Tier1 THEN ROUTE 9
                                                    	Else If iWIPLoc = SL3_Entry THEN ROUTE 10
                                                    	Else If iWIPLoc = LCL_Racks THEN ROUTE 11
                                                    	Else If iWIPLoc = Anneal_Saddles THEN ROUTE 12
                                                    	Else If iWIPLoc = Slitter_Bay_Racks THEN ROUTE 13
                                                    	Else If iWIPLoc = PK_Saddles THEN ROUTE 14
                                                    	Else If iWIPLoc = PK_Floorspace THEN ROUTE 15
                                                    	Else If iWIPLoc = PK_Auto_Racks THEN ROUTE 16
                                                    	Else If iWIPLoc = Supercooling THEN ROUTE 17
                                                    	Else If iWIPLoc = P2_South_Ent THEN ROUTE 18
                                                    	Else If iWIPLoc = C4_Mill_Input_Conv THEN ROUTE 20 //Originally C4_Queue THESE LOC IDs may have CHANGED!
                                                    	Else If iWIPLoc = C4_Racks THEN ROUTE 21 //Originally C4_OF
                                                    	Else Display "WIP has undefined location"
                                                    }                    1    Dummy                EXIT                         FIRST 1      
                                                                         2    Coil                 CMCool_Lower_1               FIRST 1      aFrom = 0
                                                                              Coil                 CMCool_Lower_2               FIRST        aFrom = 0
                                                                              Coil                 CMCool_Lower_3               FIRST        aFrom = 0
                                                                              Coil                 CMCool_5182_OF               FIRST        aFrom = 0
                                                                         3    Coil                 CMCool_Middle_1              FIRST 1      aFrom = 0
                                                                              Coil                 CMCool_Middle_2              FIRST        aFrom = 0
                                                                              Coil                 CMCool_Middle_3              FIRST        aFrom = 0
                                                                              Coil                 CMCool_Upper_1               FIRST        aFrom = 0
                                                                              Coil                 CMCool_Upper_2               FIRST        aFrom = 0
                                                                              Coil                 CMCool_Upper_3               FIRST        aFrom = 0
                                                                              Coil                 CMCool_Lower_1               FIRST        aFrom = 0
                                                                              Coil                 CMCool_Lower_2               FIRST        aFrom = 0
                                                                              Coil                 CMCool_Lower_3               FIRST        aFrom = 0
                                                                              Coil                 CMCool_HM_OF                 FIRST        aFrom = 0
                                                                         4    Coil                 CFCool_1                     FIRST 1      aFrom = 0
                                                                              Coil                 CFCool_2                     FIRST        aFrom = 0
                                                                              Coil                 CFCool_3                     FIRST        aFrom = 0
                                                                              Coil                 CFCool_4                     FIRST        aFrom = 0
                                                                              Coil                 CFDensePack                  FIRST        aFrom = 0
                                                                              Coil                 CF_OF                        FIRST        aFrom = 0
                                                                         5    Coil                 LMEntQ                       FIRST 1      aFrom = 1
                                                                         6    Coil                 C3Ent                        FIRST 1      aFrom = 1
                                                                         7    Coil                 ASRSEntry                    FIRST 1      aFrom = 1
                                                                         8    Coil                 ASRSStore                    FIRST 1      aFrom = 3
                                                                                                                                             If a_Destination>4 Then 
                                                                                                                                             {
                                                                                                                                             	Dec vFinishing_WIP
                                                                                                                                             	Inc vMill_WIP
                                                                                                                                             }
                                                                              Coil                 ASRSMiddle                   FIRST        aFrom = 3
                                                                                                                                             If a_Destination>4 Then 
                                                                                                                                             {
                                                                                                                                             	Dec vFinishing_WIP
                                                                                                                                             	Inc vMill_WIP
                                                                                                                                             }
                                                                         9    Coil                 Forced_Air_Cool_Tier1        FIRST 1      aFrom = 1
                                                                              Coil                 LMCoolSE                     FIRST        aFrom = 1
                                                                              Coil                 FAC_Overflow                 FIRST        aFrom = 1
                                                                         10   Coil                 SL3_Entry                    FIRST 1      
                                                                         11   Coil                 LCL_Racks                    FIRST 1      
                                                                              Coil                 LCL_OF                       FIRST        
                                                                         12   Coil                 Anneal_Saddles               FIRST 1      aFrom = 1
                                                                              Coil                 Anneal_Saddles_OF            FIRST        aFrom = 1
                                                                         13   Coil                 Slitter_Bay_Racks            FIRST 1      
                                                                              Coil                 Slitter_Bay_OF               FIRST        
                                                                         14   Coil                 PK_Saddles                   FIRST 1      
                                                                         15   Coil                 PK_Floorspace                FIRST 1      
                                                                         16   Coil                 PK_Auto_Racks                FIRST 1      
                                                                         17   Coil                 Supercooling                 FIRST 1      aFrom = 1
                                                                         18   Coil                 P2_South_Ent                 FIRST 1      
                                                                         19   Coil                 Forced_Air_Cool_Tier2        FIRST 1      aFrom = 1
                                                                              Coil                 FAC_Overflow                 FIRST        aFrom = 1
                                                                         20   Coil                 C4_Mill_Input_Conv           FIRST 1      aFrom=0
                                                                         21   Coil                 C4_Racks                     FIRST 1      aFrom=15
 Rate_Counter         Rate_Count                    //Tally the total number of coils leaving the plant 
                                                    vExitTotalPlant = vExitNorth + vExitSouth
                                                    
                                                    //Tally the total number of Blue and Green coils in CMCool
                                                    vCMCoolBlueGreen = vCMCoolBlue + vCMCoolGreen
                                                                         1    Rate_Counter         EXIT                         FIRST 1      
 Coil                 HM_Ent                        //s_LOG_FILE(ENTER,0)
                                                    
                                                    //Update WIP And Load
                                                    a_Temperature = 1
                                                    GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature) //always 5 off hot mill
                                                    
                                                    Inc y_Coil_Count[a_Destination+1,1] //total coils
                                                    Inc y_Coil_Count[a_Destination+1,2], yRouting_Data[aRoutingIndex,12] //total time of coils
                                                                         1    Coil                 HMill                        FIRST 1      
 Coil                 HMill                         //Update Log file
                                                    s_LOG_FILE(ENTER,0)
                                                    
                                                    //Update Graphic
                                                    GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                    
                                                    //Run process time and get next destination
                                                    //CHANGED!!! There is a specific calculation for HMill at the bottom of s_Process now!
                                                    s_Process() //a_Destination = 0 at this point
                                                    aCoilStart = Clock(hr)
                                                    
                                                    //output stats (calculated at the clock sub)
                                                    Inc v_Total_Coils_Produced 
                                                    Inc v_Total_lbs_Produced, yRouting_Data[(aRoutingIndex - 1), 8]
                                                    Inc v_STATS_Hot_Mill_Lbs, yRouting_Data[(aRoutingIndex - 1), 8]
                                                                         1    Coil                 HM_Exit                      FIRST 1      s_LOG_FILE(LEAVE,0)
 Coil                 HM_Exit                       //s_LOG_FILE(ENTER,0)
                                                    INC v_HM_Coils_Rolled //?get rid of?
                                                    Inc vCoilsInPlant
                                                    Inc vMill_WIP
                                                    
                                                    inc vHMCoilCount  //This added to watch the coil count on screen
                                                                         1    Coil                 HM_ExtQ                      FIRST 1      
                                                                                                                                             //MOVE FOR 1 min
 Coil                 HM_ExtQ                       MOVE                 1    Coil                 HMExitQPU                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE FOR 2 MIN
 Coil                 HMExitQPU                     //CHANGED 10/21
                                                    //get Crane_208,10
                                                    free ownedresource()
                                                    
                                                    Inc vInsp_Count
                                                    IF vInsp_Count = 10 THEN 
                                                    {
                                                    	vInsp_Count = 0
                                                    	//v_HM_Insp_Busy = 1    
                                                    	Route 4 //Routes all coils to new station
                                                    
                                                    }
                                                    ELSE
                                                    {
                                                    	WAIT UNTIL v_HM_Insp_Busy = 0 
                                                    
                                                    	s_CM_LM_Route_Change_to_C4 				//ADDED
                                                    	IF a_Destination = m_CM Or a_Destination = m_C4 then
                                                        {
                                                        	//If 5000, put on lower level for better cooling
                                                        	s_CM_LM_Queue_ENTER			//ADDED
                                                        	IF a_Alloy >= 5000 THEN ROUTE 1
                                                        	ELSE ROUTE 2
                                                    
                                                        }
                                                        //OLD FLUID LOGIC
                                                        
                                                    	//Else If a_Destination = m_C4 Then 
                                                        //{	
                                                       	//	If a_Alloy = 3000 Then 
                                                       	//	{
                                                       	//		//All HM Car contents need to have the same destination
                                                       	//		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    	//		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                       	//		Dec v_HM_Destination_Fluids_Storage 
                                                       	//		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                       	//		Route 3
                                                       	//	}
                                                       	//	ELSE IF a_Alloy >= 5000 THEN ROUTE 1 
                                                       	//	ELSE ROUTE 2 
                                                       	//}	
                                                    	ELSE IF a_Destination = m_C3 THEN 
                                                    	{
                                                       		//All HM Car contents need to have the same destination
                                                       		//Wait until v_HM_Destination_HMCarW <> 99 //OLD FLUID LOGIC //And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage = 0
                                                    		//If v_HM_Destination_HMCarW = 0 Then v_HM_Destination_HMCarW = 3 //HMCar has 3 Capacity
                                                       		//Dec v_HM_Destination_HMCarW
                                                       		//If v_HM_Destination_HMCarW = 0 Then v_HM_Destination_HMCarW = 99 //HMCar resets variable
                                                       		Route 3
                                                    
                                                    	}
                                                    	ELSE IF a_Destination = m_Exit Or a_Destination= m_PL Or a_Destination = m_PK THEN
                                                    	{
                                                    	 	ROUTE 1
                                                    
                                                    	}
                                                    	ELSE DISPLAY "Unknown Destination at HM_ExtQ " $ a_Destination
                                                    }                    1    Coil                 CMCool_Lower_3               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                              Coil                 CMCool_Lower_2               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                              Coil                 CMCool_Lower_1               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                              Coil                 CMCool_5182_OF               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                         2    Coil                 CMCool_Middle_1              FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                              Coil                 CMCool_Middle_2              FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                              Coil                 CMCool_Middle_3              FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                              Coil                 CMCool_Upper_1               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                              Coil                 CMCool_Upper_2               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                              Coil                 CMCool_Upper_3               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                              Coil                 CMCool_Lower_1               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                              Coil                 CMCool_Lower_2               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                              Coil                 CMCool_Lower_3               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                              Coil                 CMCool_HM_OF                 FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
                                                                                                                                             vHMCarContents=CONTENTS(LOC(HMCarE),Coil)
                                                                         4    Coil                 HM_InspSt_Car_Load           Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208,50 THEN FREE
 Coil                 HM_Scrap                      //s_LOG_FILE(ENTER,0)
                                                    Display "Invalid Routing to HM Scrap"
                                                                         1    Coil                 EXIT                         FIRST 1      s_LOG_FILE(LEAVE,0)
 TrayHMCar            HMCarE                        //Load up to 3 coils with a time limit
                                                    
                                                    load 1 iff (a_Destination = m_C3 Or a_Destination = m_C4)
                                                    
                                                    GRAPHIC groupqty(Coil) + 1
                                                    get Car_HM  //Get the car so the stats show it in use when the first coil is loaded.
                                                    
                                                    load 1 iff (a_Destination = m_C3 Or a_Destination = m_C4) in 15 min
                                                    
                                                    IF groupqty(Coil) = 2 THEN
                                                    {
                                                    	GRAPHIC groupqty(Coil) + 1
                                                    	load 1 iff (a_Destination = m_C3 Or a_Destination = m_C4) in 15 min
                                                    }
                                                    
                                                    IF groupqty(Coil) = 3 THEN GRAPHIC groupqty(Coil) + 1
                                                    
                                                    Route 1              1    TrayHMCar            HMCarW                       FIRST 1      MOVE WITH ownedresource()
                                                                                                                                             
                                                                         2    TrayHMCar            HMCar_Fluids_Bay_Drop_Off    FIRST 1      MOVE WITH ownedresource()
                                                                         3    TrayHMCar            HMCar_Fluids_Bay_Pick_Up     FIRST 1      MOVE WITH ownedresource()
 TrayHMCar            HMCarW                        //If clock(min) >= 2400 Then debug
                                                    graphic 1
                                                    unload 3 
                                                    //vHMTrayCoils=99  #Set to some number greater than 1 to get the tray to wait to be unloaded. //REMOVED
                                                    wait until vHMTrayCoils = 0 //CHANGED to ignore content requirement
                                                    
                                                    Route 1              1    TrayHMCar            HMCarE                       FIRST 1      move with ownedresource() then free
 TrayHMCar            HMCar_Fluids_Bay_Drop_Off     //ADDED: New drop off location in fluids bay for C4 coils
                                                    v_HM_at_Fluids = 1 //lets fluids storage know the hm car is available to load
                                                    graphic 1
                                                    unload 3 
                                                    wait until vHMTrayCoils=0 //CHANGED to ignore content requirement
                                                                         1    TrayHMCar            HMCar_Fluids_Bay_Pick_Up     FIRST 1      move with ownedresource()
 TrayHMCar            HMCar_Fluids_Bay_Pick_Up      //If clock(min) >= 2400 Then debug
                                                    Load 3 In 1 sec
                                                    //If clock(min) >= 2400 Then Display groupqty(coil)
                                                    v_HM_at_Fluids = 0
                                                    
                                                    If v_HM_Destination_HMCarW_From_Fluids_Storage > 0 Then		//ADDED!
                                                    {
                                                    	//reset for next set
                                                    	v_HM_Destination_HMCarW_From_Fluids_Storage = 0
                                                    	Route 2
                                                    }
                                                    Else Route 1         1    TrayHMCar            HMCarE                       FIRST 1      move with ownedresource() then free
                                                                         2    TrayHMCar            HMCarW                       FIRST 1      move with ownedresource() //need to keep for unloading!
 TrayHMInspStCar      HM_InspSt_Car_Unload          Unload 1
                                                    Graphic 1            1    TrayHMInspStCar      HM_InspSt_Car_Load           FIRST 1      
 TrayHMInspStCar      HM_InspSt_Car_Load            //Load up to 1 coil
                                                    Load 1
                                                    Graphic 2            1    TrayHMInspStCar      HM_InspST                    FIRST 1      Move on HM_Insp_Car_path
 TrayHMInspStCar      HM_InspST                     #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Process time
                                                    wait v_Inspect_Mins min
                                                                         1    TrayHMInspStCar      HM_InspSt_Car_Unload         FIRST 1      Move on HM_Insp_Car_path
 Coil                 HM_InspSt_Car_Unload          get Crane_208,10
                                                    free ownedresource()
                                                    
                                                    Inc vInsp_Count
                                                    IF vInsp_Count = 10 THEN 
                                                    {
                                                    	vInsp_Count = 0
                                                    	//v_HM_Insp_Busy = 1                             //ADDED
                                                    	Route 4 //Routes all coils to new station
                                                    }
                                                    ELSE
                                                    {
                                                    	WAIT UNTIL v_HM_Insp_Busy = 0 
                                                    	s_CM_LM_Route_Change_to_C4
                                                    	IF a_Destination = m_CM Or a_Destination = m_C4 then
                                                        {
                                                        	//If 5000, put on lower level for better cooling
                                                        	s_CM_LM_Queue_ENTER
                                                        	IF a_Alloy >= 5000 THEN ROUTE 1
                                                        	ELSE ROUTE 2
                                                        }
                                                        //OLD FLUID LOGIC
                                                        
                                                    	//Else If a_Destination = m_C4 Then 					//ADDED!
                                                        //{	
                                                       	//	If a_Alloy = 3000 Then 
                                                       	//	{
                                                       	//		//All HM Car contents need to have the same destination
                                                       	//		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    	//		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                       	//		Dec v_HM_Destination_Fluids_Storage 
                                                       	//		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                       	//		Route 3
                                                       	//	}
                                                       	//	ELSE IF a_Alloy >= 5000 THEN ROUTE 1 
                                                       	//	ELSE ROUTE 2 
                                                       	//}	
                                                    	ELSE IF a_Destination = m_C3 THEN 
                                                    	{
                                                       		//All HM Car contents need to have the same destination
                                                       		//Wait until v_HM_Destination_HMCarW <> 99 //OLD FLUID LOGIC //And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage = 0
                                                    		//If v_HM_Destination_HMCarW = 0 Then v_HM_Destination_HMCarW = 3 //HMCar has 3 Capacity
                                                       		//Dec v_HM_Destination_HMCarW
                                                       		//If v_HM_Destination_HMCarW = 0 Then v_HM_Destination_HMCarW = 99 //HMCar resets variable
                                                       		Route 3
                                                    	}
                                                    	ELSE IF a_Destination = m_Exit Or a_Destination= m_PL Or a_Destination = m_PK THEN ROUTE 1
                                                    	ELSE DISPLAY "Unknown Destination at HM_ExtQ " $ a_Destination
                                                    }                    1    Coil                 CMCool_Lower_1               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                              Coil                 CMCool_Lower_2               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                              Coil                 CMCool_Lower_3               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                              Coil                 CMCool_5182_OF               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                         2    Coil                 CMCool_Middle_1              FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                              Coil                 CMCool_Middle_2              FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                              Coil                 CMCool_Middle_3              FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                              Coil                 CMCool_Upper_1               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                              Coil                 CMCool_Upper_2               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                              Coil                 CMCool_Upper_3               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                              Coil                 CMCool_Lower_1               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                              Coil                 CMCool_Lower_2               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                              Coil                 CMCool_Lower_3               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                              Coil                 CMCool_HM_OF                 FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
                                                                                                                                             vHMCarContents=CONTENTS(LOC(HMCarE),Coil)
                                                                         4    Coil                 HM_Scrap                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             v_HM_Insp_Busy = 0
 Coil                 HMCarW                        Inc vHMTrayCoils 
                                                    If a_Destination = m_AN Then Route 3
                                                    Else If a_Destination = m_C3 then Route 1
                                                    Else If a_Destination > 4 Then 
                                                    {
                                                    	Inc vNACarM_Needed
                                                    	Route 4
                                                    }
                                                    Else 
                                                    {
                                                    	Display "ERROR: no valid destination!"
                                                    	Debug
                                                    }                    1    Coil                 CFCool_1                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_614
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil) //REMOVED!
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             move with ownedresource() then free
                                                                              Coil                 CFCool_2                     FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_614
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil)
                                                                                                                                             move with ownedresource() then free
                                                                              Coil                 CFCool_3                     FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_614
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil)
                                                                                                                                             move with ownedresource() then free
                                                                              Coil                 CFCool_4                     FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_614
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil)
                                                                                                                                             move with ownedresource() then free
                                                                              Coil                 CFDensePack                  FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_614
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil)
                                                                                                                                             move with ownedresource() then free
                                                                              Coil                 CF_OF                        FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_614
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil)
                                                                                                                                             move with ownedresource() then free
                                                                         2    Coil                 C4_Pick_Up                   Load 1       //No longer exists!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_614
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil)
                                                                                                                                             move with ownedresource() then free
                                                                         3    Coil                 Forced_Air_Cool_Tier2        FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil)
                                                                                                                                             MOVE WITH Crane_614,200 THEN FREE
                                                                              Coil                 FAC_Overflow                 FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil)
                                                                                                                                             MOVE WITH Crane_614,200 THEN FREE
                                                                         4    Coil                 NACarM                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil)
                                                                                                                                             MOVE WITH Crane_614 THEN FREE
                                                                                                                                             Dec vNACarM_Needed
 Coil                 HMCar_Fluids_Bay_Drop_Off     //ADDED
                                                    //s_LOG_FILE(ENTER,0)
                                                    Inc vHMTrayCoils //ADDED
                                                    If a_Alloy <> 3000 Then
                                                    {
                                                    	If v_Conestoga_at_Fluids = 1 Then
                                                    	{
                                                    		//if Conestoga is at Fluids, the cooled coil can m_BE loaded immediately
                                                    		v_Conestoga_at_Fluids = 0
                                                    		Route 2
                                                    	}
                                                    	Else Route 1
                                                    }
                                                    Else Route 1         1    Coil                 Fluids_Storage               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Fluids_Crane 
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil) //REMOVED!
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             move with ownedresource() then free
                                                                              Coil                 Fluids_Storage_Overflow      FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Fluids_Crane 
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil) //REMOVED!
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             move with ownedresource() then free
                                                                         2    Coil                 Conestoga_Fluids_Bay_Pick_Up Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Fluids_Crane 
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil) //REMOVED!
                                                                                                                                             Dec vHMTrayCoils 
                                                                                                                                             move with ownedresource() then free
 Coil                 Fluids_Storage                //ADDED
                                                    # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    //3000 coils need to be cooled while other alloy types have already been cooled
                                                    If a_Not_Going_to_C4 = 0 Then
                                                    {
                                                    	If a_Alloy = 3000 Then 
                                                    	{
                                                    		//Wait cool time, update variables, update graphics
                                                    		s_Cooling()
                                                    	}
                                                    	Inc v_C4_North_Dock_Coils_Ready_for_Delivery //lets the conestoga truck at C4 know a coil is ready
                                                    	Wait Until v_Conestoga_at_Fluids = 1
                                                    	v_Conestoga_at_Fluids = 0
                                                    	Dec v_C4_North_Dock_Coils_Ready_for_Delivery
                                                    	a_Not_Going_to_C4 = 1
                                                    	Route 1
                                                    }
                                                    Else 
                                                    {
                                                    	//All HM Car contents need to have the same destination
                                                    	Wait Until v_HM_Destination_Fluids_Storage = 0 And v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage <> 99
                                                    	If v_HM_Destination_HMCarW_From_Fluids_Storage = 0 Then v_HM_Destination_HMCarW_From_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                       	Dec v_HM_Destination_HMCarW_From_Fluids_Storage
                                                       	If v_HM_Destination_HMCarW_From_Fluids_Storage = 0 Then v_HM_Destination_HMCarW_From_Fluids_Storage = 99 //HMCar resets the variable
                                                    	Route 2
                                                    }                    1    Coil                 Conestoga_Fluids_Bay_Pick_Up Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Fluids_Crane 
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil) //REMOVED!
                                                                                                                                             move with ownedresource() then free
                                                                         2    Coil                 HMCar_Fluids_Bay_Pick_Up     Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Fluids_Crane 
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil) //REMOVED!
                                                                                                                                             move with ownedresource() then free
 Coil                 Fluids_Storage_Overflow       //ADDED
                                                    # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    //3000 coils need to be cooled while other alloy types have already been cooled
                                                    If a_Not_Going_to_C4 = 0 Then
                                                    {
                                                    	If a_Alloy = 3000 Then 
                                                    	{
                                                    		//Wait cool time, update variables, update graphics
                                                    		s_Cooling()
                                                    	}
                                                    	Inc v_C4_North_Dock_Coils_Ready_for_Delivery //lets the conestoga truck at C4 know a coil is ready
                                                    	Wait Until v_Conestoga_at_Fluids = 1
                                                    	v_Conestoga_at_Fluids = 0
                                                    	Dec v_C4_North_Dock_Coils_Ready_for_Delivery
                                                    	a_Not_Going_to_C4 = 1
                                                    	Route 1
                                                    }
                                                    Else 
                                                    {
                                                    	//All HM Car contents need to have the same destination
                                                    	Wait Until v_HM_Destination_Fluids_Storage = 0 And v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage <> 99
                                                    	If v_HM_Destination_HMCarW_From_Fluids_Storage = 0 Then v_HM_Destination_HMCarW_From_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                       	Dec v_HM_Destination_HMCarW_From_Fluids_Storage
                                                       	If v_HM_Destination_HMCarW_From_Fluids_Storage = 0 Then v_HM_Destination_HMCarW_From_Fluids_Storage = 99 //HMCar resets the variable
                                                    	Route 2
                                                    }                    1    Coil                 Conestoga_Fluids_Bay_Pick_Up Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Fluids_Crane 
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil) //REMOVED!
                                                                                                                                             move with ownedresource() then free
                                                                         2    Coil                 HMCar_Fluids_Bay_Pick_Up     Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Fluids_Crane 
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             //vHMTrayCoils=contents(HMCarW,Coil) //REMOVED!
                                                                                                                                             move with ownedresource() then free
 Coil                 CMCool_Lower_1                //Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    //Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_CM Or a_Destination = m_LM Then
                                                    {
                                                    	Wait until v_CMEnt < 4
                                                    	Inc v_CMEnt
                                                    	Route 1
                                                    }
                                                    Else If a_Destination = m_C4 Then
                                                    {
                                                    
                                                    //FLUID STORAGE  	
                                                    //		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    //		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                    //   	Dec v_HM_Destination_Fluids_Storage 
                                                    //   	If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                    //		Route 3
                                                    
                                                    	Route 2
                                                    }
                                                    ELSE IF a_Destination = m_Exit Or a_Destination = m_PL Or a_Destination = m_PK THEN ROUTE 2
                                                                         1    Coil                 CMEnt,10                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Bot_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         2    Coil                 TS_Breezway_PU               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Bot_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Bot_Count
                                                                                                                                             dec vCMCoolGreen
 Coil                 CMCool_Lower_2                # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_CM Or a_Destination = m_LM Then
                                                    	{
                                                    	Wait until v_CMEnt < 4
                                                    	Inc v_CMEnt
                                                    	Route 1
                                                    	}
                                                    Else If a_Destination = m_C4 Then
                                                    {
                                                    
                                                    //FLUID STORAGE  	
                                                    //		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    //		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                    //   	Dec v_HM_Destination_Fluids_Storage 
                                                    //   	If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                    //		Route 3
                                                    
                                                    	Route 2
                                                    }
                                                    ELSE IF a_Destination = m_Exit Or a_Destination= m_PL 
                                                       			Or a_Destination = m_PK THEN ROUTE 2
                                                                         1    Coil                 CMEnt,10                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Bot_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         2    Coil                 TS_Breezway_PU               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Bot_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Bot_Count
                                                                                                                                             dec vCMCoolGreen
                                                                                                                                             
 Coil                 CMCool_Lower_3                # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_CM Or a_Destination = m_LM Then
                                                    	{
                                                    	Wait until v_CMEnt < 4
                                                    	Inc v_CMEnt
                                                    	Route 1
                                                    	}
                                                    Else If a_Destination = m_C4 Then
                                                    {
                                                    
                                                    //FLUID STORAGE  	
                                                    //		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    //		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                    //   	Dec v_HM_Destination_Fluids_Storage 
                                                    //   	If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                    //		Route 3
                                                    
                                                    	Route 2
                                                    }
                                                    ELSE IF a_Destination = m_Exit Or a_Destination= m_PL 
                                                       			Or a_Destination = m_PK THEN ROUTE 2
                                                                         1    Coil                 CMEnt,10                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Bot_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         2    Coil                 TS_Breezway_PU               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Bot_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Bot_Count
                                                                                                                                             dec vCMCoolGreen
                                                                                                                                             
 Coil                 CMCool_5182_OF                # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_CM Or a_Destination = m_LM Then
                                                    	{
                                                    	Wait until v_CMEnt < 4
                                                    	Inc v_CMEnt
                                                    	Route 1
                                                    	}
                                                    Else If a_Destination = m_C4 Then
                                                    {
                                                    
                                                    //FLUID STORAGE  	
                                                    //		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    //		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                    //   	Dec v_HM_Destination_Fluids_Storage 
                                                    //   	If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                    //		Route 3
                                                    
                                                    	Route 2
                                                    }
                                                    ELSE IF a_Destination = m_Exit Or a_Destination= m_PL 
                                                       			Or a_Destination = m_PK THEN ROUTE 2
                                                                         1    Coil                 CMEnt,10                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Bot_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         2    Coil                 TS_Breezway_PU               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Bot_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
 Coil                 TS_Breezway_PU                If a_Destination = m_C4 Then Route 2
                                                    Else Route 1         1    Coil                 PK_Floorspace                FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH ForkTrucks THEN FREE
                                                                                                                                             
                                                                                                                                             If a_DUMMY_First_tracker = 0 then 
                                                                                                                                             {
                                                                                                                                             	Inc vFinishing_WIP
                                                                                                                                             	Inc a_DUMMY_First_tracker 
                                                                                                                                             	Dec vMill_WIP
                                                                                                                                             }
                                                                         2    Coil                 CM_PU_DO_Storage             FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH ForkTrucks THEN FREE
 Coil                 CMCool_Middle_1               # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_C4 Then 
                                                    {
                                                    	
                                                    //FLUID STORAGE  	
                                                    //		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    //		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                    //   	Dec v_HM_Destination_Fluids_Storage 
                                                    //   	If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                    //		Route 3
                                                    
                                                    	Route 2
                                                    }
                                                    Else 
                                                    {
                                                    	Wait until v_CMEnt < 4
                                                    	Inc v_CMEnt
                                                    	Route 1
                                                    }                    1    Coil                 CMEnt,10                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         2    Coil                 TS_Breezway_PU               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
 Coil                 CMCool_Middle_2               # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_C4 Then 
                                                    {
                                                    	
                                                    //FLUID STORAGE  	
                                                    //		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    //		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                    //   	Dec v_HM_Destination_Fluids_Storage 
                                                    //   	If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                    //		Route 3
                                                    
                                                    	Route 2
                                                    }
                                                    Else 
                                                    {
                                                    	Wait until v_CMEnt < 4
                                                    	Inc v_CMEnt
                                                    	Route 1
                                                    }                    1    Coil                 CMEnt,10                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         2    Coil                 TS_Breezway_PU               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
 Coil                 CMCool_Middle_3               # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_C4 Then 
                                                    {
                                                    	
                                                    //FLUID STORAGE  	
                                                    //		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    //		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                    //   	Dec v_HM_Destination_Fluids_Storage 
                                                    //   	If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                    //		Route 3
                                                    
                                                    	Route 2
                                                    }
                                                    Else 
                                                    {
                                                    	Wait until v_CMEnt < 4
                                                    	Inc v_CMEnt
                                                    	Route 1
                                                    }                    1    Coil                 CMEnt,10                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         2    Coil                 TS_Breezway_PU               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
 Coil                 CMCool_Upper_1                # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_C4 Then 
                                                    {
                                                    	
                                                    //FLUID STORAGE  	
                                                    //		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    //		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                    //   	Dec v_HM_Destination_Fluids_Storage 
                                                    //   	If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                    //		Route 3
                                                    
                                                    	Route 2
                                                    }
                                                    Else 
                                                    {
                                                    	Wait until v_CMEnt < 4
                                                    	Inc v_CMEnt
                                                    	Route 1
                                                    }                    1    Coil                 CMEnt,10                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         2    Coil                 TS_Breezway_PU               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
 Coil                 CMCool_Upper_2                # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_C4 Then 
                                                    {
                                                    	
                                                    //FLUID STORAGE  	
                                                    //		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    //		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                    //   	Dec v_HM_Destination_Fluids_Storage 
                                                    //   	If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                    //		Route 3
                                                    
                                                    	Route 2
                                                    }
                                                    Else 
                                                    {
                                                    	Wait until v_CMEnt < 4
                                                    	Inc v_CMEnt
                                                    	Route 1
                                                    }                    1    Coil                 CMEnt,10                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         2    Coil                 TS_Breezway_PU               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
 Coil                 CMCool_Upper_3                # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_C4 Then 
                                                    {
                                                    	
                                                    //FLUID STORAGE  	
                                                    //		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    //		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                    //   	Dec v_HM_Destination_Fluids_Storage 
                                                    //   	If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                    //		Route 3
                                                    
                                                    	Route 2
                                                    }
                                                    Else 
                                                    {
                                                    	Wait until v_CMEnt < 4
                                                    	Inc v_CMEnt
                                                    	Route 1
                                                    }                    1    Coil                 CMEnt,10                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         2    Coil                 TS_Breezway_PU               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
 Coil                 CMCool_HM_OF                  # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_C4 Then 
                                                    {
                                                    	
                                                    //FLUID STORAGE  	
                                                    //		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    //		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                    //   	Dec v_HM_Destination_Fluids_Storage 
                                                    //   	If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                    //		Route 3
                                                    
                                                    	Route 2
                                                    }
                                                    Else 
                                                    {
                                                    	Wait until v_CMEnt < 4
                                                    	Inc v_CMEnt
                                                    	Route 1
                                                    }                    1    Coil                 CMEnt,10                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         2    Coil                 TS_Breezway_PU               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
 Coil                 CMCool_CM_OF                  # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_C4 Then 
                                                    {
                                                    	
                                                    //FLUID STORAGE  	
                                                    //		Wait until v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage = 0 And v_HM_Destination_Fluids_Storage <> 99
                                                    //		If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                    //   	Dec v_HM_Destination_Fluids_Storage 
                                                    //   	If v_HM_Destination_Fluids_Storage = 0 Then v_HM_Destination_Fluids_Storage = 99 //HMCar resets variable
                                                    //		Route 3
                                                    
                                                    	Route 2
                                                    }
                                                    Else 
                                                    {
                                                    	Wait until v_CMEnt < 4
                                                    	Inc v_CMEnt
                                                    	Route 1
                                                    }                    1    Coil                 CMEnt,10                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         2    Coil                 TS_Breezway_PU               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
                                                                         3    Coil                 HMCarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_208 THEN FREE
                                                                                                                                             DEC v_CMCool_Count
                                                                                                                                             DEC v_CMCool_Top_Count
                                                                                                                                             dec vCMCoolGreen
 Coil                 CMEnt                         //Nothing to do      1    Coil                 CMMill                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec v_CMEnt
 Coil                 CMMill                        //Update Log file
                                                    s_LOG_FILE(ENTER,0)
                                                    
                                                    //Wait process time and get next destination
                                                    s_Process()
                                                    aCoilStart = Clock(hr)
                                                    
                                                    //Change coil color to warm
                                                    a_Temperature = m_Warm //(2)
                                                    GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                    If a_Owner = TAA and a_Already_Added_to_C4_Queue_Lb = 0 Then debug
                                                    s_CM_LM_Queue_EXIT		//ADDED
                                                                         1    Coil                 CMExit                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE
 Coil                 CMExit                        INC v_CM_Coils_Rolled
                                                    MOVE                 1    Coil                 CMExitPU                     FIRST 1      MOVE FOR 1 MIN
 Coil                 CMExitPU                      s_LOG_FILE(LEAVE,0)
                                                    
                                                    //CHANGED! Second pass remains here!!!
                                                    //s_CM_LM_Route_Change_to_C4
                                                    
                                                    //Determine where it is going to next 
                                                    IF a_Destination = m_AN THEN aNACarDest = 2	
                                                    Else If a_Destination = m_C3 Then aNACarDest = 2
                                                    Else If a_Destination > 4 Then aNACarDest = 4
                                                    
                                                    //Determine where to route
                                                    if a_Destination = m_LM Then 
                                                    {
                                                    	//May need to change if only 1st pass counts for queue
                                                    	Route 4
                                                    }
                                                    Else if a_Destination = m_CM then
                                                    {
                                                    	//May need to change if only 1st pass counts for the queue
                                                    	vCMExitPUDest = a_Destination 
                                                    	route 1
                                                    }
                                                    Else if a_Destination > 4 or a_Destination = m_C3 Or a_Destination = m_AN THEN 
                                                    {
                                                    	vCMExitPUDest = aNACarDest
                                                    	wait until (v_NACarReady = 1 and (v_Destination_for_NACar = aNACarDest or v_Destination_for_NACar = 0)) or (v_NACarQReady = 1)
                                                    	if v_NACarReady = 1 and (v_Destination_for_NACar = aNACarDest or v_Destination_for_NACar = 0) then
                                                    	{
                                                    		v_Destination_for_NACar = aNACarDest
                                                    		route 2
                                                    	}
                                                    	Else
                                                    	{
                                                    		if v_NACarQReady = 1 then route 3
                                                    		else display "Something wrong at CMExitPU"
                                                    	}		
                                                    }
                                                    Else display "Unknown destination at CMExitPU ("$a_Destination$") "
                                                                         1    Coil                 CMCool_Upper_3               FIRST 1      MOVE WITH Crane_300 THEN FREE
                                                                              Coil                 CMCool_Middle_3              FIRST        MOVE WITH Crane_300 THEN FREE
                                                                              Coil                 CMCool_Upper_2               FIRST        MOVE WITH Crane_300 THEN FREE
                                                                              Coil                 CMCool_Middle_2              FIRST        MOVE WITH Crane_300 THEN FREE
                                                                              Coil                 CMCool_Upper_1               FIRST        MOVE WITH Crane_300 THEN FREE
                                                                              Coil                 CMCool_Middle_1              FIRST        MOVE WITH Crane_300 THEN FREE
                                                                              Coil                 CMCool_CM_OF                 FIRST        MOVE WITH Crane_300 THEN FREE
                                                                         2    Coil                 NACarE,50                    Load 1       get Crane_300,150
                                                                                                                                             WAIT v_CranePU sec
                                                                                                                                             vCMExitPUDest = 0
                                                                                                                                             MOVE WITH ownedresource() THEN FREE
                                                                                                                                             inc vCMCoilsExited
                                                                         3    Coil                 NACarQ                       FIRST 1      get Crane_300,10
                                                                                                                                             WAIT v_CranePU SEC
                                                                                                                                             vCMExitPUDest=0
                                                                                                                                             if contents(NACarQ)>=cap(NACarQ)-1 then v_NACarQReady=0
                                                                                                                                             MOVE WITH ownedresource() THEN FREE
                                                                                                                                             inc vCMCoilsExited
                                                                         4    Coil                 TransferCar_Home             FIRST 1      Move With Transfer_Car Then Free
 Coil                 NACarQ                        //s_LOG_FILE(ENTER,0)
                                                    IF aNACarDest = 2  THEN INC vCount_CMExit_NACARM //Middle location
                                                    //NACaerDest 3 is for annealing but not used from here
                                                    Else IF aNACarDest = 4  THEN INC vCount_CMExit_Finishing //Finishing
                                                    Else Display "Invalid Routing Option @ NACARQ"
                                                                         1    Coil                 NACarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_300
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             //s_LOG_FILE(ENTER,0)
                                                                                                                                             IF aNACarDest = 2  THEN DeC vCount_CMExit_NACARM
                                                                                                                                             //Else IF aNACarDest = 3  THEN DEC vCount_CMExit_Anneal
                                                                                                                                             Else IF aNACarDest = 4  THEN DEC vCount_CMExit_Finishing
                                                                                                                                             v_NACarQReady=1
                                                                                                                                             MOVE WITH ownedresource() THEN FREE
 Carrier              A601                          unload 3
                                                    free all             1    Carrier              EXIT                         FIRST 1      
 Coil                 A601                          //s_LOG_FILE(ENTER,0)
                                                    Dec v_OnRoute_to_601
                                                    GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                    //Ensure all coils are for C3
                                                    IF a_Destination = m_C3 Then Route 1 
                                                    ELSE If a_Destination = m_S3 Then Route 2
                                                    Else DISPLAY "Unknown destination at A601 " $ a_Destination
                                                                         1    Coil                 C3Ent,50                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_ASRS,100 THEN FREE
                                                                              Coil                 ASRSEntry                    FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_ASRS,100 THEN FREE
                                                                         2    Coil                 SL3_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_ASRS,100 THEN FREE
                                                                              Coil                 ASRSEntry                    FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_ASRS,100 THEN FREE
 TrayAnCar            NACarE                        Unload 4
 TrayAnCar            NACarE                        
                                                    Wait Until vNACarE_Qty = 0
                                                                         1    TrayAnCar            NACarE_Unload                FIRST 1      
 TrayAnCar            NACarE_Unload                 Wait 0               1    TrayAnCar            NACarE                       FIRST 1      
 TrayAnCar            NACarE                        //Load up to 4 coils with a time limit
                                                    Graphic 1
                                                    int iWaitTime = 15
                                                    
                                                    v_NaCarReady = 1
                                                    WAIT UNTIL //Wait until there is something to put on the car
                                                    (
                                                    	vCMExitPUDest = 2
                                                    	or vCMExitPUDest = 3
                                                    	or vCMExitPUDest = 4
                                                    	or vCount_CMExit_Anneal > 0
                                                    	or vCount_CMExit_Finishing > 0
                                                    	or vCount_CMExit_NACARM > 0
                                                    	Or vNACarM_Needed > 0
                                                    	Or vNACarW_Needed > 0
                                                    )
                                                    
                                                    If vNACarM_Needed > 0 Then 
                                                    {
                                                    	get Car_An_N
                                                    	v_NaCarReady = 0 
                                                    	Route 1
                                                    }
                                                    Else If vNACarW_Needed > 0 Then 
                                                    {
                                                    	get Car_An_N
                                                    	v_NaCarReady = 0 
                                                    	Route 2
                                                    }
                                                    Else 
                                                    {
                                                    	//Set the car destination to the coil type at the exit of the mill first, otherwise to the type of coil most plentiful in the Q
                                                    	if vCMExitPUDest = 2 or vCMExitPUDest = 3 or vCMExitPUDest = 4 then v_Destination_for_NACar = vCMExitPUDest
                                                    	else if vCount_CMExit_NACARM > 0 then v_Destination_for_NACar = 2
                                                    	else if vCount_CMExit_Anneal > 0 then v_Destination_for_NACar = 3
                                                    	else if vCount_CMExit_Finishing > 0 then v_Destination_for_NACar = 4
                                                    	else display "Problem with NACar destination"
                                                    
                                                    	//Create Load
                                                    	get Car_An_N  //Get the car here so the stats show the car in use as soon as the 1st coil is loaded.
                                                    
                                                    	load 1 iff aNACarDest = v_Destination_for_NACar 
                                                    	GRAPHIC groupqty(Coil) + 1
                                                    
                                                    	If groupqty(Coil) = 1 then load 1 iff aNACarDest = v_Destination_for_NACar In iWaitTime min
                                                    	GRAPHIC groupqty(Coil) + 1
                                                    
                                                    	If groupqty(Coil) = 2 then load 1 iff aNACarDest = v_Destination_for_NACar In iWaitTime min
                                                    	GRAPHIC groupqty(Coil) + 1
                                                    
                                                    	If groupqty(Coil) = 3 then load 1 iff aNACarDest = v_Destination_for_NACar In iWaitTime min
                                                    	GRAPHIC groupqty(Coil) + 1
                                                    
                                                    	//Deetrmine Route to take
                                                    	IF v_Destination_for_NACar = 2 THEN
                                                    	{
                                                    		aNACarDest = 2
                                                    		v_NaCarReady = 0
                                                    		ROUTE 1
                                                    	}
                                                    	ELSE IF v_Destination_for_NACar = 3 Or v_Destination_for_NACar = 4 THEN
                                                    	{
                                                    		If v_Destination_for_NACar = 3 Then 
                                                    		{
                                                    			yAnneal[1,2] = 0
                                                    			aNACarDest = 3
                                                    		}
                                                    		Else aNACarDest = 4
                                                    		v_NaCarReady = 0
                                                    		ROUTE 2
                                                    	}
                                                    	ELSE DISPLAY "Unknown destination at NACarE ("$v_Destination_for_NACar$"))"
                                                    }                    1    TrayAnCar            NACarM                       FIRST 1      v_Destination_for_NACar = 0
                                                                                                                                             MOVE WITH ownedresource()
                                                                         2    TrayAnCar            NACarW                       FIRST 1      v_Destination_for_NACar = 0
                                                                                                                                             MOVE WITH ownedresource()
 Coil                 NACarE                        //s_LOG_FILE(ENTER,0)
                                                    Inc vNACarE_Qty      1    Coil                 CMEnt,11                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Inc v_CMEnt
                                                                                                                                             MOVE WITH Crane_300 THEN FREE
                                                                                                                                             Dec vNACarE_Qty
 TrayAnCar            NACarM                        If aNACarDest = 4 Then Route 1 //Finishing
                                                    Else If GroupQty(Coil) = 0 Then //If empty and requested to come to M, check to see if there are parts to bring to anneal
                                                    {
                                                    	Load yAnneal[1,3] Iff a_Anneal = 1 //yAnneal[1,3] is loaded at Anneal
                                                    	yAnneal[1,3] = 0
                                                    	If GroupQty(Coil) = 0 Then 
                                                    	{
                                                    		Load 4 Iff a_Destination > 4 In .1 min
                                                    		If groupqty(coil) = 0 Then
                                                    		{
                                                    			aNACarDest = 3
                                                    			Route 2 //If  no coils loaded for Annealing
                                                    		}
                                                    		Else Route 1
                                                    	}
                                                    	Else Route 1 //If coils are loaded for annealing
                                                    }
                                                    Else Route 2 //aNACarDest = 2 falls in this category. Coils FROM Annealing going to LM
                                                                         1    TrayAnCar            NACarW                       FIRST 1      
                                                                         2    TrayAnCar            NACarM_Unload                FIRST 1      
 TrayAnCar            NACarM_Unload                                      1    TrayAnCar            NACarM                       FIRST 1      
 TrayAnCar            NACarM                        graphic 1
                                                    If groupqty(Coil) > 0 Then vNATrayCoils = 2  //Use 2 so the car will not leave right away.
                                                    unload 4 //Coils being unloaded: ANNEALING_1
 TrayAnCar            NACarM                        Wait until vNATrayCoils = 1 //set in the previous step (SAME LOCATION)
                                                    route 1              1    TrayAnCar            NACarM_Unload                FIRST 1      
 TrayAnCar            NACarM_Unload                 Wait 0               1    TrayAnCar            NACarM                       FIRST 1      
 TrayAnCar            NACarM                        Load 4 iff a_Destination = m_CM In 1 min
                                                    GRAPHIC groupqty(Coil) + 1
                                                    //If groupqty(Coil) > 0 Then Dec vNACarM_Needed, groupqty(Coil)
                                                                         1    TrayAnCar            NACarE                       FIRST 1      move with ownedresource() then free
 Coil                 NACarM                        IF a_Destination = m_LM Then Route 1 //includes coils FROM: Annealing_1
                                                    Else if a_Destination = m_AN THEN ROUTE 3
                                                    Else IF a_Destination = m_C3 THEN
                                                    {
                                                    	IF CONTENTS(LOC(A200),Carrier) = 0 THEN ORDER 1 Carrier TO A200
                                                    	ROUTE 2
                                                    }                    1    Coil                 Forced_Air_Cool_Tier1        FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_616
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             vNATrayCoils=contents(NACarM,Coil)
                                                                                                                                             move with ownedresource() then free
                                                                              Coil                 LMCoolSE                     FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_616
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             vNATrayCoils=contents(NACarM,Coil)
                                                                                                                                             move with ownedresource() then free
                                                                              Coil                 FAC_Overflow                 FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_616
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             vNATrayCoils=contents(NACarM,Coil)
                                                                                                                                             move with ownedresource() then free
                                                                         2    Coil                 A200,100                     Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_616
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             vNATrayCoils=contents(NACarM,Coil)
                                                                                                                                             move with ownedresource() then free
                                                                         3    Coil                 Forced_Air_Cool_Tier2        FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_616
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             vNATrayCoils=contents(NACarM,Coil)
                                                                                                                                             move with ownedresource() then free
                                                                              Coil                 FAC_Overflow                 FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             get Crane_616
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             vNATrayCoils=contents(NACarM,Coil)
                                                                                                                                             move with ownedresource() then free
 TrayAnCar            NACarW                        If aNACarDest = 3 Then Wait T(8,9,10) min //Load Annealing Oven time
                                                    aNACarDest = 0
                                                    graphic 1
                                                    unload 4
 TrayAnCar            NACarW                                             1    TrayAnCar            NACarW_Unload                FIRST 1      
 TrayAnCar            NACarW_Unload                 While contents(NACarW,Coil) > 0 Do Wait 5 min
                                                                         1    TrayAnCar            NACarW                       FIRST 1      
 TrayAnCar            NACarW                        If vNACarW_Needed > 0 Then //triggered from: ANNEALING_1
                                                    {
                                                    	LOAD 4 In 1 min
                                                    	Dec vNACarW_Needed, groupqty(Coil)
                                                    	GRAPHIC groupqty(Coil) + 1
                                                    	aNACarDest = 2 //coils from Annealing heading to LM
                                                    	Route 2
                                                    }
                                                    Else Route 1         1    TrayAnCar            NACarE                       FIRST 1      move with ownedresource() then free
                                                                         2    TrayAnCar            NACarM                       FIRST 1      move with ownedresource()
 Coil                 NACarW                        s_LOG_FILE(LEAVE,0)
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    //Should NEVER go to ROUTE_2 (Annealing_2)
                                                    If a_Destination = m_AN and a_Anneal = 1 Then Route 1
                                                    Else If a_Destination > 4 And yProduct_Data[aProduct,17] = 0 Then Route 3
                                                    Else If a_Destination > 4 And yProduct_Data[aProduct,17] = 1 Then Route 4
                                                    Else DISPLAY "Unknown destination at NACarW ("$a_Destination$")"
                                                                         1    Coil                 Anneal_1                     Load 1       vAnneal1_Routing = aRoutingIndex
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 Anneal_2                     Load 1       vAnneal2_Routing = aRoutingIndex
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 Supercooling                 FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                                                                                             If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             {
                                                                                                                                             	Inc vFinishing_WIP
                                                                                                                                             	Inc a_DUMMY_First_tracker
                                                                                                                                             	Dec vMill_WIP
                                                                                                                                             }
                                                                         4    Coil                 Anneal_Saddles               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                                                                                             If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             {
                                                                                                                                             	Inc vFinishing_WIP
                                                                                                                                             	Inc a_DUMMY_First_tracker
                                                                                                                                             	Dec vMill_WIP
                                                                                                                                             }
                                                                              Coil                 Anneal_Saddles_OF            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                                                                                             If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             {
                                                                                                                                             	Inc vFinishing_WIP
                                                                                                                                             	Inc a_DUMMY_First_tracker
                                                                                                                                             	Dec vMill_WIP
                                                                                                                                             }
 Coil                 NACarExit                     Display "Incorrect routing to NACarExit"
                                                                         1    Coil                 EXIT                         FIRST 1      s_LOG_FILE(LEAVE,0)
 Anneal_Car           Anneal_1                      //yAnneal[1,1] = product
                                                    //yAnneal[1,2] = qty (scheduled to come in)
                                                    //yAnneal[1,3] = how much is loaded in anneal
                                                    Int iProduct = yAnneal[1,1]
                                                    Real rTimer
                                                    
                                                    While rTimer < 48 And yAnneal[1,2] < 8 Do //wait for a set of 8
                                                    {
                                                    	Wait 15 min
                                                    	Inc rTimer, 0.25
                                                    }
                                                    
                                                    vAnneal_Wait_Time = rTimer
                                                    yAnneal[1,1] = 999 //Stops parts from joining the load
                                                    
                                                    //don't know why this is broken up into 4s. Could probably just use the code from load second tray and be fine
                                                    //Load first Tray
                                                    If yAnneal[1,2] > 3 Then 
                                                    {
                                                    	yAnneal[1,3] = 4  //Trigger for Tray load qty
                                                    	Dec yAnneal[1,2], 4  //Decrease qty left to Load
                                                    	Load 4
                                                    }
                                                    Else 
                                                    {
                                                    	yAnneal[1,3] = yAnneal[1,2]  //Trigger for Tray load qty
                                                    	Load yAnneal[1,2]
                                                    	yAnneal[1,2] = 0  //Decrease qty left to Load
                                                    }
                                                    
                                                    //Load second Tray
                                                    If yAnneal[1,2] > 0 Then 
                                                    {
                                                    	yAnneal[1,3] = yAnneal[1,2]  //Trigger for Tray load qty
                                                    	Load yAnneal[1,2]
                                                    }
                                                    	
                                                    vAnneal_Batch = groupqty(Coil)
                                                    
                                                    //Wait process time and get next destination
                                                    aRoutingIndex = vAnneal1_Routing
                                                    s_Process()          1    Anneal_Car           Anneal_1_Unload              FIRST 1      
 Anneal_Car           Anneal_1_Unload               Get Car_AN_N
                                                    Wait T(8,9,10) min //Pull out trays
                                                    Wait T(8,9,10) min //Pull out trays
                                                    if a_Destination = m_LM Then Free Car_AN_N
                                                    
                                                    yAnneal[1,1] = 0
                                                    yAnneal[1,2] = 0
                                                    aAnneal_RoutingIndex = aRoutingIndex
                                                    Unload 8
 Anneal_Car           Anneal_1_Unload               Wait 0
                                                    While Contents(Anneal_1_Unload,Coil) > 0 Do Wait 1 min
                                                    Free Car_AN_N        1    Anneal_Car           EXIT                         FIRST 1      
 Anneal_Car           Anneal_2                      //yAnneal[2,1] = product
                                                    //yAnneal[2,2] = qty (scheduled to come in)
                                                    //yAnneal[2,3] = how much is loaded in anneal
                                                    Int iProduct = yAnneal[2,1]
                                                    Real rTimer
                                                    
                                                    While rTimer < 48 And yAnneal[2,2] < 8 Do
                                                    {
                                                    	Wait 15 min
                                                    	Inc rTimer,.25
                                                    }
                                                    vAnneal_Wait_Time = rTimer
                                                    yAnneal[2,1] = 999 //Stops parts from joining the load
                                                    
                                                    //Load first Tray
                                                    If yAnneal[2,2] > 3 Then 
                                                    {
                                                    	yAnneal[2,3] = 4  //Trigger for Tray load qty
                                                    	Dec yAnneal[2,2], 4  //Decrease qty left to Load
                                                    	Load 4
                                                    }
                                                    Else 
                                                    {
                                                    	yAnneal[2,3] = yAnneal[2,2]  //Trigger for Tray load qty
                                                    	Load yAnneal[2,2]
                                                    	yAnneal[2,2]=0  //Decrease qty left to Load
                                                    }
                                                    
                                                    //Load second Tray
                                                    If yAnneal[2,2] > 0 Then 
                                                    {
                                                    	yAnneal[2,3] = yAnneal[2,2]  //Trigger for Tray load qty
                                                    	Load yAnneal[2,2]
                                                    }
                                                    	
                                                    vAnneal_Batch = groupqty(Coil)
                                                    
                                                    //Wait process time and get next destination
                                                    aRoutingIndex = vAnneal2_Routing ///////////////////////////////////////////////CHANGED FROM vAnneal1_Routing (9/19/2021)
                                                    s_Process()          1    Anneal_Car           Anneal_2_Unload              FIRST 1      
 Anneal_Car           Anneal_2_Unload               Get Car_AN_S
                                                    Wait T(8,9,10) min //Pull out trays
                                                    Wait T(8,9,10) min //Pull out trays
                                                    if a_Destination = m_LM Then Free Car_AN_S 
                                                    
                                                    yAnneal[2,1] = 0
                                                    yAnneal[2,2] = 0
                                                    aAnneal_RoutingIndex = aRoutingIndex
                                                    Unload 8
 Anneal_Car           Anneal_2_Unload               Wait 0
                                                    While Contents(Anneal_2_Unload,Coil) > 0 Do Wait 1 min
                                                    Free Car_AN_S        1    Anneal_Car           EXIT                         FIRST 1      
 Coil                 Anneal_1_Unload               //s_LOG_FILE(ENTER,0)
                                                    aRoutingIndex = aAnneal_RoutingIndex
                                                    a_Destination = yRouting_Data[aRoutingIndex,3]
                                                    aFrom = m_AN
                                                    If a_Destination = m_LM Then 
                                                    {
                                                    	Inc vNACarW_Needed
                                                    	Route 1
                                                    }
                                                    Else If a_Destination > 4 And yProduct_Data[aProduct,17] = 0 Then Route 2
                                                    Else If a_Destination > 4 And yProduct_Data[aProduct,17] = 1 Then Route 3
                                                    Else DISPLAY "Unknown destination at NACarW ("$a_Destination$")"
                                                                         1    Coil                 NACarW                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 Supercooling                 FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             {
                                                                                                                                             	Inc vFinishing_WIP
                                                                                                                                             	Inc a_DUMMY_First_tracker
                                                                                                                                             	Dec vMill_WIP
                                                                                                                                             }
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 Anneal_Saddles               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             {
                                                                                                                                             	Inc vFinishing_WIP
                                                                                                                                             	Inc a_DUMMY_First_tracker
                                                                                                                                             	Dec vMill_WIP
                                                                                                                                             }
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
 Coil                 Anneal_2_Unload               //s_LOG_FILE(ENTER,0)
                                                    aRoutingIndex = aAnneal_RoutingIndex
                                                    a_Destination = yRouting_Data[aRoutingIndex,3]
                                                    aFrom = m_AN
                                                    If a_Destination = m_LM Then 
                                                    {
                                                    	Inc vSACarW_Needed
                                                    	Route 1
                                                    }
                                                    Else If a_Destination > 4 And yProduct_Data[aProduct,17] = 0 Then Route 2
                                                    Else If a_Destination > 4 And yProduct_Data[aProduct,17] = 1 Then Route 3
                                                    Else DISPLAY "Unknown destination at NACarW ("$a_Destination$")"
                                                                         1    Coil                 SACarW                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                                                                                             
                                                                         2    Coil                 Supercooling                 FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             {
                                                                                                                                             	Inc vFinishing_WIP
                                                                                                                                             	Inc a_DUMMY_First_tracker
                                                                                                                                             	Dec vMill_WIP
                                                                                                                                             }
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 Anneal_Saddles               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             {
                                                                                                                                             	Inc vFinishing_WIP
                                                                                                                                             	Inc a_DUMMY_First_tracker
                                                                                                                                             	Dec vMill_WIP
                                                                                                                                             }
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
 Coil                 LMEntQ                        #Don't wait to go into LM
                                                                         1    Coil                 LMEnt1                       FIRST 1      MOVE WITH Crane_616 THEN FREE
 Coil                 LMEnt1                        #Go straight into LM2
                                                                         1    Coil                 LMEnt2                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE FOR 1 SEC
 Coil                 LMEnt2                        #Go straight into LM
                                                                         1    Coil                 LMMill                       FIRST 1      
 Carrier              A800                          unload 3
                                                    Free All             1    Carrier              EXIT                         FIRST 1      
 Coil                 A800                          Dec v_OnRoute_to_800
                                                    //Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    If a_DUMMY_Second_Tracker > 0 Then
                                                    {
                                                    	If a_DUMMY_First_tracker > 0 Then
                                                    	{
                                                    		//already been recorded
                                                    		Dec vFinishing_WIP //fix loading vFinishing_WIP
                                                    	}
                                                    }
                                                    If a_Destination = m_CT or a_Destination = m_LC Then 
                                                    {
                                                    	Inc vOrCarM_Needed
                                                    	Route 1
                                                    }
                                                    Else If a_Destination = m_HG Then Route 2
                                                    Else If a_Destination = m_LG Then Route 3
                                                    Else If a_Destination = m_TL Then Route 4
                                                    Else If a_Destination = m_P2 or a_Destination = m_PK 
                                                    		or a_Destination = m_PL Or a_Destination = m_Exit Then Route 5
                                                    Else If a_Destination = m_S3 Then Route 6
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 Orange_Car_M                 Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 HG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 LG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         4    Coil                 TL_Ent                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         5    Coil                 PK_Floorspace                FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         6    Coil                 SL3_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE WITH Crane_624 THEN FREE
 Carrier              A800_Load                     GRAPHIC groupqty(Coil)+1+4
                                                    Wait Until v_Destination_for_A800 > 0
                                                    # Load up to 3 coils based on the destination of the first coil with a time limit
                                                    
                                                    If v_Destination_for_A800 = m_S3 Then
                                                    	{
                                                    	load 1 iff (a_Destination=m_S3)
                                                    	load 1 iff (a_Destination=m_S3) In 10 min
                                                    	If groupqty(Coil) = 2 Then load 1 iff (a_Destination=m_S3) In 10 min
                                                    	GRAPHIC groupqty(Coil)+1+4
                                                    	IF v_Destination_for_A800 = m_S3 THEN dec v_Coils_to_A800_601, groupqty(Coil)
                                                    	WHILE CONTENTS(LOC(A601)) > 0 or V_OnRoute_to_601 > 0 DO WAIT 1 MIN
                                                        Inc v_OnRoute_to_601, groupqty(Coil)
                                                    	Route 1
                                                    	}
                                                    Else If v_Destination_for_A800 = m_CT Then
                                                    	{
                                                    	load 1 iff (a_Destination=m_LC Or a_Destination=m_CT Or a_Destination = m_S4) 
                                                    	load 1 iff (a_Destination=m_LC Or a_Destination=m_CT Or a_Destination = m_S4) In 10 min
                                                    	If groupqty(Coil) = 2 Then load 1 iff (a_Destination=m_LC Or a_Destination=m_CT Or a_Destination = m_S4) In 10 min
                                                    	GRAPHIC groupqty(Coil)+1+4
                                                    	IF v_Destination_for_A800 = m_S3 THEN dec v_Coils_to_A800_700, groupqty(Coil)
                                                    	WHILE CONTENTS(LOC(A700)) > 0 or V_OnRoute_to_700 > 0 DO WAIT 1 MIN
                                                    	Inc v_OnRoute_to_700, groupqty(Coil)
                                                    	Route 2
                                                    	}	
                                                    ELSE DISPLAY "Unknown Routing for Carrier at A800 "$v_Destination_for_A800
                                                                         1    Carrier              A601                         FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             WAIT 1 min #Used to control timing with approaching AGV
                                                                                                                                             v_Destination_for_A800=0 # Reset the destination flag for A800
                                                                                                                                             MOVE WITH AGV_1 THEN FREE
                                                                         2    Carrier              A700                         FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             WAIT 1 min #Used to control timing with approaching AGV
                                                                                                                                             v_Destination_for_A800=0 # Reset the destination flag for A800
                                                                                                                                             MOVE WITH AGV_1 THEN FREE
 TrayAnCar            SACarE                        Graphic 1
                                                    Unload 999 //Coils unloaded: Annealing_2
 TrayAnCar            SACarE                                             1    TrayAnCar            SACarE_Unload                FIRST 1      
 TrayAnCar            SACarE_Unload                 While contents(SACarE,Coil) > 0 Do 
                                                    {
                                                    	Wait 5 min
                                                    }                    1    TrayAnCar            SACarE                       FIRST 1      
 TrayAnCar            SACarE                        int iWaitTime = 15
                                                    vSACarReady = 1
                                                    
                                                    Wait Until vSACarE_Needed > 0 Or vSACarW_Needed > 0
                                                    Get Car_AN_S
                                                    If vSACarE_Needed > 0 Then 	
                                                    {
                                                    	//Load up to 4 coils with a time limit
                                                    	LOAD yAnneal[2,3]
                                                    	yAnneal[2,3] = 0
                                                    	GRAPHIC groupqty(Coil) + 1
                                                    	Dec vSACarE_Needed, groupqty(Coil)
                                                    	GRAPHIC groupqty(Coil) + 1
                                                    }                    1    TrayAnCar            SACarW                       FIRST 1      vSACarReady=0
                                                                                                                                             move with ownedresource()
 Coil                 SACarE                                             1    Coil                 Forced_Air_Cool_Tier1        FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                              Coil                 LMCoolSE                     FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                              Coil                 FAC_Overflow                 FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
 TrayAnCar            SACarW                        Wait T(8,9,10) min 
                                                    graphic 1
                                                    unload 4
 TrayAnCar            SACarW                                             1    TrayAnCar            SACarW_Unload                FIRST 1      
 TrayAnCar            SACarW_Unload                 While contents(SACarW,Coil) > 0 Do Wait 5 min
                                                                         1    TrayAnCar            SACarW                       FIRST 1      
 TrayAnCar            SACarW                        If vSACarW_Needed > 0 Then //Changed at Annealing_2
                                                    {
                                                    	LOAD 4 In 1 min
                                                    	Dec vSACarW_Needed, groupqty(Coil)
                                                    	GRAPHIC groupqty(Coil) + 1
                                                    }                    1    TrayAnCar            SACarE                       FIRST 1      MOVE WITH ownedresource() then free
 Coil                 SACarW                        s_LOG_FILE(LEAVE,0)
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    //Should NEVER go to Route_1 (no annealing_1)
                                                    If a_Destination = m_AN and a_Anneal = 2 Then Route 2
                                                    Else If a_Destination > 4 And yProduct_Data[aProduct,17] = 0 Then Route 3
                                                    Else If a_Destination > 4 And yProduct_Data[aProduct,17] = 1 Then Route 4
                                                    Else DISPLAY"Unknown destination at NACarW ("$a_Destination$")"
                                                                         1    Coil                 Anneal_1                     Load 1       vAnneal1_Routing = aRoutingIndex
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 Anneal_2                     Load 1       vAnneal2_Routing = aRoutingIndex
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 Supercooling                 FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                                                                                             If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             {
                                                                                                                                             	Inc vFinishing_WIP
                                                                                                                                             	Inc a_DUMMY_First_tracker
                                                                                                                                             	Dec vMill_WIP
                                                                                                                                             }
                                                                         4    Coil                 Anneal_Saddles               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                                                                                             If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             {
                                                                                                                                             	Inc vFinishing_WIP
                                                                                                                                             	Inc a_DUMMY_First_tracker
                                                                                                                                             	Dec vMill_WIP
                                                                                                                                             }
                                                                              Coil                 Anneal_Saddles_OF            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                                                                                             If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             {
                                                                                                                                             	Inc vFinishing_WIP
                                                                                                                                             	Inc a_DUMMY_First_tracker
                                                                                                                                             	Dec vMill_WIP
                                                                                                                                             }
 Coil                 SAExit                        Display "Incorrect routing to SACarExit"
                                                                         1    Coil                 EXIT                         FIRST 1      s_LOG_FILE(LEAVE,0)
 Coil                 CFCool_1                      //Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    a_Destination = m_C3
                                                    //Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    IF CONTENTS(LOC(A200),Carrier) = 0 THEN ORDER 1 Carrier TO A200
                                                                         1    Coil                 A200                         Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_614 THEN FREE
                                                                                                                                             dec vCFCoilsReady
                                                                                                                                             DEC v_CFCool_Count
                                                                                                                                             if a_Temperature = m_Cool then dec vCFCoolBlue
                                                                                                                                             if a_Temperature = m_Cold then dec vCFCoolGreen
                                                                                                                                             dec vCFCoolBlueGreen
 Coil                 CFCool_2                      //Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    a_Destination = m_C3
                                                    //Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    IF CONTENTS(LOC(A200),Carrier) = 0 THEN ORDER 1 Carrier TO A200
                                                                         1    Coil                 A200                         Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_614 THEN FREE
                                                                                                                                             dec vCFCoilsReady
                                                                                                                                             DEC v_CFCool_Count
                                                                                                                                             if a_Temperature = m_Cool then dec vCFCoolBlue
                                                                                                                                             if a_Temperature = m_Cold then dec vCFCoolGreen
                                                                                                                                             dec vCFCoolBlueGreen
 Coil                 CFCool_3                      //Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    a_Destination = m_C3
                                                    //Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    IF CONTENTS(LOC(A200),Carrier) = 0 THEN ORDER 1 Carrier TO A200
                                                                         1    Coil                 A200                         Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_614 THEN FREE
                                                                                                                                             dec vCFCoilsReady
                                                                                                                                             DEC v_CFCool_Count
                                                                                                                                             if a_Temperature = m_Cool then dec vCFCoolBlue
                                                                                                                                             if a_Temperature = m_Cold then dec vCFCoolGreen
                                                                                                                                             dec vCFCoolBlueGreen
 Coil                 CFCool_4                      //Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    a_Destination = m_C3
                                                    //Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    IF CONTENTS(LOC(A200),Carrier) = 0 THEN ORDER 1 Carrier TO A200
                                                                         1    Coil                 A200                         Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_614 THEN FREE
                                                                                                                                             dec vCFCoilsReady
                                                                                                                                             DEC v_CFCool_Count
                                                                                                                                             if a_Temperature = m_Cool then dec vCFCoolBlue
                                                                                                                                             if a_Temperature = m_Cold then dec vCFCoolGreen
                                                                                                                                             dec vCFCoolBlueGreen
 Coil                 CFDensePack                   //Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    a_Destination = m_C3
                                                    //Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    IF CONTENTS(LOC(A200),Carrier) = 0 THEN ORDER 1 Carrier TO A200
                                                                         1    Coil                 A200                         Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_614 THEN FREE
                                                                                                                                             dec vCFCoilsReady
                                                                                                                                             DEC v_CFCool_Count
                                                                                                                                             if a_Temperature = m_Cool then dec vCFCoolBlue
                                                                                                                                             if a_Temperature = m_Cold then dec vCFCoolGreen
                                                                                                                                             dec vCFCoolBlueGreen
 Coil                 CF_OF                         //Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    a_Destination = m_C3
                                                    //Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    IF CONTENTS(LOC(A200),Carrier) = 0 THEN ORDER 1 Carrier TO A200
                                                                         1    Coil                 A200                         Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_614 THEN FREE
                                                                                                                                             dec vCFCoilsReady
                                                                                                                                             DEC v_CFCool_Count
                                                                                                                                             if a_Temperature = m_Cool then dec vCFCoolBlue
                                                                                                                                             if a_Temperature = m_Cold then dec vCFCoolGreen
                                                                                                                                             dec vCFCoolBlueGreen
 Carrier              A200                          GRAPHIC groupqty(Coil) + 1 + 8
                                                    
                                                    //Load up to 3 coils
                                                    load 1
                                                    load 1 in v_A200_Wait_Min min
                                                    IF groupqty(Coil) = 2 THEN load 1 in v_A200_Wait_Min min
                                                    GRAPHIC groupqty(Coil) + 1 + 8
                                                    
                                                    //wait until there is room at A601 and ASRSEntry
                                                    WHILE CONTENTS(LOC(ASRSEntry)) > (58 - groupqty(coil) - 3) or CONTENTS(LOC(A601)) > 1 or V_OnRoute_to_601 > 0 DO
                                                    {
                                                    	WAIT 1 MIN
                                                    }
                                                    Inc V_OnRoute_to_601, groupqty(Coil)
                                                                         1    Carrier              A601                         FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             If vAGVAtA200 = 0 Then WAIT Until vAGVAtA200 = 1  //Used to control timing with approaching AGV
                                                                                                                                             MOVE WITH AGV_1 THEN FREE
                                                                                                                                             if contents(A200,Carrier) <= 1 and vCFCoilsReady > 0 then ORDER 1 Carrier TO A200
 Coil                 C3Ent                                              1    Coil                 C3Mill                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE FOR a_Mill_In_Time MIN
 Coil                 C3Mill                        //Update Log file
                                                    s_LOG_FILE(ENTER,0)
                                                    
                                                    //Wait process time and get next destination
                                                    s_Process()
                                                    aCoilStart = Clock(hr)
                                                    
                                                    //Change coil color
                                                    a_Temperature = m_Warm
                                                    GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                         1    Coil                 C3ExitE                      FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE
 Coil                 C3ExitE                       INC v_C3_Coils_Rolled
                                                    
                                                    Int iRand = Rand(100)
                                                    
                                                    //Account for additional move time
                                                    Get Car_C3
                                                    If a_Alloy < 4000 Then Wait T(5,7,8) min
                                                    Else If iRand <= 20 then Wait T(5,7,8) min //20% of 5000 or 6000
                                                    Else Wait T(3,5,6) min
                                                                         1    Coil                 C3ExitW                      FIRST 1      MOVE WITH OwnedResource() THEN FREE
 Coil                 C3ExitW                                            1    Coil                 ASRSStore                    FIRST 1      MOVE WITH Crane_ASRS THEN FREE
                                                                              Coil                 ASRSMiddle                   FIRST        MOVE WITH Crane_ASRS,100 THEN FREE
 Coil                 ASRSEntry                     //Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    //Entry is essentially just a storage (temp holding) to get coils to C3 or S3
                                                    //Update graphics
                                                    a_Temperature = m_Cold
                                                    GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                    If a_Destination = m_C3 Then Route 1
                                                    Else If a_Destination = m_S3 Then Route 2
                                                    Else Display "Invalid Route at " $ Location()
                                                                         1    Coil                 C3Ent                        FIRST 1      //s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_ASRS THEN FREE
                                                                         2    Coil                 SL3_Entry                    FIRST 1      //s_LOG_FILE(LEAVE,0)
                                                                                                                                             If aFrom <= 4 then	
                                                                                                                                             {
                                                                                                                                             	If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             	{
                                                                                                                                             		Inc vFinishing_WIP
                                                                                                                                             		Inc a_DUMMY_First_tracker
                                                                                                                                             		Dec vMill_WIP
                                                                                                                                             	}
                                                                                                                                             }
                                                                                                                                             MOVE WITH Crane_ASRS THEN FREE
 Coil                 ASRSMiddle                    INT iCoolHours
                                                    //Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    //Wait cool time, update variables, update graphics
                                                    if aFrom = m_C3 Then s_Cooling()
                                                    Else Inc vASRSSouthMidCount
                                                    
                                                    IF a_Destination = m_S3 THEN 
                                                    {
                                                    	Inc v_ASRS_DEST_S3
                                                    	ROUTE 1
                                                    }
                                                    ELSE IF a_Destination = m_LM THEN
                                                    {
                                                    	s_CM_LM_Queue_ENTER
                                                    	Wait Until ySaddle[11,1] = 0
                                                    	Inc v_ASRS_DEST_LM 
                                                    	ROUTE 3
                                                    }
                                                    ELSE IF a_Destination = m_CM OR a_Destination > 3 THEN 
                                                    {
                                                    	s_CM_LM_Queue_ENTER
                                                    	IF a_Destination = m_CM or a_Destination = m_AN THEN INC v_Cooled_Coils_to_A602_210
                                                    	Else IF a_Destination = m_LC or a_Destination = m_CT Or a_Destination = m_S4 THEN INC v_Cooled_Coils_to_A602_700
                                                    	Else 
                                                    	{
                                                    		INC v_Cooled_Coils_to_A602_800
                                                    		If (a_Destination = m_TL Or a_Destination = m_LG Or a_Destination = m_HG Or a_Destination = m_PK 
                                                    		Or a_Destination = m_PL Or a_Destination = m_P2 Or a_Destination = m_Exit) Then 
                                                    		{
                                                    			//do nothing
                                                    		}
                                                    		Else 
                                                    		{
                                                    			Dec v_Cooled_Coils_to_A602_800 
                                                    		}
                                                    	}
                                                    	Inc v_ASRS_DEST_CMPLUS 
                                                    	ROUTE 2
                                                    }
                                                    ELSE DISPLAY "Unknown Destination at ASRS_Middle " $ a_Destination
                                                                         1    Coil                 SL3_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vASRSSouthMidCount
                                                                                                                                             If aFrom <= 4 then	
                                                                                                                                             {
                                                                                                                                             	If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             	{
                                                                                                                                             		Inc vFinishing_WIP
                                                                                                                                             		Inc a_DUMMY_First_tracker
                                                                                                                                             		Dec vMill_WIP
                                                                                                                                             	}
                                                                                                                                             }
                                                                                                                                             MOVE WITH Crane_ASRS THEN FREE
                                                                                                                                             Dec v_ASRS_DEST_S3
                                                                         2    Coil                 A602                         Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vASRSSouthMidCount
                                                                                                                                             MOVE WITH Crane_ASRS THEN FREE
                                                                                                                                             Dec v_ASRS_DEST_CMPLUS
                                                                                                                                             Inc a_DUMMY_Second_Tracker
                                                                         3    Coil                 ASRS_S01                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vASRSSouthMidCount
                                                                                                                                             MOVE WITH Crane_ASRS THEN FREE
                                                                                                                                             Dec v_ASRS_DEST_LM
 Coil                 ASRSStore                     INT iCoolHours
                                                    //Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    //Wait cool time, update variables, update graphics
                                                    if aFrom = m_C3 Then s_Cooling()
                                                    Else Inc vASRSSouthMidCount
                                                    
                                                    IF a_Destination = m_S3 THEN 
                                                    {
                                                    	Inc v_ASRS_DEST_S3 
                                                    	ROUTE 1
                                                    }
                                                    ELSE IF a_Destination = m_LM THEN
                                                    {
                                                    	s_CM_LM_Queue_ENTER
                                                    	Wait Until ySaddle[11,1] = 0
                                                    	Inc v_ASRS_DEST_LM 
                                                    	ROUTE 3
                                                    }
                                                    ELSE IF a_Destination = m_CM OR a_Destination > 3 THEN 
                                                    {
                                                    	s_CM_LM_Queue_ENTER
                                                    	IF a_Destination = m_CM or a_Destination = m_AN THEN INC v_Cooled_Coils_to_A602_210
                                                    	Else IF a_Destination = m_LC or a_Destination = m_CT Or a_Destination = m_S4 THEN INC v_Cooled_Coils_to_A602_700
                                                    	Else
                                                    	{
                                                    		INC v_Cooled_Coils_to_A602_800
                                                    		If (a_Destination = m_TL Or a_Destination = m_LG Or a_Destination = m_HG Or a_Destination = m_PK 
                                                    		Or a_Destination = m_PL Or a_Destination = m_P2 Or a_Destination = m_Exit) Then 
                                                    		{
                                                    			//do nothing
                                                    		}
                                                    		Else 
                                                    		{
                                                    			Dec v_Cooled_Coils_to_A602_800 
                                                    		}
                                                    	}
                                                    	Inc v_ASRS_DEST_CMPLUS 
                                                    	ROUTE 2
                                                    }
                                                    ELSE DISPLAY "Unknown Destination at ASRS_Middle " $ a_Destination
                                                                         1    Coil                 SL3_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vASRSSouthMidCount
                                                                                                                                             If aFrom <= 4 then	
                                                                                                                                             {
                                                                                                                                             	If a_DUMMY_First_tracker = 0 Then
                                                                                                                                             	{
                                                                                                                                             		Inc vFinishing_WIP
                                                                                                                                             		Inc a_DUMMY_First_tracker
                                                                                                                                             		Dec vMill_WIP
                                                                                                                                             	}
                                                                                                                                             }
                                                                                                                                             MOVE WITH Crane_ASRS THEN FREE
                                                                                                                                             Dec v_ASRS_DEST_S3
                                                                         2    Coil                 A602                         Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vASRSSouthMidCount
                                                                                                                                             MOVE WITH Crane_ASRS THEN FREE
                                                                                                                                             Dec v_ASRS_DEST_CMPLUS
                                                                                                                                             Inc a_DUMMY_Second_Tracker
                                                                         3    Coil                 ASRS_S01                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vASRSSouthMidCount
                                                                                                                                             MOVE WITH Crane_ASRS THEN FREE
                                                                                                                                             Dec v_ASRS_DEST_LM
 Coil                 SL3_Entry                                          1    Coil                 Slitter_3                    FIRST 1      
 Coil                 Slitter_3                     //Update Log file
                                                    s_LOG_FILE(ENTER,0)
                                                    //Wait process time and get next destination
                                                    aCuts = yRouting_Data[aRoutingIndex,14]
                                                    aBuildUps = yRouting_Data[aRoutingIndex,15]
                                                    s_Process()          1    Coil                 Slitter_3_Exit               FIRST aCuts  s_LOG_FILE(LEAVE,0)
 Coil                 Slitter_3_Exit                If a_Destination = m_P2 Then Route 1
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL Then Route 2
                                                    Else If a_Destination = m_PK Then Route 3
                                                    Else Route 2 //FOR ANY ROUTING ISSUES
                                                    //Else Display "Unapproved Destination at " $ Location()
                                                                         1    Coil                 P2_South_Ent                 FIRST 1      
                                                                         2    Coil                 South_Finished_Goods         FIRST 1      MOVE WITH ForkTrucks THEN FREE
                                                                         3    Coil                 PK_Floorspace                FIRST 1      MOVE WITH ForkTrucks THEN FREE
 Carrier              A602                          int iNumOfCoils
                                                    Int iMaxCount
                                                    Int iMaxDest 
                                                    GRAPHIC groupqty(Coil)+1+4
                                                    
                                                    //ADDED
                                                    Wait Until v_Cooled_Coils_to_A602_210 + v_Cooled_Coils_to_A602_700 + v_Cooled_Coils_to_A602_800 > 0
                                                    
                                                    IF v_Cooled_Coils_to_A602_210 > iMaxCount THEN 
                                                    {
                                                    	iMaxCount = v_Cooled_Coils_to_A602_210
                                                    	iMaxDest = m_CM
                                                    }
                                                    IF v_Cooled_Coils_to_A602_700 > iMaxCount THEN 
                                                    {
                                                    	iMaxCount = v_Cooled_Coils_to_A602_700
                                                    	iMaxDest = m_CT
                                                    }
                                                    IF v_Cooled_Coils_to_A602_800 > iMaxCount THEN 
                                                    {
                                                    	iMaxCount = v_Cooled_Coils_to_A602_800
                                                    	iMaxDest = m_TL
                                                    }
                                                    v_Destination_for_A602 = iMaxDest
                                                    
                                                    //Load up to 3 coils based on the destination of the first coil with a time limit
                                                    
                                                    //load 1 for sure, load 2 in a few minutes and if you have 2, try to load a 3rd in a few minutes
                                                    IF v_Destination_for_A602 = m_CM THEN 
                                                    {
                                                    	load 1 iff (a_Destination = m_CM Or a_Destination = m_AN) 
                                                    	load 1 iff (a_Destination = m_CM Or a_Destination = m_AN) in v_A602_Wait_Min min
                                                    	If groupqty(Coil) = 2 then load 1 iff (a_Destination = m_CM Or a_Destination = m_AN) in v_A602_Wait_Min min
                                                    	dec v_Cooled_Coils_to_A602_210, groupqty(Coil)
                                                    }
                                                    Else IF v_Destination_for_A602 = m_CT THEN 
                                                    {
                                                    	load 1 iff (a_Destination = m_CT Or a_Destination = m_LC Or a_Destination = m_S4) //SHOULD BE HERE!
                                                    	load 1 iff (a_Destination = m_CT Or a_Destination = m_LC Or a_Destination = m_S4) in v_A602_Wait_Min min
                                                    	If groupqty(Coil) = 2 then load 1 iff (a_Destination = m_CT Or a_Destination = m_LC Or a_Destination = m_S4) in v_A602_Wait_Min min
                                                    	dec v_Cooled_Coils_to_A602_700, groupqty(Coil)
                                                    	Dec vMill_WIP, groupqty(Coil)
                                                    	Inc vFinishing_WIP, groupqty(Coil)
                                                    }
                                                    Else IF v_Destination_for_A602 = m_TL THEN 
                                                    {
                                                    	load 1 iff (a_Destination = m_TL Or a_Destination = m_LG Or a_Destination = m_HG Or a_Destination = m_PK
                                                    			Or a_Destination = m_PL Or a_Destination = m_P2 Or a_Destination = m_Exit) //ADDED S4 
                                                    	load 1 iff (a_Destination = m_TL Or a_Destination = m_LG Or a_Destination = m_HG Or a_Destination = m_PK
                                                    			Or a_Destination = m_PL Or a_Destination = m_P2 Or a_Destination = m_Exit) in v_A602_Wait_Min min //ADDED S4
                                                    	If groupqty(Coil) = 2 then load 1 iff (a_Destination = m_TL Or a_Destination = m_LG Or a_Destination = m_HG Or a_Destination = m_PK
                                                    			Or a_Destination = m_PL Or a_Destination = m_P2 Or a_Destination = m_Exit) in v_A602_Wait_Min min //ADDED S4
                                                    	dec v_Cooled_Coils_to_A602_800, groupqty(Coil)
                                                    	Dec vMill_WIP, groupqty(Coil)
                                                    	Inc vFinishing_WIP, groupqty(Coil)
                                                    }
                                                    
                                                    GRAPHIC groupqty(Coil)+1+4 
                                                    v_CoilsLoadedAtA602 = groupqty(Coil)
                                                    Inc v_ONROUTE_TRACKING 
                                                    //When the container is full, or the time has expired, route the container to CM, CT, or TL
                                                    IF v_Destination_for_A602 = m_CM THEN 
                                                    {
                                                    	WHILE CONTENTS(LOC(A210)) > 0 DO 
                                                    	{
                                                    		WAIT 1 MIN
                                                    	}
                                                    	ROUTE 1
                                                    }
                                                    ELSE IF v_Destination_for_A602=m_CT THEN 
                                                    {
                                                    	WHILE CONTENTS(LOC(A700)) >0 or V_OnRoute_to_700 > 0 DO 
                                                    	{
                                                    		WAIT 1 MIN
                                                    	}
                                                    	Inc v_OnRoute_to_700, groupqty(Coil)
                                                    	Route 2
                                                    }
                                                    ELSE IF v_Destination_for_A602=m_TL THEN 
                                                    {
                                                    	WHILE CONTENTS(LOC(A800)) > 0 or V_OnRoute_to_800 > 0 DO 
                                                    	{
                                                    		//This is NOT holding anything up
                                                    		WAIT 1 MIN
                                                    	}
                                                    	Inc v_OnRoute_to_800, groupqty(Coil)
                                                    	ROUTE 3
                                                    }
                                                    ELSE DISPLAY "Unknown Routing for Carrier at A602 "$v_Destination_for_A602
                                                                         1    Carrier              A210                         FIRST 1      //s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             If vAGVAtA602 = 0 Then WAIT Until vAGVAtA602 = 1
                                                                                                                                             
                                                                                                                                             v_CoilsLoadedAtA602 = 0
                                                                                                                                             
                                                                                                                                             MOVE WITH AGV_1 THEN FREE
                                                                                                                                             v_Destination_for_A602 = 0 //Reset the destination flag for A602
                                                                                                                                             Order 1 Carrier To A602
                                                                                                                                             Dec v_ONROUTE_TRACKING
                                                                         2    Carrier              A700                         FIRST 1      //s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             If vAGVAtA602 = 0 Then WAIT Until vAGVAtA602 = 1
                                                                                                                                             
                                                                                                                                             v_CoilsLoadedAtA602 = 0
                                                                                                                                             
                                                                                                                                             MOVE WITH AGV_1 THEN FREE
                                                                                                                                             v_Destination_for_A602 = 0 //Reset the destination flag for A602
                                                                                                                                             Order 1 Carrier To A602
                                                                                                                                             Dec v_ONROUTE_TRACKING
                                                                         3    Carrier              A800                         FIRST 1      //s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             If vAGVAtA602 = 0 Then WAIT Until vAGVAtA602 = 1
                                                                                                                                             
                                                                                                                                             v_CoilsLoadedAtA602 = 0
                                                                                                                                             
                                                                                                                                             MOVE WITH AGV_1 THEN FREE
                                                                                                                                             v_Destination_for_A602 = 0 //Reset the destination flag for A602
                                                                                                                                             Order 1 Carrier To A602
                                                                                                                                             Dec v_ONROUTE_TRACKING
 Carrier              A210                          unload 3             1    Carrier              EXIT                         FIRST 1      
 Coil                 A210                          //s_LOG_FILE(ENTER,0)
                                                    a_Anneal = 0
                                                    If a_Destination = m_CM Then 
                                                    { 
                                                    	Inc vNACarM_Needed
                                                    	Route 2
                                                    }
                                                    Else if a_Destination = m_AN Then Route 5
                                                                         1    Coil                 Forced_Air_Cool_Tier1        FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                              Coil                 LMCoolSE                     FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                              Coil                 FAC_Overflow                 FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                         2    Coil                 NACarM                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                                                                                             Dec vNACarM_Needed
                                                                         3    Coil                 NACarM                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                                                                                             Dec vNACarM_Needed
                                                                         4    Coil                 SACarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                         5    Coil                 Forced_Air_Cool_Tier2        FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                              Coil                 FAC_Overflow                 FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
 Carrier              A700                          unload 3             1    Carrier              EXIT                         FIRST 1      
 Coil                 A700                          //Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    Dec v_OnRoute_to_700
                                                    If a_DUMMY_Second_Tracker > 0 Then 
                                                    {
                                                    	If a_DUMMY_First_tracker > 0 Then
                                                    	{
                                                    		//already recorded at WIP
                                                    		Dec vFinishing_WIP //fix loading vFinishing_WIP issue
                                                    	}
                                                    }
                                                    //C3 - Add routing with AGV_1 from here! going to A601
                                                    
                                                    If a_Destination = m_LC Then Route 1
                                                    Else If a_Destination = m_CT Then Route 2
                                                    Else If a_Destination = m_S4 Then Route 3
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 LCL_Ent                      FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_Racks                    FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         2    Coil                 Coating_Line_Ent             FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_Racks                    FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         3    Coil                 SL4_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_Racks                    FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
 Carrier              A700_Load                     GRAPHIC groupqty(Coil)+1+4
                                                    
                                                    //Load up to 3 coils based on the destination of the first coil with a time limit
                                                    load 1 iff (a_Destination = m_S3) 
                                                    
                                                    load 1 iff (a_Destination = m_S3) in 10 min
                                                    If groupqty(Coil) = 2 then load 1 iff (a_Destination = m_S3) in 10 min
                                                    GRAPHIC groupqty(Coil) + 1 + 4
                                                    
                                                    
                                                    WHILE CONTENTS(LOC(A601)) > 0 or V_OnRoute_to_601 > 0 DO 
                                                    {
                                                    	WAIT 1 MIN
                                                    }
                                                    Inc V_OnRoute_to_601, groupqty(Coil)
                                                                         1    Carrier              A601                         FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             
                                                                                                                                             WAIT 1 min #Used to control timing with approaching AGV
                                                                                                                                             MOVE WITH AGV_1 THEN FREE
 Pup_Coil             Pup_Coil_Pickup               //s_LOG_FILE(ENTER,0)
                                                                         1    Pup_Coil             Pup_Coil_Accum_LM            FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
 Pup_Coil             Pup_Coil_Accum_LM             //s_LOG_FILE(ENTER,0)
                                                    ACCUM 3
                                                    COMBINE 3
                                                    GRAPHIC 1            1    Pup_Coil_3           Pup_Coil_Sleeve_pickup       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616
 Pup_Coil_3           Pup_Coil_Sleeve_pickup        //s_LOG_FILE(ENTER,0)
                                                    GRAPHIC 1            1    Sleeves_3            Pup_Coil_Accum_LM            FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
 Sleeves_3            Pup_Coil_Accum_LM             //s_LOG_FILE(ENTER,0)
                                                    WAIT 1 MIN           1    Sleeves_3            EXIT                         FIRST 1      s_LOG_FILE(LEAVE,0)
 ALL                  TransferCar_Home              //s_LOG_FILE(ENTER,0)
                                                    Get LMPrep_CC1
                                                    aCoilCar = 1
                                                    Wait m_Lift_Time_CC1 sec
                                                                         1    ALL                  CoilCar1_PickUp              FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LMPrep_CC1
 ALL                  CoilCar1_PickUp               //s_LOG_FILE(ENTER,0)
                                                    Wait Until ySaddle[1,1] = 0
                                                                         1    ALL                  LMPrep_S01                   FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LMPrep_CC1
 ALL                  LMPrep_S01                    //s_LOG_FILE(ENTER,0)
                                                    Inc vCM_Exit_Saddle_WIP
                                                    ySaddle[1,1] = 1
                                                    
                                                    Wait m_Lower_Time_CC1 sec
                                                    Free All
                                                    aCoilCar = 0
                                                    Wait Until ySaddle[2,1] = 0
                                                    Get LMPrep_CC2, 10
                                                    aCoilCar = 2
                                                    Wait m_Lift_Time_CC2 sec
                                                                         1    ALL                  LMPrep_S02                   FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LMPrep_CC2
                                                                                                                                             ySaddle[1,1] = 0
 ALL                  LMPrep_S02                    //s_LOG_FILE(ENTER,0)
                                                    ySaddle[2,1] = 1
                                                    If ySaddle[3,1] = 1 Then
                                                    {
                                                    	Wait m_Lower_Time_CC2 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[3,1] = 0
                                                    	Get LMPrep_CC2, 20
                                                    	aCoilCar = 2
                                                    	Wait m_Lift_Time_CC2 sec
                                                    }                    1    ALL                  LMPrep_S03                   FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LMPrep_CC2
                                                                                                                                             ySaddle[2,1] = 0
 ALL                  LMPrep_S03                    //s_LOG_FILE(ENTER,0)
                                                    ySaddle[3,1] = 1
                                                    If  ySaddle[4,1] = 1  Then
                                                    {
                                                    	Wait m_Lower_Time_CC2 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until  ySaddle[4,1] = 0
                                                    	Get LMPrep_CC2, 30
                                                    	aCoilCar = 2
                                                    	Wait m_Lift_Time_CC2 sec	
                                                    }                    1    ALL                  LMPrep_S04                   FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LMPrep_CC2
                                                                                                                                             ySaddle[3,1] = 0
 ALL                  LMPrep_S04                    //s_LOG_FILE(ENTER,0)
                                                    ySaddle[4,1] = 1
                                                    If v_CM_Prep_In_Use = 0 Then 
                                                    {
                                                    	v_CM_Prep_In_Use = 1
                                                    	Route 1
                                                    }
                                                    Else 
                                                    {
                                                    	Wait m_Lower_Time_CC2 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until v_CM_Prep_In_Use = 0
                                                    	Get LMPrep_CC3
                                                    	aCoilCar = 3
                                                    	Wait m_Lift_Time_CC3 sec
                                                    	v_CM_Prep_In_Use = 1
                                                    	Route 2	
                                                    }                    1    ALL                  LMPrep_S05                   FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LMPrep_CC2 
                                                                                                                                             ySaddle[4,1] = 0
                                                                         2    ALL                  LMPrep_S05                   FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LMPrep_CC3 
                                                                                                                                             ySaddle[4,1] = 0
 ALL                  LMPrep_S05                    //s_LOG_FILE(ENTER,0)
                                                    ySaddle[5,1] = 1
                                                    
                                                    If aCoilCar = 2 Then
                                                    {
                                                    	Wait m_Lower_Time_CC2 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    }
                                                    If a_LM_Prepped = 0 Then //if Coil is NOT prepped yet, send it in
                                                    {	
                                                    	If aCoilCar = 0 Then 
                                                    	{
                                                    		Get LMPrep_CC3
                                                    		aCoilCar = 3
                                                    		Wait m_Lift_Time_CC3 sec
                                                    	}
                                                    	Route 1
                                                    }
                                                    If a_LM_Prepped = 1 Then //if Coil is ALREADY PREPPED send it on
                                                    {	
                                                    	Wait m_Lower_Time_CC3 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Graphic 2
                                                    	Wait Until ySaddle[6,1] = 0
                                                    	Get LMPrep_CC4, 10
                                                    	aCoilCar = 4
                                                    	Route 2
                                                    }                    1    ALL                  LMPrep                       FIRST 1      Dec vCM_Exit_Saddle_WIP
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LMPrep_CC3
                                                                         2    ALL                  LMPrep_S06                   FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LMPrep_CC4
                                                                                                                                             ySaddle[5,1] = 0
 ALL                  LMPrep                        //s_LOG_FILE(ENTER,0)
                                                    Wait m_Lower_Time_CC3 sec
                                                    Free All
                                                    Wait m_LMPrep_Time min
                                                    Get LMPrep_CC3
                                                    Wait m_Lift_Time_CC3 sec
                                                    a_LM_Prepped = 1	
                                                                         1    ALL                  LMPrep_S05                   FIRST 1      Inc vCM_Exit_Saddle_WIP
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LMPrep_CC3 
                                                                                                                                             v_CM_Prep_In_Use = 0
 ALL                  LMPrep_S06                    //s_LOG_FILE(ENTER,0)
                                                    ySaddle[6,1] = 1	
                                                    
                                                    If ySaddle[7,1] = 1 Then
                                                    {
                                                    	Wait m_Lower_Time_CC4 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[7,1] = 0
                                                    	Get LMPrep_CC4, 20
                                                    	aCoilCar = 4
                                                    	Wait m_Lift_Time_CC4 sec
                                                    }                    1    ALL                  LMPrep_S07                   FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LMPrep_CC4
                                                                                                                                             ySaddle[6,1] = 0
 ALL                  LMPrep_S07                    //s_LOG_FILE(ENTER,0)
                                                    ySaddle[7,1] = 1	
                                                    
                                                    If ySaddle[8,1] = 1 Then
                                                    {
                                                    	Wait m_Lower_Time_CC4 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[8,1] = 0
                                                    	Get LMPrep_CC4, 30
                                                    	aCoilCar = 4
                                                    	Wait m_Lift_Time_CC4 sec
                                                    }                    1    ALL                  LMPrep_S08                   FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LMPrep_CC4
                                                                                                                                             ySaddle[7,1] = 0	
 ALL                  LMPrep_S08                    //s_LOG_FILE(ENTER,0)
                                                    ySaddle[8,1] = 1
                                                    wait m_Lower_Time_CC4 sec
                                                    Free All             1    ALL                  Forced_Air_Cool_Tier1        FIRST 1      Dec vCM_Exit_Saddle_WIP
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             ySaddle[8,1] = 0
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                              ALL                  LMCoolSE                     FIRST        Dec vCM_Exit_Saddle_WIP
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             ySaddle[8,1] = 0
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                              ALL                  FAC_Overflow                 FIRST        Dec vCM_Exit_Saddle_WIP
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             ySaddle[8,1] = 0
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
 ALL                  Forced_Air_Cool_Tier1         If a_Destination = m_LM Or a_Destination = m_CM Then
                                                    {
                                                    	s_CM_LM_Queue_ENTER
                                                    	//Wait cool time, update variables, update graphics
                                                    	s_Cooling()
                                                    	Route 1
                                                    }                    1    ALL                  LM_Ent_S01,98                FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vLMCoolCount
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                         2    Coil                 SACarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vLMCoolCount
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                         3    Coil                 NACarM                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vLMCoolCount
                                                                                                                                             Dec vNACarM_Needed
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
 ALL                  Forced_Air_Cool_Tier2         If a_Destination = m_LM Then 
                                                    {
                                                    	s_CM_LM_Queue_ENTER
                                                    	Display "LM should not m_BE at FAC2"
                                                    }
                                                    Else if a_Destination = m_AN Then 
                                                    {
                                                    	Inc vAnneal
                                                    	Inc vLMCoolCount
                                                    	Wait Until (yAnneal[1,1] = 0) Or (yAnneal[2,1] = 0) 
                                                    				Or (yAnneal[1,1] = aProduct And yAnneal[1,2] < 8) 
                                                    				Or (yAnneal[2,1] = aProduct And yAnneal[2,2] < 8) 
                                                    	
                                                    	If yAnneal[1,1] = aProduct And yAnneal[1,2] < 8 Then 
                                                    	{
                                                    		a_Anneal = 1
                                                    		Inc yAnneal[1,2] //Increase the qty ready
                                                    		If yAnneal[1,2] = 8 Then yAnneal[1,1] = 999 //if full load ready trigger batching
                                                    		Wait 0
                                                    		Wait Until yAnneal[1,1] = 999
                                                    		Inc vNACarM_Needed
                                                    		Route 3
                                                    	}
                                                    	Else If yAnneal[2,1] = aProduct And yAnneal[2,2] < 8  Then 
                                                    	{
                                                    		a_Anneal = 2
                                                    		Inc yAnneal[2,2] //Increase the qty ready
                                                    		If yAnneal[2,2] = 8 Then yAnneal[2,1] = 999 //if full load ready trigger batching
                                                    		Wait 0
                                                    		Wait Until yAnneal[2,1] = 999
                                                    		Inc vSACarE_Needed
                                                    		Route 2
                                                    	}
                                                    	Else If yAnneal[1,1] = 0  Then
                                                    	{
                                                    		Order 1 Anneal_Car To Anneal_1
                                                    		a_Anneal = 1
                                                    		yAnneal[1,1] = aProduct
                                                    		Inc yAnneal[1,2]	
                                                    		Wait Until yAnneal[1,1] = 999
                                                    		Inc vNACarM_Needed
                                                    		Route 3
                                                    	}
                                                    	Else If yAnneal[2,1] = 0 Then 
                                                    	{
                                                    		Order 1 Anneal_Car To Anneal_2
                                                    		a_Anneal = 2
                                                    		yAnneal[2,1] = aProduct
                                                    		Inc yAnneal[2,2]	
                                                    		Wait Until yAnneal[2,1] = 999
                                                    		Inc vSACarE_Needed
                                                    		Route 2
                                                    	}
                                                    }                    1    ALL                  LM_Ent_S01,98                FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vLMCoolCount
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                         2    Coil                 SACarE                       Load 1       Dec vAnneal
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vLMCoolCount
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                         3    Coil                 NACarM                       Load 1       Dec vAnneal
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vLMCoolCount
                                                                                                                                             Dec vNACarM_Needed
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
 ALL                  FAC_Overflow                  If a_Destination = m_LM Then 
                                                    {
                                                    	s_CM_LM_Queue_ENTER
                                                    	//Wait cool time, update variables, update graphics
                                                    	s_Cooling()
                                                    	Route 1
                                                    }
                                                    Else if a_Destination = m_AN Then 
                                                    {
                                                    	Inc vAnneal
                                                    	Inc vLMCoolCount
                                                    	//check if anneal is ready for NEW product, or is working on THIS product (and is less than 8)
                                                    	Wait Until (yAnneal[1,1] = 0) Or (yAnneal[2,1] = 0) 
                                                    				Or (yAnneal[1,1] = aProduct And yAnneal[1,2] < 8) 
                                                    				Or (yAnneal[2,1] = aProduct And yAnneal[2,2] < 8) 
                                                    	
                                                    	If yAnneal[1,1] = aProduct And yAnneal[1,2] < 8 Then 
                                                    	{
                                                    		a_Anneal = 1
                                                    		Inc yAnneal[1,2] //Increase the qty ready
                                                    		If yAnneal[1,2] = 8 Then yAnneal[1,1] = 999 //if full load ready trigger batching
                                                    		Wait 0
                                                    		Wait Until yAnneal[1,1] = 999
                                                    		Inc vNACarM_Needed
                                                    		Route 3
                                                    	}
                                                    	Else If yAnneal[2,1] = aProduct And yAnneal[2,2] < 8  Then 
                                                    	{
                                                    		a_Anneal = 2
                                                    		Inc yAnneal[2,2] //Increase the qty ready
                                                    		If yAnneal[2,2] = 8 Then yAnneal[2,1] = 999 //if full load ready trigger batching
                                                    		Wait 0
                                                    		Wait Until yAnneal[2,1] = 999
                                                    		Inc vSACarE_Needed
                                                    		Route 2
                                                    	}
                                                    	Else If yAnneal[1,1] = 0  Then
                                                    	{
                                                    		Order 1 Anneal_Car To Anneal_1
                                                    		a_Anneal = 1
                                                    		yAnneal[1,1] = aProduct
                                                    		Inc yAnneal[1,2]
                                                    		Wait Until yAnneal[1,1] = 999
                                                    		Inc vNACarM_Needed
                                                    		Route 3
                                                    	}
                                                    	Else If yAnneal[2,1] = 0 Then 
                                                    	{
                                                    		Order 1 Anneal_Car To Anneal_2
                                                    		a_Anneal = 2
                                                    		yAnneal[2,1] = aProduct
                                                    		Inc yAnneal[2,2]
                                                    		Wait Until yAnneal[2,1] = 999
                                                    		Inc vSACarE_Needed
                                                    		Route 2
                                                    	}
                                                    }                    1    ALL                  LM_Ent_S01,98                FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vLMCoolCount
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                         2    Coil                 SACarE                       Load 1       Dec vAnneal
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vLMCoolCount
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                         3    Coil                 NACarM                       Load 1       Dec vAnneal
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vLMCoolCount
                                                                                                                                             Dec vNACarM_Needed
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
 ALL                  LMCoolSE                      If a_Destination=m_LM Then 
                                                    {
                                                    	//Wait cool time, update variables, update graphics
                                                    	s_Cooling()
                                                    	Route 1
                                                    }
                                                    
                                                    s_CM_LM_Queue_ENTER
                                                                         1    ALL                  LM_Ent_S01,98                FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vLMCoolCount
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                         2    Coil                 SACarE                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vLMCoolCount
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                         3    Coil                 NACarM                       Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vLMCoolCount
                                                                                                                                             Dec vNACarM_Needed
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
 ALL                  ASRS_S01                      //s_LOG_FILE(ENTER,0)
                                                    ySaddle[11,1] = 1
                                                    
                                                    If ySaddle[12,1] = 1 Then
                                                    {
                                                    
                                                    	Wait Until ySaddle[12,1] = 0
                                                    	Get ASRS_CC1, 10
                                                    	aCoilCar = 5
                                                    	Wait m_Lift_Time_asrs_CC1 sec
                                                    }                    1    ALL                  ASRS_S02                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move with ASRS_CC1
                                                                                                                                             ySaddle[11,1] = 0
 ALL                  ASRS_S02                      //s_LOG_FILE(ENTER,0)
                                                    ySaddle[12,1] = 1
                                                    
                                                    If ySaddle[13,1] = 1 Then
                                                    {
                                                    	Wait m_Lower_Time_asrs_CC1 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[13,1] = 0
                                                    	Get asrs_cc1, 20
                                                    	aCoilCar = 5
                                                    	Wait m_Lift_Time_asrs_CC1 sec
                                                    }                    1    ALL                  ASRS_S03                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move with ASRS_CC1
                                                                                                                                             ySaddle[12,1] = 0
 ALL                  ASRS_S03                      //s_LOG_FILE(ENTER,0)
                                                    ySaddle[13,1] = 1
                                                    
                                                    
                                                    	Wait m_Lower_Time_asrs_CC1 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[14,1] = 0
                                                    	Get asrs_cc2, 10
                                                    	aCoilCar = 6
                                                    	Wait m_Lift_Time_asrs_CC2 sec
                                                                         1    ALL                  ASRS_S04                     FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move with ASRS_CC2
                                                                                                                                             ySaddle[13,1] = 0
 ALL                  ASRS_S04                      //s_LOG_FILE(ENTER,0)
                                                    ySaddle[14,1] = 1
                                                    
                                                    If ySaddle[15,1] = 1 Then
                                                    {
                                                    	Wait m_Lower_Time_asrs_CC2 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[15,1] = 0
                                                    	Get asrs_cc2, 20
                                                    	aCoilCar = 6
                                                    	Wait m_Lift_Time_asrs_CC2 sec
                                                    }
                                                    
                                                    s_CM_LM_Queue_ENTER
                                                                         1    ALL                  LM_Ent_HOLD                  FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move with asrs_cc2
                                                                                                                                             ySaddle[14,1] = 0
 ALL                  LM_Ent_HOLD                   //s_LOG_FILE(ENTER,0)
                                                    ySaddle[15,1] = 1
                                                                         1    ALL                  LM_Ent_S01,99                FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move with asrs_cc2
                                                                                                                                             ySaddle[15,1] = 0
 ALL                  LM_Ent_S01                    //s_LOG_FILE(ENTER,0)
                                                    ySaddle[21,1] = 1
                                                    
                                                    	Wait m_Lower_Time_asrs_CC2 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[22,1] = 0
                                                    	Get LM_Ent_CC1, 10
                                                    	aCoilCar = 7
                                                    	Wait m_Lift_Time_LM_Ent_cc1 sec
                                                                         1    ALL                  LM_Ent_S02                   FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LM_Ent_CC1
                                                                                                                                             ySaddle[21,1] = 0
 ALL                  LM_Ent_S02                    //s_LOG_FILE(ENTER,0)
                                                    ySaddle[22,1] = 1
                                                    
                                                    If ySaddle[23,1] = 1 Then
                                                    {
                                                    	Wait m_Lower_Time_LM_Ent_cc1 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[23,1] = 0
                                                    	Get LM_Ent_cc1, 20
                                                    	aCoilCar = 7
                                                    	Wait m_Lift_Time_LM_Ent_cc1 sec
                                                    }                    1    ALL                  LM_Ent_S03                   FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LM_Ent_cc1
                                                                                                                                             ySaddle[22,1] = 0
 ALL                  LM_Ent_S03                    //s_LOG_FILE(ENTER,0)
                                                    ySaddle[23,1] = 1
                                                    
                                                    
                                                    	Wait m_Lower_Time_LM_Ent_cc1 sec
                                                    	Free All
                                                    	aCoilCar = 0        1    ALL                  LMMill                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             ySaddle[23,1] = 0
 ALL                  LM_Ent_S04                    //s_LOG_FILE(ENTER,0)
                                                                         1    ALL                  LMMill                       FIRST 1      s_LOG_FILE(LEAVE,0)
 ALL                  LMMill                        //Update Log file
                                                    s_LOG_FILE(ENTER,0)
                                                    
                                                    //Wait process time and get next destination
                                                    s_Process()
                                                    aCoilStart = Clock(hr)
                                                    
                                                    //Change coil color
                                                    a_Temperature = m_Warm
                                                    GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                    If a_Owner = TAA and a_Already_Added_to_C4_Queue_Lb = 0 Then debug
                                                    s_CM_LM_Queue_EXIT 		//ADDED
                                                                         1    Coil                 LMExit                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE
                                                                                                                                             #Wait for any Mill Delay
                                                                                                                                             //IF v_LMDelayMins > 0 THEN DOWN LM_Delay,100
                                                                         2*   Pup_Coil             Pup_Coil_Pickup              FIRST 1      s_LOG_FILE(LEAVE,0)
 ALL                  LMExit                        If a_Destination <> m_LM then Inc v_LM_InpectFreqCounter
                                                    If v_LM_InpectFreqCounter = 10 Then 
                                                    {
                                                    	aLM_Inspect = 1
                                                    	v_LM_InpectFreqCounter = 0
                                                    }
                                                    If v_LM_Inspect_In_Use = 0 Then Route 2
                                                    Else Route 1
                                                    
                                                    INC v_LM_Coils_Rolled
                                                                         1    ALL                  LM_Exit_S01                  FIRST 1      Inc vLM_Saddle_Exit_WIP
                                                                         2    ALL                  LM_Exit_S02                  FIRST 1      Inc vLM_Saddle_Exit_WIP
 ALL                  LM_Exit_S01                   
                                                    ySaddle[31,1] = 1
                                                    
                                                    
                                                    	Wait Until v_LM_Inspect_In_Use = 0 And ySaddle[32,1] = 0
                                                    	If aLM_Inspect = 1 Then v_LM_Inspect_In_Use = 1
                                                    	Get LM_Exit_CC1, 10
                                                    	aCoilCar = 8
                                                    	Wait m_Lift_Time_LM_Exit_cc1 sec
                                                                         1    ALL                  LM_Exit_S02                  FIRST 1      Move With LM_Exit_CC1
                                                                                                                                             ySaddle[31,1] = 0
 ALL                  LM_Exit_S02                   ySaddle[32,1] = 1
                                                    
                                                    If aLM_Inspect = 1 Then
                                                    {
                                                    	v_LM_Inspect_In_Use = 1
                                                    	Route 1
                                                    }
                                                    Else 
                                                    {
                                                    	Wait m_Lower_Time_LM_Exit_cc1 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	If a_Destination = m_LM Then Route 3 //another pass on LM
                                                    	Else If a_Destination = m_CM Then 
                                                    	{
                                                    		Inc vNACarM_Needed
                                                    		Route 4 //another pass on CM
                                                    	}
                                                    	Else if a_Destination = m_AN Then Route 6
                                                    	Else if a_Destination > 4 Then  //Finishing
                                                    	{
                                                    		Wait Until ySaddle[33,1] = 0
                                                    		Get LM_Exit_CC2, 10
                                                    		aCoilCar = 9
                                                    		Wait m_Lift_Time_LM_Exit_cc2 sec
                                                    		Route 2
                                                    	}
                                                    }	                   1    ALL                  LM_Inspect                   FIRST 1      Dec vLM_Saddle_Exit_WIP
                                                                                                                                             Move With LM_Exit_CC1
                                                                                                                                             ySaddle[32,1] = 0
                                                                         2    ALL                  LM_Exit_CCHome               FIRST 1      Move With LM_Exit_CC2
                                                                                                                                             ySaddle[32,1] = 0
                                                                                                                                             v_LM_Inspect_In_Use = 0
                                                                         3    ALL                  Forced_Air_Cool_Tier1        FIRST 1      Dec vLM_Saddle_Exit_WIP
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                                                                                             ySaddle[32,1] = 0
                                                                                                                                             v_LM_Inspect_In_Use = 0
                                                                              ALL                  LMCoolSE                     FIRST        Dec vLM_Saddle_Exit_WIP
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                                                                                             ySaddle[32,1] = 0
                                                                                                                                             v_LM_Inspect_In_Use = 0
                                                                              ALL                  FAC_Overflow                 FIRST        Dec vLM_Saddle_Exit_WIP
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                                                                                             ySaddle[32,1] = 0
                                                                                                                                             v_LM_Inspect_In_Use = 0
                                                                         4    ALL                  NACarM                       Load 1       Dec vNACarM_Needed
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                                                                                             ySaddle[32,1] = 0
                                                                                                                                             v_LM_Inspect_In_Use = 0
                                                                         5    ALL                  SACarE                       Load 1       MOVE WITH Crane_616 THEN FREE
                                                                                                                                             ySaddle[32,1] = 0
                                                                                                                                             v_LM_Inspect_In_Use = 0
                                                                                                                                             
                                                                         6    ALL                  Forced_Air_Cool_Tier2        FIRST 1      Dec vLM_Saddle_Exit_WIP
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                                                                                             ySaddle[32,1] = 0
                                                                                                                                             v_LM_Inspect_In_Use = 0
                                                                              ALL                  FAC_Overflow                 FIRST        Dec vLM_Saddle_Exit_WIP
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
                                                                                                                                             ySaddle[32,1] = 0
                                                                                                                                             v_LM_Inspect_In_Use = 0
 ALL                  LM_Inspect                    //s_LOG_FILE(ENTER,0)
                                                    Wait m_LMInspect min
                                                                         1    ALL                  LM_Exit_S02                  FIRST 1      Inc vLM_Saddle_Exit_WIP
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With LM_Exit_CC1
                                                                                                                                             
                                                                                                                                             aLM_Inspect = 0
 ALL                  LM_Exit_CCHome                                     1    ALL                  LM_Exit_S03                  FIRST 1      Move With LM_Exit_CC2
 ALL                  LM_Exit_S03                   ySaddle[33,1] = 1
                                                    
                                                    	Wait m_Lower_Time_LM_Exit_cc2 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[34,1] = 0
                                                    	Get LM_Exit_CC3, 10
                                                    	aCoilCar = 10
                                                    	Wait m_Lift_Time_LM_Exit_cc3 sec
                                                                         1    ALL                  LM_Exit_S04                  FIRST 1      Move With LM_Exit_CC3
                                                                                                                                             ySaddle[33,1] = 0
 ALL                  LM_Exit_S04                   ySaddle[34,1] = 1
                                                    
                                                    If ySaddle[35,1] = 1 Then
                                                    {
                                                    	Wait m_Lower_Time_LM_Exit_cc3 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[35,1] = 0
                                                    	Get LM_Exit_CC3, 10
                                                    	aCoilCar = 10
                                                    	Wait m_Lift_Time_LM_Exit_cc3 sec
                                                    }                    1    ALL                  LM_Exit_S05                  FIRST 1      Move With LM_Exit_CC3
                                                                                                                                             ySaddle[34,1] = 0
 ALL                  LM_Exit_S05                   ySaddle[35,1] = 1
                                                    
                                                    If ySaddle[36,1] = 1 Then
                                                    {
                                                    	Wait m_Lower_Time_LM_Exit_cc3 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[36,1] = 0
                                                    	Get LM_Exit_CC3, 10
                                                    	aCoilCar = 10
                                                    	Wait m_Lift_Time_LM_Exit_cc3 sec
                                                    }                    1    ALL                  LM_Exit_S06                  FIRST 1      Move With LM_Exit_CC3
                                                                                                                                             ySaddle[35,1] = 0
 ALL                  LM_Exit_S06                   ySaddle[36,1] = 1
                                                    
                                                    If ySaddle[37,1] = 1 Then
                                                    {
                                                    	Wait m_Lower_Time_LM_Exit_cc3 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[37,1] = 0
                                                    	Get LM_Exit_CC3, 10
                                                    	aCoilCar = 10
                                                    	Wait m_Lift_Time_LM_Exit_cc3 sec
                                                    }                    1    ALL                  LM_Exit_S07                  FIRST 1      Move With LM_Exit_CC3
                                                                                                                                             ySaddle[36,1] = 0
 ALL                  LM_Exit_S07                   ySaddle[37,1] = 1
                                                    
                                                    If ySaddle[38,1] = 1 Then
                                                    {
                                                    	Wait m_Lower_Time_LM_Exit_cc3 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[38,1] = 0
                                                    	Get LM_Exit_CC3, 10
                                                    	aCoilCar = 10
                                                    	Wait m_Lift_Time_LM_Exit_cc3 sec
                                                    }                    1    ALL                  LM_Exit_S08                  FIRST 1      Move With LM_Exit_CC3
                                                                                                                                             ySaddle[37,1] = 0
 ALL                  LM_Exit_S08                   ySaddle[38,1] = 1
                                                    
                                                    If ySaddle[39,1] = 1 Then
                                                    {
                                                    	Wait m_Lower_Time_LM_Exit_cc3 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    	Wait Until ySaddle[39,1] = 0
                                                    	Get LM_Exit_CC3, 10
                                                    	aCoilCar = 10
                                                    	Wait m_Lift_Time_LM_Exit_cc3 sec
                                                    }                    1    ALL                  LM_Exit_S09                  FIRST 1      Move With LM_Exit_CC3
                                                                                                                                             ySaddle[38,1] = 0
 ALL                  LM_Exit_S09                   ySaddle[39,1] = 1
                                                    	Wait m_Lower_Time_LM_Exit_cc3 sec
                                                    	Free All
                                                    	aCoilCar = 0
                                                    
                                                    //If a_Destination = m_AN Then Inc vSACarE_Needed	
                                                    If a_Destination = m_AN and a_Anneal=1 and yAnneal[1,1] =aProduct Then Route 1
                                                    Else If a_Destination = m_AN and a_Anneal=2 and yAnneal[2,1]=aProduct  Then Route 2
                                                    Else If a_Destination > 4 And yProduct_Data[aProduct,17]=0 Then Route 3
                                                    Else If a_Destination > 4 And yProduct_Data[aProduct,17]=1 Then Route 4
                                                                         1    Coil                 Anneal_1                     Load 1       debug
                                                                                                                                             Dec vLM_Saddle_Exit_WIP
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             //Move With Crane_624 Then Free
                                                                                                                                             ySaddle[39,1] = 0
                                                                         2    Coil                 Anneal_2                     Load 1       debug
                                                                                                                                             Dec vLM_Saddle_Exit_WIP
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             //Move With Crane_624 Then Free
                                                                                                                                             ySaddle[39,1] = 0
                                                                         3    Coil                 Supercooling                 FIRST 1      Dec vLM_Saddle_Exit_WIP
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vMill_WIP
                                                                                                                                             Inc vFinishing_WIP
                                                                                                                                             Inc a_DUMMY_First_tracker
                                                                                                                                             Move With Crane_624 Then Free
                                                                                                                                             ySaddle[39,1] = 0
                                                                                                                                             
                                                                         4    Coil                 Anneal_Saddles               FIRST 1      Dec vLM_Saddle_Exit_WIP
                                                                                                                                             s_LOG_FILE(LEAVE,0)
                                                                                                                                             Dec vMill_WIP
                                                                                                                                             Inc vFinishing_WIP
                                                                                                                                             Inc a_DUMMY_First_tracker
                                                                                                                                             Move With Crane_624 Then Free
                                                                                                                                             ySaddle[39,1] = 0
                                                                                                                                             
 Coil                 Coating_Line_Ent                                   1    Coil                 Coating_Line                 FIRST 1      
 Coil                 Coating_Line                  #Update Log file
                                                    s_LOG_FILE(ENTER,0)
                                                    
                                                    
                                                    #Wait process time and get next destination
                                                    s_Process()          1    Coil                 Coating_Line_Exit            FIRST 1      s_LOG_FILE(LEAVE,0)
 Coil                 Coating_Line_Exit             If a_Destination = m_LG or a_Destination = m_HG
                                                    		or a_Destination = m_TL  Then 
                                                    	{
                                                    	if vOrCarW_Needed > 3 then Route 4
                                                    	Else
                                                    		{
                                                    		Inc vOrCarW_Needed
                                                    		Route 1
                                                    		}
                                                    	}
                                                    Else If a_Destination = m_LC Then Route 2
                                                    Else If a_Destination = m_S4 Then Route 5
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL 
                                                    		Or a_Destination = m_P2 or a_Destination = m_PK Then Route 3
                                                    Else Display "Unapproved Destination at " $ Location()
                                                                         1    Coil                 Orange_Car_W                 Load 1       MOVE WITH Crane_634 THEN FREE
                                                                         2    Coil                 LCL_Ent                      FIRST 1      MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_Racks                    FIRST        MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        MOVE WITH Crane_634 THEN FREE
                                                                         3    Coil                 Yellow_Spot                  FIRST 1      MOVE WITH Crane_634 THEN FREE
                                                                         4    Coil                 LCL_Racks                    FIRST 1      MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        MOVE WITH Crane_634 THEN FREE
                                                                         5    Coil                 SL4_Entry                    FIRST 1      MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_Racks                    FIRST        MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        MOVE WITH Crane_634 THEN FREE
 Coil                 LCL_Ent                                            1    Coil                 LCL_Level_Clean_Line         FIRST 1      
 Coil                 LCL_Level_Clean_Line          #Update Log file
                                                    s_LOG_FILE(ENTER,0)
                                                    
                                                    
                                                    #Wait process time and get next destination
                                                    s_Process()          1    Coil                 LCL_Exit                     FIRST 1      s_LOG_FILE(LEAVE,0)
 Coil                 LCL_Exit                      If a_Destination = m_LG or a_Destination = m_HG or a_Destination = m_TL Then 
                                                    	{
                                                    	if vOrCarW_Needed > 3 then Route 4
                                                    	Else
                                                    		{
                                                    		Inc vOrCarW_Needed
                                                    		Route 1
                                                    		}
                                                    	}
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL 
                                                    		Or a_Destination = m_P2 or a_Destination = m_PK Then Route 2
                                                    Else If a_Destination = m_S3 Then
                                                    	{
                                                    	IF CONTENTS(LOC(A700_Load),Carrier) = 0 THEN ORDER 1 Carrier TO A700_Load
                                                    	Route 4
                                                    	}
                                                    Else If a_Destination = m_S4 Then
                                                    	{
                                                    	
                                                    	}
                                                    Else Display "Unapproved Destination at " $ Location()
                                                    
                                                                         1    Coil                 Orange_Car_W                 Load 1       MOVE WITH Crane_634 THEN FREE
                                                                         2    Coil                 Yellow_Spot                  FIRST 1      MOVE WITH Crane_634 THEN FREE
                                                                         3    Coil                 A700_Load                    Load 1       MOVE WITH Crane_634 THEN FREE
                                                                         4    Coil                 LCL_Racks                    FIRST 1      MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        MOVE WITH Crane_634 THEN FREE
                                                                         5    Coil                 SL4_Entry                    FIRST 1      MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_Racks                    FIRST        MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        MOVE WITH Crane_634 THEN FREE
 Coil                 Yellow_Spot                   #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    If a_Destination = m_Exit Or a_Destination = m_PL Then Route 1
                                                    Else If a_Destination = m_P2 Then Route 2
                                                    Else If a_Destination = m_PK Then Route 3
                                                    Else Display "Unapproved Destination at " $ Location()
                                                                         1    Coil                 North_Finished_Goods         FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH ForkTrucks THEN FREE
                                                                         2    Coil                 P2_South_Ent                 FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH ForkTrucks THEN FREE
                                                                         3    Coil                 PK_Floorspace                FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH ForkTrucks THEN FREE
 Coil                 Slitter_Bay_Racks             #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    If a_Destination = m_LG Then Route 1
                                                    Else If a_Destination = m_HG Then Route 2
                                                    Else If a_Destination = m_TL Then Route 3
                                                    Else if a_Destination = m_S3 or a_Destination = m_LC Or a_Destination = m_CT Or a_Destination = m_S4  Then 
                                                    	{
                                                    	IF a_Destination = m_S3 THEN INC v_Coils_to_A800_601
                                                    	Else IF a_Destination = m_LC or a_Destination = m_CT Or a_Destination = m_S4 THEN INC v_Coils_to_A800_700
                                                    		
                                                    	INT iMaxCount, iMaxDest, iCoolHours
                                                    	# Find which destination has the most coils waiting
                                                    	iMaxCount=0
                                                    	iMaxDest=0
                                                    	IF v_Coils_to_A800_601>iMaxCount THEN 
                                                    		{
                                                    		iMaxCount=v_Coils_to_A800_601
                                                    		iMaxDest=m_S3
                                                    		}
                                                    	IF v_Coils_to_A800_700>iMaxCount THEN 
                                                    		{
                                                    		iMaxCount=v_Coils_to_A800_700
                                                    		iMaxDest=m_CT
                                                    		}
                                                    	
                                                    	v_Destination_for_A800=iMaxDest
                                                    		
                                                    	IF CONTENTS(LOC(A800_Load),Carrier)=0 AND iMaxDest<>0 THEN
                                                    		{
                                                    		ORDER 1 Carrier TO A800_Load
                                                    		}
                                                    	Route 7
                                                    	}
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL 
                                                    	or a_Destination = m_PK or a_Destination = m_P2 Then Route 6
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 LG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 HG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 TL_Ent                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         4    Coil                 SL3_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE WITH ForkTrucks THEN FREE
                                                                         5    Coil                 Orange_Car_M                 Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         6    Coil                 PK_Floorspace                Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         7    Coil                 A800_Load                    Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
 Coil                 Slitter_Bay_OF                #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    If a_Destination = m_LG Then Route 1
                                                    Else If a_Destination = m_HG Then Route 2
                                                    Else If a_Destination = m_TL Then Route 3
                                                    Else if a_Destination = m_S3 or a_Destination = m_LC Or a_Destination = m_CT Or a_Destination = m_S4 Then 
                                                    	{
                                                    	IF a_Destination = m_S3 THEN INC v_Coils_to_A800_601
                                                    	Else IF a_Destination = m_LC or a_Destination = m_CT Or a_Destination = m_S4 THEN INC v_Coils_to_A800_700
                                                    		
                                                    	INT iMaxCount, iMaxDest, iCoolHours
                                                    	# Find which destination has the most coils waiting
                                                    	iMaxCount=0
                                                    	iMaxDest=0
                                                    	IF v_Coils_to_A800_601>iMaxCount THEN 
                                                    		{
                                                    		iMaxCount=v_Coils_to_A800_601
                                                    		iMaxDest=m_S3
                                                    		}
                                                    	IF v_Coils_to_A800_700>iMaxCount THEN 
                                                    		{
                                                    		iMaxCount=v_Coils_to_A800_700
                                                    		iMaxDest=m_CT
                                                    		}
                                                    	
                                                    	v_Destination_for_A800=iMaxDest
                                                    		
                                                    	IF CONTENTS(LOC(A800_Load),Carrier)=0 AND iMaxDest<>0 THEN
                                                    		{
                                                    		ORDER 1 Carrier TO A800_Load
                                                    		}
                                                    	Route 7
                                                    	}
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL 
                                                    	or a_Destination = m_PK or a_Destination = m_P2 Then Route 6
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 LG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 HG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 TL_Ent                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         4    Coil                 SL3_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE WITH ForkTrucks THEN FREE
                                                                         5    Coil                 Orange_Car_M                 Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         6    Coil                 PK_Floorspace                Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         7    Coil                 A800_Load                    Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
 Coil                 HG_Slitter_Ent                                     1    Coil                 HG_Heavy_Gauge_Slitter       FIRST 1      
 Coil                 HG_Heavy_Gauge_Slitter        //Update Log file
                                                    s_LOG_FILE(ENTER,0)
                                                    
                                                    
                                                    //Wait process time and get next destination
                                                    aCuts = yRouting_Data[aRoutingIndex,14]
                                                    aBuildUps = yRouting_Data[aRoutingIndex,15]
                                                    s_Process()          1    Coil                 HG_Exit                      FIRST aCuts  s_LOG_FILE(LEAVE,0)
 Coil                 HG_Exit                       If a_Destination = m_LG Then Route 1
                                                    Else if a_Destination = m_S3 or a_Destination = m_LC Or a_Destination = m_CT Or a_Destination = m_S4 Then 
                                                    	{
                                                    	IF a_Destination = m_S3 THEN INC v_Coils_to_A800_601
                                                    	Else IF a_Destination = m_LC or a_Destination = m_CT Or a_Destination = m_S4 THEN INC v_Coils_to_A800_700
                                                    		
                                                    	INT iMaxCount, iMaxDest, iCoolHours
                                                    	# Find which destination has the most coils waiting
                                                    	iMaxCount=0
                                                    	iMaxDest=0
                                                    	IF v_Coils_to_A800_601>iMaxCount THEN 
                                                    		{
                                                    		iMaxCount=v_Coils_to_A800_601
                                                    		iMaxDest=m_S3
                                                    		}
                                                    	IF v_Coils_to_A800_700>iMaxCount THEN 
                                                    		{
                                                    		iMaxCount=v_Coils_to_A800_700
                                                    		iMaxDest=m_CT
                                                    		}
                                                    	
                                                    	v_Destination_for_A800=iMaxDest
                                                    		
                                                    	IF CONTENTS(LOC(A800_Load),Carrier)=0 AND iMaxDest<>0 THEN
                                                    		{
                                                    		ORDER 1 Carrier TO A800_Load
                                                    		}
                                                    	Route 4
                                                    	}
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL 
                                                    	or a_Destination = m_PK or a_Destination = m_P2 Then Route 3
                                                    Else Display "Unapproved Destination at " $ Location()
                                                                         1    Coil                 LG_Slitter_Ent               FIRST 1      MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 Orange_Car_M                 Load 1       MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 PK_Floorspace                FIRST 1      MOVE WITH Crane_624 THEN FREE
                                                                         4    Coil                 A800_Load                    Load 1       MOVE WITH Crane_624 THEN FREE
 Coil                 LG_Slitter_Ent                                     1    Coil                 LG_Light_Gauge_Slitter       FIRST 1      
 Coil                 LG_Light_Gauge_Slitter        #Update Log file
                                                    s_LOG_FILE(ENTER,0)
                                                    
                                                    
                                                    #Wait process time and get next destination
                                                    aCuts = yRouting_Data[aRoutingIndex,14]
                                                    aBuildUps = yRouting_Data[aRoutingIndex,15]
                                                    s_Process()          1    Coil                 LG_Exit                      FIRST aCuts  s_LOG_FILE(LEAVE,0)
 Coil                 LG_Exit                       If a_Destination = m_HG Then Route 1
                                                    Else if a_Destination = m_S3 or a_Destination = m_LC Or a_Destination = m_CT Or a_Destination = m_S4 Then 
                                                    {
                                                    	IF a_Destination = m_S3 THEN INC v_Coils_to_A800_601
                                                    	Else IF a_Destination = m_LC or a_Destination = m_CT Or a_Destination = m_S4 THEN INC v_Coils_to_A800_700
                                                    		
                                                    	INT iMaxCount, iMaxDest, iCoolHours
                                                    	//Find which destination has the most coils waiting
                                                    	iMaxCount = 0
                                                    	iMaxDest = 0
                                                    	IF v_Coils_to_A800_601 > iMaxCount THEN 
                                                    	{
                                                    		iMaxCount = v_Coils_to_A800_601
                                                    		iMaxDest = m_S3
                                                    	}
                                                    	IF v_Coils_to_A800_700>iMaxCount THEN 
                                                    	{
                                                    		iMaxCount = v_Coils_to_A800_700
                                                    		iMaxDest = m_CT
                                                    	}
                                                    	
                                                    	v_Destination_for_A800=iMaxDest
                                                    		
                                                    	IF CONTENTS(LOC(A800_Load),Carrier)=0 AND iMaxDest<>0 THEN
                                                    	{
                                                    		ORDER 1 Carrier TO A800_Load
                                                    	}
                                                    	Route 4
                                                    }
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL or a_Destination = m_PK or a_Destination = m_P2 Then Route 3
                                                    Else Display "Unapproved Destination at " $ Location()
                                                                         1    Coil                 HG_Slitter_Ent               FIRST 1      MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 Orange_Car_M                 Load 1       MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 PK_Floorspace                FIRST 1      MOVE WITH Crane_624 THEN FREE
                                                                         4    Coil                 A800_Load                    Load 1       MOVE WITH Crane_624 THEN FREE
 Coil                 TL_Ent                                             1    Coil                 TL_Tension_Leveler           FIRST 1      
 Coil                 TL_Tension_Leveler            Start:
                                                    #Update Log file
                                                    s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait process time and get next destination
                                                    s_Process()
                                                    
                                                    If a_Destination= m_TL Then goto Start
                                                                         1    Coil                 TL_Exit                      FIRST 1      s_LOG_FILE(LEAVE,0)
 Coil                 TL_Exit                       If a_Destination = m_LG Then Route 1
                                                    Else If a_Destination = m_HG Then Route 2
                                                    Else if a_Destination = m_S3 or a_Destination = m_LC Or a_Destination = m_CT 
                                                    	Or a_Destination = m_S4 Then 
                                                    	{
                                                    	IF a_Destination = m_S3 THEN INC v_Coils_to_A800_601
                                                    	Else IF a_Destination = m_LC or a_Destination = m_CT Or 
                                                    		a_Destination = m_S4 THEN INC v_Coils_to_A800_700
                                                    		
                                                    	INT iMaxCount, iMaxDest, iCoolHours
                                                    	# Find which destination has the most coils waiting
                                                    	iMaxCount=0
                                                    	iMaxDest=0
                                                    	IF v_Coils_to_A800_601>iMaxCount THEN 
                                                    		{
                                                    		iMaxCount=v_Coils_to_A800_601
                                                    		iMaxDest=m_S3
                                                    		}
                                                    	IF v_Coils_to_A800_700>iMaxCount THEN 
                                                    		{
                                                    		iMaxCount=v_Coils_to_A800_700
                                                    		iMaxDest=m_CT
                                                    		}
                                                    	
                                                    	v_Destination_for_A800=iMaxDest
                                                    		
                                                    	IF CONTENTS(LOC(A800_Load),Carrier)=0 AND iMaxDest<>0 THEN
                                                    		{
                                                    		ORDER 1 Carrier TO A800_Load
                                                    		}
                                                    	Route 5
                                                    	}
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL 
                                                    	or a_Destination = m_PK or a_Destination = m_P2 Then Route 4
                                                    Else Display "Unapproved Destination at " $ Location()
                                                                         1    Coil                 LG_Slitter_Ent               FIRST 1      MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 HG_Slitter_Ent               FIRST 1      MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 Orange_Car_M                 Load 1       MOVE WITH Crane_624 THEN FREE
                                                                         4    Coil                 PK_Floorspace                FIRST 1      MOVE WITH Crane_624 THEN FREE
                                                                         5    Coil                 A800_Load                    Load 1       MOVE WITH Crane_624 THEN FREE
 Coil                 PK_Line_Ent                                        1    Coil                 PK_Line                      FIRST 1      
 Coil                 PK_Line                       #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait process time and get next destination
                                                    s_Process()          1    Coil                 PK_Line_Exit                 FIRST 1      
 Coil                 PK_Line_Exit                                       1    Coil                 North_Finished_Goods         FIRST 1      
 Coil                 North_Finished_Goods          //Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    Dec vCoilsInPlant
                                                    Dec vFinishing_WIP
                                                    Inc vExitNorth
                                                    
                                                    //ADDED (2/19/2020)
                                                    Inc v_N_Dock_Truck_Calc, 0.75 //1.5 coils per load
                                                    
                                                    If a_DUMMY_First_tracker > 1 Then debug
                                                                         1    Coil                 EXIT                         FIRST 1      
 Coil                 P2_South_Ent                                       1    Coil                 P2_South                     FIRST 1      
 Coil                 P2_South                      #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait process time and get next destination
                                                    s_Process()          1    Coil                 P2_South_Exit                FIRST 1      s_LOG_FILE(LEAVE,0)
 Coil                 P2_South_Exit                                      1    Coil                 South_Finished_Goods         FIRST 1      
 Coil                 South_Finished_Goods          Dec vCoilsInPlant
                                                    Dec vFinishing_WIP
                                                    Inc vExitSouth
                                                    If a_DUMMY_First_tracker > 1 Then debug
                                                                         1    Coil                 EXIT                         FIRST 1      
                                                                                                                                             
 Orange_Car           Orange_Car_M                  //Unload 3 //ORIGINAL (changed 8/25/2021)
                                                    Unload 3 Iff a_Destination <> m_AN //CHANGED 8/25/2021 (this should m_BE the AN parts)
 Orange_Car           Orange_Car_M                  If GroupQty(Coil) > 0 Then Route 2 //ADDED 8/25/2021
                                                    Else Route 1 //ADDED 8/25/2021
                                                                         1    Orange_Car           Orange_Car_M_UL              FIRST 1      
                                                                         2    Orange_Car           Orange_Car_E                 FIRST 1      move with ownedresource()
 Orange_Car           Orange_Car_M_UL               While Contents(Orange_Car_M, Coil) > 0 Do 
                                                    {
                                                    	Wait 1 min
                                                    }                    1    Orange_Car           Orange_Car_M                 FIRST 1      
 Orange_Car           Orange_Car_M                  If vOrCarM_Needed > 0 Then 
                                                    {
                                                    	LOAD 3 In 15 min
                                                    	Dec vOrCarM_Needed, groupqty(Coil)
                                                    }                    1    Orange_Car           Orange_Car_W                 FIRST 1      move with ownedresource() Then Free
 Orange_Car           Orange_Car_E                  Unload 3
 Orange_Car           Orange_Car_E                                       1    Orange_Car           Orange_Car_E_UL              FIRST 1      
 Orange_Car           Orange_Car_E_UL               Wait 0               1    Orange_Car           Orange_Car_E                 FIRST 1      
 Orange_Car           Orange_Car_E                                       1    Orange_Car           Orange_Car_M                 FIRST 1      move with ownedresource()
 Orange_Car           Orange_Car_W                  Unload 3
 Orange_Car           Orange_Car_W                                       1    Orange_Car           Orange_Car_W_UL              FIRST 1      
 Orange_Car           Orange_Car_W_UL                                    1    Orange_Car           Orange_Car_W                 FIRST 1      
 Orange_Car           Orange_Car_W                  Wait Until vOrCarW_Needed > 0 Or vOrCarM_Needed > 0
                                                    //Entity ordered from Initialization logic
                                                    Get Car_Orange //free orange car ONLY when going to Orange_Car_W
                                                    If vOrCarW_Needed > 0 Then 	
                                                    {
                                                    	LOAD 3 	//no time limit? Should m_BE getting coils heading to AN
                                                    	Dec vOrCarW_Needed, groupqty(Coil)
                                                    }                    1    Orange_Car           Orange_Car_M                 FIRST 1      move with ownedresource()
 Coil                 Orange_Car_M                  //Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    If aFrom = m_CT and a_Destination = m_LG Then Route 1
                                                    Else If aFrom = m_CT and a_Destination = m_HG Then Route 6
                                                    Else If a_Destination = m_LG Then Route 2
                                                    Else If a_Destination = m_HG Then Route 3
                                                    Else If a_Destination = m_TL Then Route 4
                                                    Else If a_Destination = m_PK Then Route 5
                                                    //Else If a_Destination = m_AN Then Route 7 //ADDED 8/25/2021
                                                    //Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 LG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 PK_Saddles                   FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 LG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 HG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         4    Coil                 TL_Ent                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         5    Coil                 PK_Floorspace                FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         6    Coil                 HG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 PK_Saddles                   FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
 Coil                 Orange_Car_E                  //debug              1    Coil                 Forced_Air_Cool_Tier2        FIRST 1      //ADDED 8/25/2021
                                                                                                                                             MOVE WITH Crane_616 THEN FREE 
                                                                                                                                             //Debug //NO LOAD REQUEST COMING IN!
                                                                              Coil                 FAC_Overflow                 FIRST        //ADDED 8/25/2021
                                                                                                                                             MOVE WITH Crane_616 THEN FREE
 Coil                 Orange_Car_W                  //Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    If a_Destination = m_LC Then Route 1
                                                    Else If a_Destination = m_CT Then Route 2
                                                    Else If a_Destination = m_S4 Then Route 3
                                                    //Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 LCL_Ent                      FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_Racks                    FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         2    Coil                 Coating_Line_Ent             FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_Racks                    FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         3    Coil                 SL4_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_Racks                    FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
 Coil                 LCL_Racks                     #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    If a_Destination = m_LC Then Route 1
                                                    Else If a_Destination = m_CT Then Route 2
                                                    Else If a_Destination = m_S3 Then 
                                                    	{
                                                    	IF CONTENTS(LOC(A700_Load),Carrier) = 0 THEN ORDER 1 Carrier TO A700_Load
                                                    	Route 3
                                                    	}
                                                    Else If a_Destination = m_LG or a_Destination = m_HG or a_Destination = m_TL Then 
                                                    	{
                                                    	Inc vOrCarW_Needed
                                                    	Route 4
                                                    	}
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL 
                                                    		Or a_Destination = m_P2 or a_Destination = m_PK Then Route 5
                                                    Else If a_Destination = m_S4 Then Route 6
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 LCL_Ent                      FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         2    Coil                 Coating_Line_Ent             FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         3    Coil                 A700_Load                    Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         4    Coil                 Orange_Car_W                 Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         5    Coil                 Yellow_Spot                  FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         6    Coil                 SL4_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
 Coil                 LCL_OF                        #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    If a_Destination = m_LC Then Route 1
                                                    Else If a_Destination = m_CT Then Route 2
                                                    Else If a_Destination = m_S3 Then 
                                                    	{
                                                    	IF CONTENTS(LOC(A700_Load),Carrier) = 0 THEN ORDER 1 Carrier TO A700_Load
                                                    	Route 3
                                                    	}
                                                    Else If a_Destination = m_LG or a_Destination = m_HG or a_Destination = m_TL Then 
                                                    	{
                                                    	Inc vOrCarW_Needed
                                                    	Route 4
                                                    	}
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL 
                                                    		Or a_Destination = m_P2 or a_Destination = m_PK Then Route 5
                                                    Else If a_Destination = m_S4 Then Route 6
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 LCL_Ent                      FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         2    Coil                 Coating_Line_Ent             FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         3    Coil                 A700_Load                    Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         4    Coil                 Orange_Car_W                 Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         5    Coil                 Yellow_Spot                  FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
                                                                         6    Coil                 SL4_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_634 THEN FREE
 Coil                 Supercooling                  # Update Log File
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    
                                                    If a_Destination = m_CT or a_Destination = m_LC Or a_Destination = m_S4 Then 
                                                    	{
                                                    	Inc vOrCarM_Needed
                                                    	Route 1
                                                    	}
                                                    Else If a_Destination = m_HG Then Route 2
                                                    Else If a_Destination = m_LG Then Route 3
                                                    Else If a_Destination = m_TL Then Route 4
                                                    Else If a_Destination = m_P2 or a_Destination = m_PK 
                                                    		or a_Destination = m_PL Or a_Destination = m_Exit Then Route 5
                                                    Else If a_Destination = m_S3 Then Route 6
                                                    Else 
                                                    {
                                                    	debug
                                                    	Display "Invalid Routing at " $ Location()
                                                    	Route 7
                                                    }                    1    Coil                 Orange_Car_M                 Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 HG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 LG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         4    Coil                 TL_Ent                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_Racks            FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                              Coil                 Slitter_Bay_OF               FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         5    Coil                 PK_Floorspace                FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         6    Coil                 SL3_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE WITH Crane_624 THEN FREE
                                                                         7    Coil                 EXIT                         FIRST 1      
 Coil                 Anneal_Saddles                #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_LG Then Route 1
                                                    Else If a_Destination = m_HG Then Route 2
                                                    Else If a_Destination = m_TL Then Route 3
                                                    Else if a_Destination = m_S3 or a_Destination = m_LC Or a_Destination = m_CT Or a_Destination = m_S4  Then 
                                                    	{
                                                    	IF a_Destination = m_S3 THEN INC v_Coils_to_A800_601
                                                    	Else IF a_Destination = m_LC or a_Destination = m_CT 
                                                    		Or a_Destination = m_S4 THEN INC v_Coils_to_A800_700
                                                    		
                                                    	INT iMaxCount, iMaxDest, iCoolHours
                                                    	# Find which destination has the most coils waiting
                                                    	iMaxCount=0
                                                    	iMaxDest=0
                                                    	IF v_Coils_to_A800_601>iMaxCount THEN 
                                                    		{
                                                    		iMaxCount=v_Coils_to_A800_601
                                                    		iMaxDest=m_S3
                                                    		}
                                                    	IF v_Coils_to_A800_700>iMaxCount THEN 
                                                    		{
                                                    		iMaxCount=v_Coils_to_A800_700
                                                    		iMaxDest=m_CT
                                                    		}
                                                    	
                                                    	v_Destination_for_A800=iMaxDest
                                                    		
                                                    	IF CONTENTS(LOC(A800_Load),Carrier)=0 AND iMaxDest<>0 THEN
                                                    		{
                                                    		ORDER 1 Carrier TO A800_Load
                                                    		}
                                                    	Route 7
                                                    	}
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL 
                                                    	or a_Destination = m_PK or a_Destination = m_P2 Then Route 6
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 LG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 HG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 TL_Ent                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         4    Coil                 SL3_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE WITH ForkTrucks THEN FREE
                                                                         5    Coil                 Orange_Car_M                 Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         6    Coil                 Breezeway_SL                 FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         7    Coil                 A800_Load                    Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
 Coil                 Anneal_Saddles_OF             #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    #Wait cool time, update variables, update graphics
                                                    s_Cooling()
                                                    
                                                    If a_Destination = m_LG Then Route 1
                                                    Else If a_Destination = m_HG Then Route 2
                                                    Else If a_Destination = m_TL Then Route 3
                                                    Else if a_Destination = m_S3 or a_Destination = m_LC Or a_Destination = m_CT Or a_Destination = m_S4  Then 
                                                    	{
                                                    	IF a_Destination = m_S3 THEN INC v_Coils_to_A800_601
                                                    	Else IF a_Destination = m_LC or a_Destination = m_CT 
                                                    		Or a_Destination = m_S4 THEN INC v_Coils_to_A800_700
                                                    		
                                                    	INT iMaxCount, iMaxDest, iCoolHours
                                                    	# Find which destination has the most coils waiting
                                                    	iMaxCount=0
                                                    	iMaxDest=0
                                                    	IF v_Coils_to_A800_601>iMaxCount THEN 
                                                    		{
                                                    		iMaxCount=v_Coils_to_A800_601
                                                    		iMaxDest=m_S3
                                                    		}
                                                    	IF v_Coils_to_A800_700>iMaxCount THEN 
                                                    		{
                                                    		iMaxCount=v_Coils_to_A800_700
                                                    		iMaxDest=m_CT
                                                    		}
                                                    	
                                                    	v_Destination_for_A800=iMaxDest
                                                    		
                                                    	IF CONTENTS(LOC(A800_Load),Carrier)=0 AND iMaxDest<>0 THEN
                                                    		{
                                                    		ORDER 1 Carrier TO A800_Load
                                                    		}
                                                    	Route 7
                                                    	}
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL 
                                                    	or a_Destination = m_PK or a_Destination = m_P2 Then Route 6
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 LG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 HG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 TL_Ent                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         4    Coil                 SL3_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE WITH ForkTrucks THEN FREE
                                                                         5    Coil                 Orange_Car_M                 Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         6    Coil                 Breezeway_SL                 FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         7    Coil                 A800_Load                    Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
 Coil                 PK_Saddles                    #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    If a_Destination = m_HG Then Route 1
                                                    Else If a_Destination = m_LG Then Route 2
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 HG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         2    Coil                 LG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
 Coil                 Breezeway_SL                  #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    If a_Destination = m_PL Or a_Destination = m_PK Or a_Destination = m_P2 Or a_Destination = m_Exit Then Route 1
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 North_Finished_Goods         FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH ForkTrucks THEN FREE
 Coil                 PK_Floorspace                 //Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    //ORIGINAL objectIDs that the cranes got stuck on
                                                    //If ObjectID() = 1274 Then debug
                                                    //If ObjectID() = 1501 Then debug
                                                    If a_Destination = m_PK Then Route 1
                                                    Else If a_Destination = m_Exit Then Route 2
                                                    Else If a_Destination = m_PL Then Route 3
                                                    Else If a_Destination = m_P2 Then Route 4
                                                    Else If a_Destination = m_HG Then Route 5
                                                    Else If a_Destination = m_LG Then Route 6
                                                    Else If a_Destination = m_TL Then Route 7
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 PK_Line_Ent                  FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE WITH Crane_622 THEN FREE
                                                                                                                                             
                                                                                                                                             
                                                                                                                                             //TURNED OFF CRANE MOVEMENT - 8/26/2021
                                                                              Coil                 PK_Line_2_Ent                FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             //MOVE WITH Crane_622 THEN FREE
                                                                                                                                             
                                                                                                                                             
                                                                                                                                             //TURNED OFF CRANE MOVEMENT - 8/26/2021
                                                                         2    Coil                 North_Finished_Goods         FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH ForkTrucks THEN FREE
                                                                         3    Coil                 North_Finished_Goods         FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH ForkTrucks THEN FREE
                                                                         4    Coil                 P2_South_Ent                 FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH ForkTrucks THEN FREE
                                                                         5    Coil                 HG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         6    Coil                 LG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         7    Coil                 TL_Ent                       FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
 Coil                 PK_Auto_Racks                 #Update Log file
                                                    s_LOG_FILE(ENTER,0)
                                                    
                                                    If a_Destination = m_PL Then Route 3
                                                    Else If a_Destination = m_PK Then Route 1
                                                    Else If a_Destination = m_HG Then Route 2
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 PK_Line_Ent                  FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_622 THEN FREE
                                                                         2    Coil                 HG_Slitter_Ent               FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH Crane_624 THEN FREE
                                                                         3    Coil                 North_Finished_Goods         FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             MOVE WITH ForkTrucks THEN FREE
 Coil                 SL4_Entry                                          1    Coil                 Slitter_4                    FIRST 1      
 Coil                 Slitter_4                     #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait process time and get next destination
                                                    aCuts = yRouting_Data[aRoutingIndex,14]
                                                    aBuildUps = yRouting_Data[aRoutingIndex,15]
                                                    s_Process()          1    Coil                 Slitter_4_Exit               FIRST aCuts  s_LOG_FILE(LEAVE,0)
 Coil                 Slitter_4_Exit                If a_Destination = m_LG or a_Destination = m_HG or a_Destination = m_TL Then 
                                                    	{
                                                    	if vOrCarW_Needed > 3 then Route 4
                                                    	Else
                                                    		{
                                                    		Inc vOrCarW_Needed
                                                    		Route 1
                                                    		}
                                                    	}
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL 
                                                    		Or a_Destination = m_P2 or a_Destination = m_PK Then Route 2
                                                    Else If a_Destination = m_S3 Then 
                                                    	{debug
                                                    	IF CONTENTS(LOC(A700_Load),Carrier) = 0 THEN ORDER 1 Carrier TO A700_Load
                                                    	Route 3
                                                    	}
                                                    Else If a_Destination = m_LC Then Route 5
                                                    Else Display "Unapproved Destination at " $ Location()
                                                    
                                                                         1    Coil                 Orange_Car_W                 Load 1       MOVE WITH Crane_634 THEN FREE
                                                                         2    Coil                 Yellow_Spot                  FIRST 1      MOVE WITH Crane_634 THEN FREE
                                                                         3    Coil                 A700_Load                    Load 1       MOVE WITH Crane_634 THEN FREE
                                                                         4    Coil                 LCL_Racks                    FIRST 1      MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        MOVE WITH Crane_634 THEN FREE
                                                                         5    Coil                 LCL_Ent                      FIRST 1      MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_Racks                    FIRST        MOVE WITH Crane_634 THEN FREE
                                                                              Coil                 LCL_OF                       FIRST        MOVE WITH Crane_634 THEN FREE
 Coil                 C4_Drop_Off_Outside           //wait time added for conestoga
                                                                         1    Coil                 C4_Racks                     FIRST 1      Move With RES_Crane_C4, 101 Then Free
                                                                                                                                             If a_Already_Added_to_C4_Racks = 0 then Inc v_C4_Racks_Capacity 
                                                                                                                                             Dec v_C4_Coils_Delivered //holds conestoga in place
                                                                              Coil                 C4_Racks_OF                  FIRST        Move With RES_Crane_C4, 101 Then Free
                                                                                                                                             Inc v_C4_Racks_Capacity 
                                                                                                                                             Dec v_C4_Coils_Delivered //holds conestoga in place
 Coil                 C4_Racks                      If a_Destination = m_C4 Or a_Destination = m_LM Or a_Destination = m_CM Then 
                                                    {
                                                    	Inc v_STATS_Needs_Milling_at_C4 
                                                    }
                                                    Else 
                                                    {
                                                    	Inc v_STATS_Leaving_C4 
                                                    }
                                                    
                                                    if aFrom = m_C4 Then s_Cooling()
                                                    
                                                    If a_Destination = m_C4 Or a_Destination = m_LM Or a_Destination = m_CM Then 
                                                    {
                                                    	//This should handle multiple passes
                                                    	Route 2
                                                    }
                                                    Else 
                                                    {
                                                    	Inc v_C4_Rack_Coils_Ready_for_Return
                                                    	Route 1
                                                    }                    1    Coil                 C4_Pick_Up_Outside           Load 1       //ADDED: Everything is going back to Fluids Storage now
                                                                                                                                             //If a_Destination=m_AN then vConestoga_Dest = 2
                                                                                                                                             //Else vConestoga_Dest = 1
                                                                                                                                             Move With RES_Crane_C4 Then free
                                                                                                                                             Dec v_C4_Rack_Coils_Ready_for_Return //What is this used for? 
                                                                                                                                             Dec v_C4_Racks_Capacity
                                                                                                                                             Dec v_STATS_Leaving_C4
                                                                         2    Coil                 C4_Mill_Drop_Off             FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With RES_Crane_C4 Then free
                                                                                                                                             //get Crane_614
                                                                                                                                             //wait v_CranePU sec
                                                                                                                                             //vC4_Coils_Ready=contents(C4_Drop_Off,Coil)
                                                                                                                                             //move with ownedresource() then free
                                                                                                                                             Dec v_STATS_Needs_Milling_at_C4
 Coil                 C4_Racks_OF                   If a_Destination = m_C4 Or a_Destination = m_LM Or a_Destination = m_CM Then 
                                                    {
                                                    	Inc v_STATS_Needs_Milling_at_C4 
                                                    }
                                                    Else 
                                                    {
                                                    	Inc v_STATS_Leaving_C4 
                                                    }
                                                    
                                                    if aFrom = m_C4 Then s_Cooling()
                                                    
                                                    If a_Destination = m_C4 Or a_Destination = m_LM Or a_Destination = m_CM Then 
                                                    {
                                                    	//This should handle multiple passes
                                                    	Route 2
                                                    }
                                                    Else 
                                                    {
                                                    	Inc v_C4_Rack_Coils_Ready_for_Return
                                                    	Route 1
                                                    }                    1    Coil                 C4_Pick_Up_Outside           Load 1       //ADDED: Everything is going back to Fluids Storage now
                                                                                                                                             //If a_Destination=m_AN then vConestoga_Dest = 2
                                                                                                                                             //Else vConestoga_Dest = 1
                                                                                                                                             Move With RES_Crane_C4 Then free
                                                                                                                                             Dec v_C4_Rack_Coils_Ready_for_Return //What is this used for? 
                                                                                                                                             Dec v_C4_Racks_Capacity
                                                                         2    Coil                 C4_Mill_Drop_Off             FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With RES_Crane_C4 Then free
                                                                                                                                             //get Crane_614
                                                                                                                                             //wait v_CranePU sec
                                                                                                                                             //vC4_Coils_Ready=contents(C4_Drop_Off,Coil)
                                                                                                                                             //move with ownedresource() then free
 Coil                 C4_Mill_Drop_Off                                   1    Coil                 C4_Mill_Input_Conv           FIRST 1      
 Coil                 C4_Mill_Input_Conv                                 1    Coil                 C4                           FIRST 1      
 Coil                 C4                            //Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    //Wait process time and get next destination
                                                    
                                                    s_Process()
                                                    aCoilStart = Clock(hr)
                                                    
                                                    Inc v_Total_Coils_C4_Produced 
                                                    Inc v_Total_lbs_C4_Produced, yRouting_Data[aRoutingIndex, 8] //DOUBLE CHECK THIS NUMBER!
                                                    
                                                    //Change coil color
                                                    //a_Temperature = m_Warm
                                                    //GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                         1    Coil                 C4_Mill_Output_Conv          FIRST 1      s_Log_File(LEAVE,0)
                                                                                                                                             
 Coil                 C4_Mill_Output_Conv                                1    Coil                 C4_Mill_Pick_Up              FIRST 1      
 Coil                 C4_Mill_Pick_Up                                    1    Coil                 C4_Racks                     FIRST 1      Move With RES_Crane_C4 Then Free
                                                                              Coil                 C4_Racks_OF                  FIRST        Move With RES_Crane_C4 Then Free
 Coil                 Conestoga_Fluids_Bay_Drop_Off a_Not_Going_to_C4 = 1
                                                    If v_HM_at_Fluids = 1 then
                                                    {
                                                    	If v_HM_Destination_Fluids_Storage = 0 And v_HM_Destination_HMCarW = 0 And v_HM_Destination_HMCarW_From_Fluids_Storage <> 99 Then 
                                                    	{
                                                    		//All HM Car contents need to have the same destination
                                                    		If v_HM_Destination_HMCarW_From_Fluids_Storage = 0 Then v_HM_Destination_HMCarW_From_Fluids_Storage = 3 //HMCar has 3 Capacity
                                                       		Dec v_HM_Destination_HMCarW_From_Fluids_Storage
                                                       		If v_HM_Destination_HMCarW_From_Fluids_Storage = 0 Then v_HM_Destination_HMCarW_From_Fluids_Storage = 99 //HMCar resets the variable
                                                    		Route 2
                                                    	}
                                                    	Else Route 1
                                                    }
                                                    Else Route 1         1    Coil                 Fluids_Storage               FIRST 1      get Fluids_Crane 
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             v_Conestoga_Coils = 0
                                                                                                                                             move with ownedresource() then free
                                                                              Coil                 Fluids_Storage_Overflow      FIRST        get Fluids_Crane 
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             v_Conestoga_Coils = 0
                                                                                                                                             move with ownedresource() then free
                                                                         2    Coil                 HMCar_Fluids_Bay_Pick_Up     Load 1       get Fluids_Crane 
                                                                                                                                             wait v_CranePU sec
                                                                                                                                             v_Conestoga_Coils = 0
                                                                                                                                             move with ownedresource() then free
 Conestoga_Truck      CM_Conestoga_DO               If GroupQty(Coil) > 0 Then Wait mConestoga_Load_Unload_Time * GroupQty(Coil) min //ADDED: Load time at C4
                                                    Unload 999           1    Conestoga_Truck      CM_Conestoga_PU              FIRST 1      
 Conestoga_Truck      CM_Conestoga_PU               //track CM contents
                                                    Free Conestoga
                                                    //vC4_North_Dock_Coils_Ready = pick up loaction at North Dock
                                                    //vC4_Rack_Coils_ready = at C4 Racks
                                                    Wait Until v_C4_North_Dock_Coils_Ready_for_Delivery > 1 Or v_C4_Rack_Coils_Ready_for_Return > 1
                                                    Get Conestoga 
                                                    Load 2 In 1 sec
                                                    If GroupQty(Coil) > 0 Then Wait mConestoga_Load_Unload_Time * GroupQty(Coil) min //ADDED: Load time at C4
                                                                         1    Conestoga_Truck      C4_Drop_Off_Queue            FIRST 1      Move On Conestoga_Path
 Conestoga_Truck      C4_Drop_Off_Queue             Wait Until v_C4_Conestoga_Parking_Cap = 0
                                                    Inc v_C4_Conestoga_Parking_Cap
                                                                         1    Conestoga_Truck      C4_Drop_Off_Outside          FIRST 1      Move On Conestoga_Path
 Conestoga_Truck      C4_Drop_Off_Outside           If GroupQty(Coil) > 0 Then 
                                                    {
                                                    	//ADDED 9/7/2021
                                                    	//Wait Until v_C4_Racks_Capacity < ((255 - 20) - GroupQty(Coil))
                                                    	Get RES_Crane_C4 
                                                    	Wait mConestoga_Load_Unload_Time * GroupQty(Coil) min //ADDED: Load time at C4
                                                    	v_C4_Coils_Delivered = GroupQty(Coil)
                                                    	unload 999 
                                                    	Free RES_Crane_C4 
                                                    	Wait Until v_C4_Coils_Delivered = 0
                                                    }                    1    Conestoga_Truck      C4_Pick_Up_Outside           FIRST 1      Move On Conestoga_Path
 Conestoga_Truck      C4_Pick_Up_Outside            Wait Until v_C4_North_Dock_Coils_Ready_for_Delivery > 1 Or v_C4_Rack_Coils_Ready_for_Return > 1 
                                                    
                                                    //wait here until a coils are ready at the racks or the north dock
                                                    While v_C4_North_Dock_Coils_Ready_for_Delivery = 0 And v_C4_Rack_Coils_Ready_for_Return = 0 Do
                                                    {
                                                    	Wait 1 min
                                                    }
                                                    	
                                                    If v_C4_Rack_Coils_Ready_for_Return > 0 Then
                                                    {	
                                                    	Load 2 In 1 sec
                                                    	Wait mConestoga_Load_Unload_Time * GroupQty(Coil) min
                                                    }                    1    Conestoga_Truck      CM_Conestoga_DO              FIRST 1      If v_C4_Conestoga_Parking_Cap > 0 then Dec v_C4_Conestoga_Parking_Cap 
                                                                                                                                             Move On Conestoga_Path
 Conestoga_Truck      Conestoga_Fluids_Bay_Drop_Off //DELETE???????????????????????????????????????????????????????
                                                    
                                                    
                                                    v_Conestoga_at_Fluids = 1
                                                    Unload 1
                                                    Wait Until v_Conestoga_Coils = 0 //holds conestoga in place while Fluids Crane unloads
                                                                         1    Conestoga_Truck      Conestoga_Fluids_Bay_Pick_Up FIRST 1      Move On Conestoga_Path
 Conestoga_Truck      Conestoga_Fluids_Bay_Pick_Up  //DELETE?????????????????????????????????????????????????????
                                                    
                                                    
                                                    Load 1
                                                    v_Conestoga_at_Fluids = 0
                                                    //Need load time?
                                                                         1    Conestoga_Truck      C4_Drop_Off_Outside          FIRST 1      Move On Conestoga_Path
 Coil                 CM_PU_DO_Storage              If a_Destination = m_C4 Then 
                                                    {
                                                    	Inc v_C4_North_Dock_Coils_Ready_for_Delivery
                                                    	Route 1
                                                    }
                                                    Else 
                                                    {
                                                    	If a_DUMMY_First_tracker = 0 Then
                                                    	{
                                                    		Dec vMill_WIP 
                                                    		Inc vFinishing_WIP 
                                                    		Inc a_DUMMY_First_tracker
                                                    	}
                                                    	Route 2
                                                    }                    1    Coil                 CM_Conestoga_PU              Load 1       //move with crane?
                                                                                                                                             Dec v_C4_North_Dock_Coils_Ready_for_Delivery
                                                                         2    Coil                 CM_Storage_RETURN            FIRST 1      
 Coil                 CM_Storage_RETURN             //Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    If a_Destination = m_LC Then Route 1
                                                    Else If a_Destination = m_CT Then Route 2 //none
                                                    Else If a_Destination = m_S3 Then //none
                                                    {
                                                    	IF CONTENTS(LOC(A700_Load),Carrier) = 0 THEN ORDER 1 Carrier TO A700_Load
                                                    	Route 3
                                                    }
                                                    Else If a_Destination = m_LG or a_Destination = m_HG or a_Destination = m_TL Or a_Destination = m_AN Then //1000ish
                                                    {
                                                    	Inc vOrCarW_Needed
                                                    	Route 4
                                                    }
                                                    Else If a_Destination = m_Exit Or a_Destination = m_PL Or a_Destination = m_P2 or a_Destination = m_PK Then Route 5 //10ish
                                                    Else If a_Destination = m_S4 Then Route 6 //30ish
                                                    Else Display "Invalid Routing at " $ Location()
                                                                         1    Coil                 LCL_Ent                      FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With Crane_634 Then FREE
                                                                              Coil                 LCL_OF                       FIRST        s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With Crane_634 Then FREE
                                                                         2    Coil                 Coating_Line_Ent             FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With Crane_634 Then FREE
                                                                         3    Coil                 A700_Load                    Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With Crane_634 Then FREE
                                                                         4    Coil                 Orange_Car_W                 Load 1       s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With Crane_634 Then FREE
                                                                         5    Coil                 Yellow_Spot                  FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With Crane_634 Then FREE
                                                                         6    Coil                 SL4_Entry                    FIRST 1      s_LOG_FILE(LEAVE,0)
                                                                                                                                             Move With Crane_634 Then FREE
 Coil                 CM_Conestoga_DO                                    1    Coil                 CM_PU_DO_Storage             FIRST 1      
 Coil                 PK_Line_2_Ent                 //ADDED (2/19/2020)
                                                                         1    Coil                 PK_Line_2                    FIRST 1      
 Coil                 PK_Line_2                     //ADDED (2/19/2020) OVERFLOW Location
                                                    
                                                    #Update Log file
                                                    //s_LOG_FILE(ENTER,0)
                                                    
                                                    #Wait process time and get next destination
                                                    s_Process()          1    Coil                 PK_Line_2_Exit               FIRST 1      
 Coil                 PK_Line_2_Exit                //ADDED (2/19/2020)
                                                                         1    Coil                 North_Finished_Goods         FIRST 1      
 ENT_WIP_Trigger_TEMP LOC_WIP_TEMP                  a_TEMP_WIP_Order = 999
                                                    
                                                    //a_Alloy = 3000
                                                    //a_Alloy = 5000
                                                    //need to add alloy's to each step
                                                    //Order 32 ENT_Ingot To LOC_Pusher_Furnace_1_Staging 
                                                    //Order 32 ENT_Ingot To LOC_Pusher_Furnace_2_Staging 
                                                    //Order 32 ENT_Ingot To LOC_Pusher_Furnace_3_Staging 
                                                    //Order 32 ENT_Ingot To LOC_Pusher_Furnace_4_Staging 
                                                    Order 32 ENT_Ingot To LOC_Pusher_Furnace_1 
                                                    //Order 32 ENT_Ingot To LOC_Pusher_Furnace_2
                                                    //Order 32 ENT_Ingot To LOC_Pusher_Furnace_3 
                                                    //Order 32 ENT_Ingot To LOC_Pusher_Furnace_4 
                                                    //Order 200 ENT_Ingot To LOC_Ingot_Storage
                                                                         1    ENT_WIP_Trigger_TEMP EXIT                         FIRST 1      
 Dummy                LOC_Remelt_Production_Control //NOTE: SC and PF BOTH need to be... 31? They can't be negative! Need to look into this!
                                                    //Need to add 50% loadback attribute
                                                    
                                                    Int lv_lb_Produced
                                                    Int lv_Coils_Produced
                                                    Int iStep
                                                    Real lv_Rand
                                                    Real lv_Month_1_DAILY_Demand
                                                    Real lv_Month_2_DAILY_Demand
                                                    Real lv_Month_3_DAILY_Demand
                                                    Real lv_Month_1_Remainder
                                                    Real lv_Month_2_Remainder
                                                    Real lv_Month_3_Remainder
                                                    Real lv_Current_Remainder //tracks when additional coils need to m_BE added to the daily demand
                                                    Int lv_Day_Counter = 1 //tracks demand for each day (y_Day_Countdown)
                                                    int lv_Day_Counter_Per_Month = 1 //tracks days in the month
                                                    Int iWIPRow
                                                    Int lv_Step_ADJUST
                                                    Int lv_PF_WIP
                                                    Int lv_PF = 1
                                                    Int lv_overage
                                                    
                                                    //NOTE: WIP Orders remain the same, ordering coils to the rest of the system from here!!!
                                                    //WIP Orders
                                                    iWIPRow = 1  //Row in the WIP Array
                                                    While iWIPRow <= 2000 Do
                                                    {
                                                    	If yWIP[iWIPRow, 12] <> Exclude Then //AVOID Excluded product
                                                    	{
                                                    		//Assign Attributes
                                                    		aRow = iWIPRow
                                                    		a_Alloy = yWIP[iWIPRow,11]
                                                    		a_Destination = yWIP[iWIPRow,10]
                                                    		aProduct = yWIP[iWIPRow,13]
                                                    		aRoutingIndex = yWIP[iWIPRow,14]
                                                    		//ADDED 9/16/2021
                                                    		a_Owner = yProduct_Data[aProduct, 2]
                                                    		a_Category = yProduct_Data[aProduct, 3]
                                                    		a_Weight_Lbs = yRouting_Data[(aRoutingIndex - 1), 8] //take the weight of the previous step!
                                                    		
                                                    		Order yWIP[iWIPRow,6] Coil To WIP  //Orders still need to be coils if triggered from here
                                                    	}
                                                    	Inc iWIPRow  //moves to the next row in the array
                                                    	If yWIP[iWIPRow,6] = 0 Then iWIPRow = 2001  //Checks to see if next row is blank
                                                    }
                                                    
                                                    //determine coils per day for each month 
                                                    lv_Month_1_DAILY_Demand = (vMonth1_Demand / vMonth1_Days) 
                                                    If lv_Month_1_DAILY_Demand > Trunc(lv_Month_1_DAILY_Demand) Then lv_Month_1_Remainder = (lv_Month_1_DAILY_Demand - Trunc(lv_Month_1_DAILY_Demand))
                                                    lv_Month_2_DAILY_Demand = (vMonth2_Demand / vMonth2_Days) 
                                                    If lv_Month_2_DAILY_Demand > Trunc(lv_Month_2_DAILY_Demand) Then lv_Month_2_Remainder = (lv_Month_2_DAILY_Demand - Trunc(lv_Month_2_DAILY_Demand))
                                                    lv_Month_3_DAILY_Demand = (vMonth3_Demand / vMonth3_Days) 
                                                    If lv_Month_3_DAILY_Demand > Trunc(lv_Month_3_DAILY_Demand) Then lv_Month_3_Remainder = (lv_Month_3_DAILY_Demand - Trunc(lv_Month_3_DAILY_Demand))
                                                    
                                                    //set remainder for first month
                                                    lv_Current_Remainder = lv_Month_1_Remainder 
                                                    
                                                    //New Orders Logic
                                                    While vMonth <= 3 Do
                                                    {
                                                    	aProduct = 0 //reset
                                                    	If vMonth = 1 Then
                                                    	{
                                                    		If y_Day_Countdown[lv_Day_Counter, 2] > 0 Then
                                                    		{
                                                    			If lv_Coils_Produced < lv_Month_1_DAILY_Demand Then //coils per day
                                                    			{
                                                    				aProduct = udMonth1Demand()
                                                    			}
                                                    			Else If lv_lb_Produced < m_Daily_Lb_Demand And Contents(LOC_Remelt_Arrival_Buffer) = 0 Then //pounds per day
                                                    			{		
                                                    				lv_overage = 1
                                                    				//Determine Owner
                                                    				lv_Rand = rand(1)
                                                    				If lv_Rand <= v_TAA_Percent Then a_Owner = TAA 
                                                    				Else a_Owner = Novelis 
                                                    				//Determine Type
                                                    				lv_Rand = rand(1)
                                                    				If lv_Rand <= v_CB_Percent Then a_Category = m_CB //Can Body
                                                    				Else a_Category = m_BE 
                                                    				
                                                    				If a_Owner = TAA Then //ADD
                                                    				{
                                                    					If a_Category = m_CB Then aProduct = udTAA_CB_Excess() 
                                                    					Else If a_Category = m_BE Then aProduct = udTAA_BE_Excess() 
                                                    					//TEMP! Ajust Product Number
                                                    					aProduct = y_TEMP_Adjusted_Prod_Num[aProduct]
                                                    				}
                                                    				Else If a_Owner = Novelis Then //ADD
                                                    				{
                                                    					If a_Category = m_CB Then aProduct = udNOVELIS_CB_Excess() 
                                                    					Else If a_Category = m_BE Then aProduct = udNOVELIS_BE_Excess() 
                                                    					//TEMP! Ajust Product Number
                                                    					aProduct = y_TEMP_Adjusted_Prod_Num[aProduct]
                                                    				}
                                                    			}
                                                    			Else
                                                    			{
                                                    				//do nothing! We've made enough coils for today
                                                    				wait 1 min 
                                                    			}
                                                    		}
                                                    		Else If y_Day_Countdown[lv_Day_Counter, 2] <= 0 Then
                                                    		{
                                                    			//reset for the next day
                                                    			lv_Coils_Produced = 0
                                                    			lv_lb_Produced = 0
                                                    			Inc lv_Day_Counter 
                                                    			Inc lv_Day_Counter_Per_Month 
                                                    			Inc lv_Current_Remainder, lv_Month_1_Remainder 
                                                    			If (lv_Current_Remainder - 1) >= 0 Then lv_Month_1_DAILY_Demand = ((vMonth1_Demand / vMonth1_Days) + 1)
                                                    			Else lv_Month_1_DAILY_Demand = (vMonth1_Demand / vMonth1_Days)
                                                    			If lv_Day_Counter_Per_Month > vMonth1_Days Then
                                                    			{
                                                    				Inc vMonth 
                                                    				lv_Day_Counter_Per_Month = 1
                                                    				//stats
                                                    				v_STATS_Monthly_Exits_North = vExitNorth 
                                                    				v_STATS_Monthly_Exits_South = vExitSouth 
                                                    				v_STATS_Monthly_Exits_Total = vExitTotalPlant 
                                                    				vExitNorth = 0
                                                    				vExitSouth = 0
                                                    				vExitTotalPlant = 0
                                                    			}
                                                    		}	
                                                    	}	
                                                    	Else If vMonth = 2 Then 
                                                    	{
                                                    		If y_Day_Countdown[lv_Day_Counter, 2] > 0 Then
                                                    		{
                                                    			If lv_Coils_Produced < lv_Month_2_DAILY_Demand Then //coils per day
                                                    			{
                                                    				aProduct = udMonth2Demand()
                                                    			}
                                                    			Else If lv_lb_Produced < m_Daily_Lb_Demand And Contents(LOC_Remelt_Arrival_Buffer) = 0 Then //pounds per day
                                                    			{		
                                                    				lv_overage = 1
                                                    				//Determine Owner
                                                    				lv_Rand = rand(1)
                                                    				If lv_Rand <= v_TAA_Percent Then a_Owner = TAA 
                                                    				Else a_Owner = Novelis 
                                                    				//Determine Type
                                                    				lv_Rand = rand(1)
                                                    				If lv_Rand <= v_CB_Percent Then a_Category = m_CB //Can Body
                                                    				Else a_Category = m_BE //
                                                    				
                                                    				If a_Owner = TAA Then //ADD
                                                    				{
                                                    					If a_Category = m_CB Then aProduct = udTAA_CB_Excess() 
                                                    					Else If a_Category = m_BE Then aProduct = udTAA_BE_Excess() 
                                                    					//TEMP! Ajust Product Number
                                                    					aProduct = y_TEMP_Adjusted_Prod_Num[aProduct]
                                                    				}
                                                    				Else If a_Owner = Novelis Then //ADD
                                                    				{
                                                    					If a_Category = m_CB Then aProduct = udNOVELIS_CB_Excess() 
                                                    					Else If a_Category = m_BE Then aProduct = udNOVELIS_BE_Excess() 
                                                    					//TEMP! Ajust Product Number
                                                    					aProduct = y_TEMP_Adjusted_Prod_Num[aProduct]
                                                    				}
                                                    			}
                                                    			Else
                                                    			{
                                                    				//do nothing! We've made enough coils for today
                                                    				wait 1 min 
                                                    			}
                                                    		}
                                                    		Else If y_Day_Countdown[lv_Day_Counter, 2] <= 0 Then
                                                    		{
                                                    			//reset for the next day
                                                    			lv_Coils_Produced = 0
                                                    			lv_lb_Produced = 0
                                                    			Inc lv_Day_Counter 
                                                    			Inc lv_Day_Counter_Per_Month 
                                                    			Inc lv_Current_Remainder, lv_Month_2_Remainder 
                                                    			If (lv_Current_Remainder - 1) >= 0 Then lv_Month_2_DAILY_Demand = ((vMonth2_Demand / vMonth2_Days) + 1)
                                                    			Else lv_Month_2_DAILY_Demand = (vMonth2_Demand / vMonth2_Days)
                                                    			If lv_Day_Counter_Per_Month > vMonth2_Days Then
                                                    			{
                                                    				Inc vMonth 
                                                    				lv_Day_Counter_Per_Month = 1
                                                    				//stats
                                                    				v_STATS_Monthly_Exits_North = vExitNorth 
                                                    				v_STATS_Monthly_Exits_South = vExitSouth 
                                                    				v_STATS_Monthly_Exits_Total = vExitTotalPlant 
                                                    				vExitNorth = 0
                                                    				vExitSouth = 0
                                                    				vExitTotalPlant = 0
                                                    			}
                                                    		}	
                                                    	}	
                                                    	Else If vMonth = 3 Then 
                                                    	{
                                                    		If y_Day_Countdown[lv_Day_Counter, 2] > 0 Then
                                                    		{
                                                    			If lv_Coils_Produced < lv_Month_3_DAILY_Demand Then //coils per day
                                                    			{
                                                    				aProduct = udMonth3Demand()
                                                    			}
                                                    			Else If lv_lb_Produced < m_Daily_Lb_Demand And Contents(LOC_Remelt_Arrival_Buffer) = 0 Then //pounds per day
                                                    			{		
                                                    				lv_overage = 1
                                                    				//Determine Owner
                                                    				lv_Rand = rand(1)
                                                    				If lv_Rand <= v_TAA_Percent Then a_Owner = TAA 
                                                    				Else a_Owner = Novelis 
                                                    				//Determine Type
                                                    				lv_Rand = rand(1)
                                                    				If lv_Rand <= v_CB_Percent Then a_Category = m_CB //Can Body
                                                    				Else a_Category = m_BE //
                                                    				
                                                    				If a_Owner = TAA Then //ADD
                                                    				{
                                                    					If a_Category = m_CB Then aProduct = udTAA_CB_Excess() 
                                                    					Else If a_Category = m_BE Then aProduct = udTAA_BE_Excess() 
                                                    					//TEMP! Ajust Product Number
                                                    					aProduct = y_TEMP_Adjusted_Prod_Num[aProduct]
                                                    				}
                                                    				Else If a_Owner = Novelis Then //ADD
                                                    				{
                                                    					If a_Category = m_CB Then aProduct = udNOVELIS_CB_Excess() 
                                                    					Else If a_Category = m_BE Then aProduct = udNOVELIS_BE_Excess() 
                                                    					//TEMP! Ajust Product Number
                                                    					aProduct = y_TEMP_Adjusted_Prod_Num[aProduct]
                                                    				}
                                                    			}
                                                    			Else
                                                    			{
                                                    				//do nothing! We've made enough coils for today
                                                    				wait 1 min 
                                                    			}
                                                    		}
                                                    		Else If y_Day_Countdown[lv_Day_Counter, 2] <= 0 Then
                                                    		{
                                                    			//reset for the next day
                                                    			lv_Coils_Produced = 0
                                                    			lv_lb_Produced = 0
                                                    			Inc lv_Day_Counter 
                                                    			Inc lv_Day_Counter_Per_Month 
                                                    			Inc lv_Current_Remainder, lv_Month_3_Remainder 
                                                    			If (lv_Current_Remainder - 1) >= 0 Then lv_Month_3_DAILY_Demand = ((vMonth3_Demand / vMonth3_Days) + 1)
                                                    			Else lv_Month_3_DAILY_Demand = (vMonth3_Demand / vMonth3_Days)
                                                    			If lv_Day_Counter_Per_Month > vMonth3_Days Then
                                                    			{
                                                    				Inc vMonth 
                                                    				lv_Day_Counter_Per_Month = 1
                                                    				//stats
                                                    				v_STATS_Monthly_Exits_North = vExitNorth 
                                                    				v_STATS_Monthly_Exits_South = vExitSouth 
                                                    				v_STATS_Monthly_Exits_Total = vExitTotalPlant 
                                                    				vExitNorth = 0
                                                    				vExitSouth = 0
                                                    				vExitTotalPlant = 0
                                                    			}
                                                    		}	
                                                    	}	
                                                    
                                                    	If aProduct > 0 then
                                                    	{
                                                    		iStep = yProduct_Data[aProduct,8]  //assigns start row for Routing Array	
                                                    		While iStep < 2000 Do
                                                    		{
                                                    			If yRouting_Data[iStep,3] = m_HM And yRouting_Data[iStep + 1,3] < 30 Then //CHANGED!!! Can SC and PF m_BE negative numbers? 
                                                    			{
                                                    				//look for a scalper in the previous records
                                                    				If yRouting_Data[istep - 4,3] = m_SC Or yRouting_Data[istep - 4,3] = m_ST Then lv_Step_ADJUST = 4
                                                    				Else If yRouting_Data[istep - 3,3] = m_SC Or yRouting_Data[istep - 3,3] = m_ST Then lv_Step_ADJUST = 3
                                                    				Else lv_Step_ADJUST = 2
                                                    				aRoutingIndex = iStep - lv_Step_ADJUST 
                                                    				Goto ORDERENTITY //Skip to creating part below
                                                    			}
                                                    			Else If yRouting_Data[iStep,2] <= yRouting_Data[iStep + 1,2] Then
                                                    			{
                                                    				Inc iStep  //Checks to make sure it is still the same part
                                                    			}
                                                    			Else 
                                                    			{
                                                    				Display "No HM Starting Point " $ ", Product =" $ aProduct $ ", Row = " $ iStep
                                                    				GoTo NEXTPART
                                                    			}
                                                    		}
                                                    			
                                                    		ORDERENTITY:
                                                    		
                                                    		//Assign Attributes
                                                    		a_Destination = m_HM //We won't use this in the ingot processing! Keep it for HM
                                                    		a_SC_PF_Destination = 31.1 //sc
                                                    		a_Alloy = yProduct_Data[aProduct,9]
                                                    		If a_Alloy = 6000 Then a_Alloy = 6000
                                                    		Else If a_Alloy = 7000 Or a_Alloy = 5000 Then a_Alloy = 5000
                                                    		Else a_Alloy = 3000
                                                    		a_Owner = yProduct_Data[aProduct, 2]
                                                    		a_Category = yProduct_Data[aProduct, 3]
                                                    		a_Weight_Lbs = yProduct_Data[aProduct, 4] //lbs
                                                    			
                                                    		//HM Time
                                                    		//Wait yRouting_Data[iStep,12] hr //NOTE: We send this to the HM to wait again? ERROR? DOUBLEDIPPING?
                                                    		//Wait 28 min
                                                    		If lv_PF_WIP < 32 Then
                                                    		{
                                                    			a_TEMP_WIP_Order = 999
                                                    			Inc lv_PF_WIP 
                                                    			If lv_PF = 1 then Order 1 ENT_Ingot To LOC_Pusher_Furnace_1
                                                    			Else If lv_PF = 2 Then Order 1 ENT_Ingot To LOC_Pusher_Furnace_2 
                                                    			Else If lv_PF = 3 Then Order 1 ENT_Ingot To LOC_Pusher_Furnace_3
                                                    			Else If lv_PF = 4 Then Order 1 ENT_Ingot To LOC_Pusher_Furnace_4 
                                                    			If lv_PF_WIP = 32 Then
                                                    			{
                                                    				Inc lv_PF 
                                                    				If lv_PF <> 5 Then lv_PF_WIP = 0
                                                    			}
                                                    			a_TEMP_WIP_Order = 0
                                                    		} 
                                                    		else 
                                                    		{
                                                    			Order 1 ENT_Ingot To LOC_Remelt_Arrival_Buffer 
                                                    		
                                                    			//overage vs daily
                                                    			If lv_overage = 1 Then
                                                    			{
                                                    				Inc v_overage_coils 
                                                    				Inc v_overage_lbs, yRouting_Data[(aRoutingIndex + lv_Step_ADJUST), 8]
                                                    			}
                                                    			Else 
                                                    			{
                                                    				Inc v_daily_coils 
                                                    				Inc v_daily_lbs, yRouting_Data[(aRoutingIndex + lv_Step_ADJUST), 8]
                                                    			}
                                                    			lv_overage = 0
                                                    				
                                                    			//daily stats for logic
                                                    			Inc lv_Coils_Produced 
                                                    			Inc lv_lb_Produced, yRouting_Data[(aRoutingIndex + lv_Step_ADJUST), 8] //use weight at HM not here
                                                    		}
                                                    					
                                                    		NEXTPART:
                                                    	}
                                                    }                    1    Dummy                EXIT                         FIRST 1      
 ENT_Ingot            LOC_Remelt_Arrival_Buffer     //should the 28 min wait time be here? Probably not.
                                                                         1    ENT_Ingot            LOC_Remelt                   FIRST 1      
 ENT_Ingot            LOC_Remelt                    //NOTE: Can ingots go directly to pusher furnaces? Or do all need to be scalped?
                                                    
                                                    //daily stats
                                                    Inc v_Total_Ingots_Produced 
                                                    Inc v_Total_Ingot_lbs_Produced, a_Weight_Lbs
                                                                         1    ENT_Ingot            LOC_Remelt_Transfer          FIRST 1      
 ENT_Ingot            LOC_Remelt_Transfer           //NOTE: Loadback ingots go directly outside from here
                                                    Real lv_Loadback_Chance
                                                    lv_Loadback_Chance = rand(1)
                                                    If lv_Loadback_Chance <= 0.6 Then a_NON_Loadback_Ingot = 1 //is this loadback or non-loadback? 
                                                    
                                                    If a_NON_Loadback_Ingot = 1 Then Route 2
                                                    Else If a_Owner = Novelis Then Route 3
                                                    Else Route 1         1    ENT_Ingot            LOC_Scalper_1_Staging        FIRST 1      Move With RES_Crane_142 Or RES_Ingot_Forktruck Then Free
                                                                              ENT_Ingot            LOC_Transfer_Car             FIRST        Move With RES_Crane_142 Or RES_Ingot_Forktruck Then Free
                                                                              ENT_Ingot            LOC_Ingot_Storage            FIRST        Move With RES_Crane_142 Or RES_Ingot_Forktruck Then Free
                                                                         2    ENT_Ingot            LOC_Transfer_Car             FIRST 1      Move With RES_Crane_142 Or RES_Ingot_Forktruck Then Free
                                                                              ENT_Ingot            LOC_Ingot_Storage            FIRST        Move With RES_Crane_142 Or RES_Ingot_Forktruck Then Free
                                                                         3    ENT_Ingot            LOC_Scalper_1_Staging        FIRST 1      Move With RES_Crane_142 Or RES_Ingot_Forktruck Then Free
                                                                              ENT_Ingot            LOC_Ingot_Storage            FIRST        Move With RES_Crane_142 Or RES_Ingot_Forktruck Then Free
 ENT_Ingot            LOC_Scalper_1_Staging                              1    ENT_Ingot            LOC_Scalper_1                FIRST 1      
 ENT_Ingot            LOC_Scalper_1                 //routing input file has ADJUSTED process times to represent 2 ingots running at the same time
                                                    //this location has an ADJUSTED capacity of 1 (instead of the 2 in reality)
                                                    
                                                    //CHANGED
                                                    s_SC_PF_Process
                                                    //Wait 19 min
                                                    //NOTE: Can ingots go directly from here to pusher furnaces? Or must Crane 142 load Pusher Furnaces?
                                                    //NOTE: Right now assuming Crane 142 is the only crane that can load pusher furnaces
                                                    
                                                    //adjust if there are multiple scalp steps
                                                    While yRouting_Data[aRoutingIndex,3] <> m_PH And yRouting_Data[aRoutingIndex,3] <> m_PF And yRouting_Data[aRoutingIndex,3] <> m_P4 Do
                                                    {
                                                    	Inc aRoutingIndex 
                                                    	If aRoutingIndex = 100 Then Display "ERROR: SC1 exit needs to = m_PF for Product ", aProduct 
                                                    	a_SC_PF_Destination = yRouting_Data[aRoutingIndex,3]
                                                    }                    1    ENT_Ingot            LOC_Transfer_Car             FIRST 1      Move With RES_Crane_142 Or RES_Ingot_Forktruck Then free
                                                                                                                                             Inc v_SC1_Exits
                                                                              ENT_Ingot            LOC_Ingot_Storage            FIRST        Move With RES_Crane_142 Or RES_Ingot_Forktruck Then Free
                                                                                                                                             Inc v_SC1_Exits
 ENT_Ingot            LOC_Transfer_Car              If a_NON_Loadback_Ingot = 1 Then Route 4
                                                    else If a_SC_PF_Destination = 31.1 Then //SC
                                                    {
                                                    	If a_Owner = Novelis Then Route 5 //MUST be scalper 1
                                                    	Else Route 1 //Can be Scalper 1 or 2
                                                    }
                                                    Else If a_SC_PF_Destination = 31.2 Then Route 2 //PF
                                                    Else If a_SC_PF_Destination = 31.3 Then Route 3 //P4
                                                                         1    ENT_Ingot            LOC_Scalper_1_Staging        FIRST 1      Move With RES_Crane_142 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Scalper_2_Staging        FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Ingot_Storage            FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                         2    ENT_Ingot            LOC_Pusher_Furnace_1_Staging FIRST 1      Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Pusher_Furnace_2_Staging FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Pusher_Furnace_3_Staging FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Ingot_Storage            FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                         3    ENT_Ingot            LOC_Pusher_Furnace_4_Staging FIRST 1      Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Ingot_Storage            FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                         4    ENT_Ingot            LOC_Yard_Door                FIRST 1      Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Ingot_Storage            FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                         5    ENT_Ingot            LOC_Scalper_1_Staging        FIRST 1      Move With RES_Crane_142 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Ingot_Storage            FIRST        Move With RES_Crane_142 Or RES_Ingot_Forktruck Then free
 ENT_Ingot            LOC_Scalper_2_Staging         If a_Owner = Novelis Then Display "ERROR: Novelis Ingot at Scalper 2! Object ID = ", ObjectID()
                                                                         1    ENT_Ingot            LOC_Scalper_2                FIRST 1      
 ENT_Ingot            LOC_Scalper_2                 //CHANGED
                                                    s_SC_PF_Process
                                                    //Wait 12 min //What should this time m_BE? 
                                                    
                                                    //adjust if there are multiple scalp steps
                                                    While yRouting_Data[aRoutingIndex,3] <> m_PH And yRouting_Data[aRoutingIndex,3] <> m_PF And yRouting_Data[aRoutingIndex,3] <> m_P4 Do
                                                    {
                                                    	Inc aRoutingIndex 
                                                    	If aRoutingIndex = 100 Then Display "ERROR: SC2 exit needs to = m_PF for Product ", aProduct 
                                                    	a_SC_PF_Destination = yRouting_Data[aRoutingIndex,3]
                                                    }
                                                    
                                                    If a_SC_PF_Destination = 31.2 Then Route 1 //PF
                                                    Else If a_SC_PF_Destination = 31.3 Then Route 2 //P4
                                                                         1    ENT_Ingot            LOC_Pusher_Furnace_1_Staging FIRST 1      Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                                                                                             Inc v_SC2_Exits
                                                                              ENT_Ingot            LOC_Pusher_Furnace_2_Staging FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                                                                                             Inc v_SC2_Exits
                                                                              ENT_Ingot            LOC_Pusher_Furnace_3_Staging FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                                                                                             Inc v_SC2_Exits
                                                                              ENT_Ingot            LOC_Ingot_Storage            FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                                                                                             Inc v_SC2_Exits
                                                                         2    ENT_Ingot            LOC_Pusher_Furnace_4_Staging FIRST 1      Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                                                                                             Inc v_SC2_Exits
                                                                              ENT_Ingot            LOC_Ingot_Storage            FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                                                                                             Inc v_SC2_Exits
 ENT_Ingot            LOC_Ingot_Storage             Inc v_Ingot_Central_Storage 
                                                    
                                                    If a_NON_Loadback_Ingot = 1 Then 
                                                    {
                                                    	Inc v_Ingot_Storage_to_Outside 
                                                    	Route 4
                                                    }
                                                    else If a_SC_PF_Destination = 31.1 Then //m_SC
                                                    {
                                                    	Inc v_Ingot_Storage_to_SC 
                                                    	If a_Owner = Novelis Then Route 5 //Novelis MUST got to scalper 1
                                                    	else Route 1 
                                                    }
                                                    Else If a_SC_PF_Destination = 31.2 Then //m_PF
                                                    {
                                                    	Inc v_Ingot_Storage_to_PF 
                                                    	Route 2 
                                                    }
                                                    Else If a_SC_PF_Destination = 31.3 Then //m_P4
                                                    {
                                                    	Inc v_Ingot_Storage_to_PF 
                                                    	Route 3
                                                    }                    1    ENT_Ingot            LOC_Scalper_1_Staging        FIRST 1      Dec v_Ingot_Central_Storage 
                                                                                                                                             Dec v_Ingot_Storage_to_SC 
                                                                                                                                             Move With RES_Crane_142 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Scalper_2_Staging        FIRST        Dec v_Ingot_Central_Storage 
                                                                                                                                             Dec v_Ingot_Storage_to_SC 
                                                                                                                                             Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Yard_Door                FIRST        Dec v_Ingot_Central_Storage 
                                                                                                                                             Dec v_Ingot_Storage_to_SC 
                                                                                                                                             Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                         2    ENT_Ingot            LOC_Pusher_Furnace_1_Staging FIRST 1      Dec v_Ingot_Central_Storage 
                                                                                                                                             Dec v_Ingot_Storage_to_PF 
                                                                                                                                             Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Pusher_Furnace_2_Staging FIRST        Dec v_Ingot_Central_Storage 
                                                                                                                                             Dec v_Ingot_Storage_to_PF 
                                                                                                                                             Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Pusher_Furnace_3_Staging FIRST        Dec v_Ingot_Central_Storage 
                                                                                                                                             Dec v_Ingot_Storage_to_PF 
                                                                                                                                             Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Yard_Door                FIRST        Dec v_Ingot_Central_Storage 
                                                                                                                                             Dec v_Ingot_Storage_to_PF 
                                                                                                                                             Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                         3    ENT_Ingot            LOC_Pusher_Furnace_4_Staging FIRST 1      Dec v_Ingot_Central_Storage 
                                                                                                                                             Dec v_Ingot_Storage_to_PF 
                                                                                                                                             Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Yard_Door                FIRST        Dec v_Ingot_Central_Storage 
                                                                                                                                             Dec v_Ingot_Storage_to_PF 
                                                                                                                                             Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                         4    ENT_Ingot            LOC_Yard_Door                FIRST 1      Dec v_Ingot_Central_Storage 
                                                                                                                                             Dec v_Ingot_Storage_to_Outside 
                                                                                                                                             Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                         5    ENT_Ingot            LOC_Scalper_1_Staging        FIRST 1      Dec v_Ingot_Central_Storage 
                                                                                                                                             Dec v_Ingot_Storage_to_SC 
                                                                                                                                             Move With RES_Crane_142 Or RES_Ingot_Forktruck Then free
 ENT_Ingot            LOC_Yard_Door                 a_NON_Loadback_Ingot = 0
                                                                         1    ENT_Ingot            LOC_Yard_Storage             FIRST 1      
 ENT_Ingot            LOC_Yard_Storage                                   1    ENT_Ingot            LOC_West_Dock_Entrance       FIRST 1      
 ENT_Ingot            LOC_West_Dock_Entrance        If a_SC_PF_Destination = 31.1 Then //m_SC
                                                    {
                                                    	Inc v_Ingot_Storage_to_SC 
                                                    	If a_Owner = Novelis Then Route 4 //Novelis MUST got to scalper 1
                                                    	else Route 1 
                                                    }
                                                    Else If a_SC_PF_Destination = 31.2 Then //m_PF
                                                    {
                                                    	Inc v_Ingot_Storage_to_PF 
                                                    	Route 2 
                                                    }
                                                    Else If a_SC_PF_Destination = 31.3 Then //m_P4
                                                    {
                                                    	Inc v_Ingot_Storage_to_PF 
                                                    	Route 3
                                                    }                    1    ENT_Ingot            LOC_Scalper_1_Staging        FIRST 1      Move With RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Scalper_2_Staging        FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                         2    ENT_Ingot            LOC_Pusher_Furnace_1_Staging FIRST 1      Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Pusher_Furnace_2_Staging FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                              ENT_Ingot            LOC_Pusher_Furnace_3_Staging FIRST        Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                         3    ENT_Ingot            LOC_Pusher_Furnace_4_Staging FIRST 1      Move With RES_Crane_144 Or RES_Ingot_Forktruck Then free
                                                                         4    ENT_Ingot            LOC_Scalper_1_Staging        FIRST 1      Move With RES_Ingot_Forktruck Then free
 ENT_Ingot            LOC_Pusher_Furnace_1_Staging  //Assign destinations to WIP orders
                                                    If a_TEMP_WIP_Order = 999 Then
                                                    {
                                                    	a_TEMP_WIP_Order = 0
                                                    	a_SC_PF_Destination = 31.2
                                                    }
                                                    
                                                    graphic 2
                                                    Accum 32
                                                    Wait Until v_Pusher_Furnace_1_Contents < 32
                                                    Inc v_Pusher_Furnace_1_Contents
                                                                         1    ENT_Ingot            LOC_Pusher_Furnace_1_ENTER   FIRST 1      //Move For 4.5 min
 ENT_Ingot            LOC_Pusher_Furnace_1_ENTER                         1    ENT_Ingot            LOC_Pusher_Furnace_1         FIRST 1      
 ENT_Ingot            LOC_Pusher_Furnace_1          //Wait .11 hr
                                                    //CHANGED - this may need to be adjusted per coil
                                                    //s_SC_PF_Process
                                                    
                                                    Accum 32 
                                                    //ADD alloy type
                                                    If a_TEMP_WIP_Order = 0 then
                                                    {
                                                    	//If a_Alloy = 3000 Then Wait 8.5 hr
                                                    	//Else If a_Alloy = 5000 then Wait 5.5 hr 
                                                    	//Else Wait 5.5 hr
                                                    }
                                                    //wait until the previous pusher furnace finishes, or this furnace has parts to unload
                                                    Wait Until v_Pusher_Furnace_Unloading = 1
                                                                         1    ENT_Ingot            LOC_Pusher_Furnace_1_EXIT    FIRST 1      //Move For 4.5 min
                                                                                                                                             inc v_Pusher_Furnace_DONE_Unloading  
                                                                                                                                             //NOTE: Should be based on batch size! 32 or 30
                                                                                                                                             If v_Pusher_Furnace_DONE_Unloading = 32 Then
                                                                                                                                             {
                                                                                                                                             	While v_Pusher_Furnace_2_Contents < 30 and v_Pusher_Furnace_3_Contents < 30 and v_Pusher_Furnace_4_Contents < 30 Do
                                                                                                                                             	{
                                                                                                                                             		Wait 1 min
                                                                                                                                             	}
                                                                                                                                             	If v_Pusher_Furnace_2_Contents >= 30 Then v_Pusher_Furnace_Unloading = 2
                                                                                                                                             	Else If v_Pusher_Furnace_3_Contents >= 30 Then v_Pusher_Furnace_Unloading = 3
                                                                                                                                             	Else If v_Pusher_Furnace_4_Contents >= 30 Then v_Pusher_Furnace_Unloading = 4
                                                                                                                                             	v_Pusher_Furnace_DONE_Unloading = 0
                                                                                                                                             }
 ENT_Ingot            LOC_Pusher_Furnace_1_EXIT     Dec v_Pusher_Furnace_1_Contents
                                                    Inc v_PF_Exits 
                                                    
                                                    //adjust to skip different names for PF, ST and IQ
                                                    While yRouting_Data[aRoutingIndex,3] <> m_HM Do
                                                    {
                                                    	Inc aRoutingIndex 
                                                    	If aRoutingIndex = 100 Then Display "ERROR: PF exit needs to = m_HM for Product ", aProduct 
                                                    }                    1    Coil                 HM_Ent                       FIRST 1      //Move For 4.5 min
 ENT_Ingot            LOC_Pusher_Furnace_2_Staging  //Assign destinations to WIP orders
                                                    If a_TEMP_WIP_Order = 999 Then
                                                    {
                                                    	a_TEMP_WIP_Order = 0
                                                    	a_SC_PF_Destination = 31.2
                                                    }
                                                    
                                                    graphic 2
                                                    Accum 32
                                                    Wait Until v_Pusher_Furnace_2_Contents < 32
                                                    Inc v_Pusher_Furnace_2_Contents
                                                                         1    ENT_Ingot            LOC_Pusher_Furnace_2_ENTER   FIRST 1      //Move For 4.5 min
 ENT_Ingot            LOC_Pusher_Furnace_2_ENTER                         1    ENT_Ingot            LOC_Pusher_Furnace_2         FIRST 1      
 ENT_Ingot            LOC_Pusher_Furnace_2          //Wait .11 hr
                                                    //CHANGED - this may need to be adjusted per coil
                                                    //s_SC_PF_Process
                                                    
                                                    Accum 32 
                                                    //ADD alloy type
                                                    If a_TEMP_WIP_Order = 0 then
                                                    {
                                                    	//If a_Alloy = 3000 Then Wait 8.5 hr
                                                    	//Else If a_Alloy = 5000 then Wait 5.5 hr 
                                                    	//Else Wait 5.5 hr
                                                    }
                                                    //wait until the previous pusher furnace finishes, or this furnace has parts to unload
                                                    Wait Until v_Pusher_Furnace_Unloading = 2
                                                                         1    ENT_Ingot            LOC_Pusher_Furnace_2_EXIT    FIRST 1      //Move For 4.5 min
                                                                                                                                             inc v_Pusher_Furnace_DONE_Unloading  
                                                                                                                                             //NOTE: Should be based on batch size! 32 or 30
                                                                                                                                             If v_Pusher_Furnace_DONE_Unloading = 32 Then
                                                                                                                                             {
                                                                                                                                             	While v_Pusher_Furnace_3_Contents < 30 and v_Pusher_Furnace_4_Contents < 30 and v_Pusher_Furnace_1_Contents < 30 Do
                                                                                                                                             	{
                                                                                                                                             		Wait 1 min
                                                                                                                                             	}
                                                                                                                                             	If v_Pusher_Furnace_3_Contents >= 30 Then v_Pusher_Furnace_Unloading = 3
                                                                                                                                             	Else If v_Pusher_Furnace_4_Contents >= 30 Then v_Pusher_Furnace_Unloading = 4
                                                                                                                                             	Else If v_Pusher_Furnace_1_Contents >= 30 Then v_Pusher_Furnace_Unloading = 1
                                                                                                                                             	v_Pusher_Furnace_DONE_Unloading = 0
                                                                                                                                             }
 ENT_Ingot            LOC_Pusher_Furnace_2_EXIT     Dec v_Pusher_Furnace_2_Contents
                                                    Inc v_PF_Exits 
                                                    
                                                    While yRouting_Data[aRoutingIndex,3] <> m_HM Do
                                                    {
                                                    	Inc aRoutingIndex 
                                                    	If aRoutingIndex = 100 Then Display "ERROR: PF exit needs to = m_HM for Product ", aProduct 
                                                    }                    1    Coil                 HM_Ent                       FIRST 1      //Move For 4.5 min
 ENT_Ingot            LOC_Pusher_Furnace_3_Staging  //Assign destinations to WIP orders
                                                    If a_TEMP_WIP_Order = 999 Then
                                                    {
                                                    	a_TEMP_WIP_Order = 0
                                                    	a_SC_PF_Destination = 31.2
                                                    }
                                                    
                                                    graphic 2
                                                    Accum 32
                                                    Wait Until v_Pusher_Furnace_3_Contents < 32
                                                    Inc v_Pusher_Furnace_3_Contents
                                                                         1    ENT_Ingot            LOC_Pusher_Furnace_3_ENTER   FIRST 1      //Move For 4.5 min
 ENT_Ingot            LOC_Pusher_Furnace_3_ENTER                         1    ENT_Ingot            LOC_Pusher_Furnace_3         FIRST 1      
 ENT_Ingot            LOC_Pusher_Furnace_3          //Wait .11 hr
                                                    //CHANGED - this may need to be adjusted per coil
                                                    //s_SC_PF_Process
                                                    
                                                    Accum 32 
                                                    //ADD alloy type
                                                    If a_TEMP_WIP_Order = 0 then
                                                    {
                                                    	//If a_Alloy = 3000 Then Wait 8.5 hr
                                                    	//Else If a_Alloy = 5000 then Wait 5.5 hr 
                                                    	//Else Wait 5.5 hr
                                                    }
                                                    //wait until the previous pusher furnace finishes, or this furnace has parts to unload
                                                    Wait Until v_Pusher_Furnace_Unloading = 3
                                                                         1    ENT_Ingot            LOC_Pusher_Furnace_3_EXIT    FIRST 1      //Move For 4.5 min
                                                                                                                                             inc v_Pusher_Furnace_DONE_Unloading  
                                                                                                                                             //NOTE: Should be based on batch size! 32 or 30
                                                                                                                                             If v_Pusher_Furnace_DONE_Unloading = 32 Then
                                                                                                                                             {
                                                                                                                                             	While v_Pusher_Furnace_4_Contents < 30 and v_Pusher_Furnace_1_Contents < 30 and v_Pusher_Furnace_2_Contents < 30 Do
                                                                                                                                             	{
                                                                                                                                             		Wait 1 min
                                                                                                                                             	}
                                                                                                                                             	If v_Pusher_Furnace_4_Contents >= 30 Then v_Pusher_Furnace_Unloading = 4
                                                                                                                                             	Else If v_Pusher_Furnace_1_Contents >= 30 Then v_Pusher_Furnace_Unloading = 1
                                                                                                                                             	Else If v_Pusher_Furnace_2_Contents >= 30 Then v_Pusher_Furnace_Unloading = 2
                                                                                                                                             	v_Pusher_Furnace_DONE_Unloading = 0
                                                                                                                                             }
 ENT_Ingot            LOC_Pusher_Furnace_3_EXIT     Dec v_Pusher_Furnace_3_Contents
                                                    Inc v_PF_Exits 
                                                    
                                                    While yRouting_Data[aRoutingIndex,3] <> m_HM Do
                                                    {
                                                    	Inc aRoutingIndex 
                                                    	If aRoutingIndex = 100 Then Display "ERROR: PF exit needs to = m_HM for Product ", aProduct 
                                                    }                    1    Coil                 HM_Ent                       FIRST 1      //Move For 4.5 min
 ENT_Ingot            LOC_Pusher_Furnace_4_Staging  //Assign destinations to WIP orders
                                                    If a_TEMP_WIP_Order = 999 Then
                                                    {
                                                    	a_TEMP_WIP_Order = 0
                                                    	a_SC_PF_Destination = 31.3
                                                    }
                                                    
                                                    graphic 2
                                                    Accum 32
                                                    Wait Until v_Pusher_Furnace_4_Contents < 32
                                                    Inc v_Pusher_Furnace_4_Contents
                                                                         1    ENT_Ingot            LOC_Pusher_Furnace_4_ENTER   FIRST 1      //Move For 4.5 min
 ENT_Ingot            LOC_Pusher_Furnace_4_ENTER                         1    ENT_Ingot            LOC_Pusher_Furnace_4         FIRST 1      
 ENT_Ingot            LOC_Pusher_Furnace_4          //Wait .11 hr
                                                    //CHANGED - this may need to be adjusted per coil
                                                    //s_SC_PF_Process
                                                    
                                                    Accum 32 
                                                    //ADD alloy type
                                                    If a_TEMP_WIP_Order = 0 then
                                                    {
                                                    	//If a_Alloy = 3000 Then Wait 8.5 hr
                                                    	//Else If a_Alloy = 5000 then Wait 5.5 hr 
                                                    	//Else Wait 5.5 hr
                                                    }
                                                    //wait until the previous pusher furnace finishes, or this furnace has parts to unload
                                                    Wait Until v_Pusher_Furnace_Unloading = 4
                                                                         1    ENT_Ingot            LOC_Pusher_Furnace_4_EXIT    FIRST 1      //Move For 4.5 min
                                                                                                                                             inc v_Pusher_Furnace_DONE_Unloading  
                                                                                                                                             //NOTE: Should be based on batch size! 32 or 30
                                                                                                                                             If v_Pusher_Furnace_DONE_Unloading = 32 Then
                                                                                                                                             {
                                                                                                                                             	While v_Pusher_Furnace_1_Contents < 30 and v_Pusher_Furnace_2_Contents < 30 and v_Pusher_Furnace_3_Contents < 30 Do
                                                                                                                                             	{
                                                                                                                                             		Wait 1 min
                                                                                                                                             	}
                                                                                                                                             	If v_Pusher_Furnace_1_Contents >= 30 Then v_Pusher_Furnace_Unloading = 1
                                                                                                                                             	Else If v_Pusher_Furnace_2_Contents >= 30 Then v_Pusher_Furnace_Unloading = 2
                                                                                                                                             	Else If v_Pusher_Furnace_3_Contents >= 30 Then v_Pusher_Furnace_Unloading = 3
                                                                                                                                             	v_Pusher_Furnace_DONE_Unloading = 0
                                                                                                                                             }
 ENT_Ingot            LOC_Pusher_Furnace_4_EXIT     Dec v_Pusher_Furnace_4_Contents
                                                    Inc v_PF_Exits 
                                                    
                                                    While yRouting_Data[aRoutingIndex,3] <> m_HM Do
                                                    {
                                                    	Inc aRoutingIndex 
                                                    	If aRoutingIndex = 100 Then Display "ERROR: PF exit needs to = m_HM for Product ", aProduct 
                                                    }                    1    Coil                 HM_Ent                       FIRST 1      //Move For 4.5 min
 ENT_Scrap_Tub        LOC_Scrap_Arrival             If a_Tub_Blue = 1 Then Graphic 1
                                                    Else Graphic 2
                                                    Inc v_STATS_Total_Tubs_into_Scrap_Bay 
                                                    Inc v_STATS_Total_lbs_into_Scrap_Bay, a_Tub_Weight_lbs
                                                                         1    ENT_Scrap_Tub        LOC_Scrap_Conv_IN            FIRST 1      
 ENT_Scrap_Tub        LOC_Scrap_Conv_IN                                  1    ENT_Scrap_Tub        LOC_Scrap_Conv_IN_Pick       FIRST 1      
 ENT_Scrap_Tub        LOC_Scrap_Conv_IN_Pick                             1    ENT_Scrap_Tub        LOC_Scrap_Melt_1             FIRST 1      a_Scrap_Bay_Cycle_Start = clock()
                                                                                                                                             If a_Tub_Blue = 1 Then 
                                                                                                                                             {
                                                                                                                                             	Move With RES_Scrap_Forktruck
                                                                                                                                             }
                                                                                                                                             Else Move With RES_Crane_112_114 Or RES_Scrap_Forktruck
                                                                              ENT_Scrap_Tub        LOC_Scrap_Melt_2             FIRST        a_Scrap_Bay_Cycle_Start = clock()
                                                                                                                                             If a_Tub_Blue = 1 Then 
                                                                                                                                             {
                                                                                                                                             	Move With RES_Scrap_Forktruck
                                                                                                                                             }
                                                                                                                                             Else Move With RES_Crane_112_114 Or RES_Scrap_Forktruck
                                                                              ENT_Scrap_Tub        LOC_Scrap_Melt_3             FIRST        a_Scrap_Bay_Cycle_Start = clock()
                                                                                                                                             Move With RES_Scrap_Forktruck
                                                                              ENT_Scrap_Tub        LOC_Scrap_Storage            FIRST        If a_Tub_Blue = 1 Then 
                                                                                                                                             {
                                                                                                                                             	Move With RES_Scrap_Forktruck Then Free
                                                                                                                                             }
                                                                                                                                             Else Move With RES_Crane_112_114 Or RES_Scrap_Forktruck Then Free
 ENT_Scrap_Tub        LOC_Scrap_Storage                                  1    ENT_Scrap_Tub        LOC_Scrap_Melt_1             FIRST 1      a_Scrap_Bay_Cycle_Start = clock()
                                                                                                                                             If a_Tub_Blue = 1 Then 
                                                                                                                                             {
                                                                                                                                             	Move With RES_Scrap_Forktruck
                                                                                                                                             }
                                                                                                                                             Else Move With RES_Crane_112_114 Or RES_Scrap_Forktruck
                                                                              ENT_Scrap_Tub        LOC_Scrap_Melt_2             FIRST        a_Scrap_Bay_Cycle_Start = clock()
                                                                                                                                             If a_Tub_Blue = 1 Then 
                                                                                                                                             {
                                                                                                                                             	Move With RES_Scrap_Forktruck
                                                                                                                                             }
                                                                                                                                             Else Move With RES_Crane_112_114 Or RES_Scrap_Forktruck
                                                                              ENT_Scrap_Tub        LOC_Scrap_Melt_3             FIRST        a_Scrap_Bay_Cycle_Start = clock()
                                                                                                                                             Move With RES_Scrap_Forktruck
 ENT_Scrap_Tub        LOC_Scrap_Melt_1              Wait (12.63 - 1) min 
                                                    Inc v_STATS_Total_lbs_Processed_Through_Scrap_Bay, a_Tub_Weight_lbs
                                                                         1    ENT_Scrap_Tub        LOC_Empty_Tub_Exit           FIRST 1      If a_Tub_Blue = 1 Then 
                                                                                                                                             {
                                                                                                                                             	Move With RES_Scrap_Forktruck Then Free
                                                                                                                                             }
                                                                                                                                             Else Move With RES_Crane_112_114 Or RES_Scrap_Forktruck Then Free
 ENT_Scrap_Tub        LOC_Scrap_Melt_2              Wait (12.63 - 1) min 
                                                    Inc v_STATS_Total_lbs_Processed_Through_Scrap_Bay, a_Tub_Weight_lbs
                                                                         1    ENT_Scrap_Tub        LOC_Empty_Tub_Exit           FIRST 1      If a_Tub_Blue = 1 Then 
                                                                                                                                             {
                                                                                                                                             	Move With RES_Scrap_Forktruck Then Free
                                                                                                                                             }
                                                                                                                                             Else Move With RES_Crane_112_114 Or RES_Scrap_Forktruck Then Free
 ENT_Scrap_Tub        LOC_Scrap_Melt_3              Wait (12.63 - 1) min 
                                                    Inc v_STATS_Total_lbs_Processed_Through_Scrap_Bay, a_Tub_Weight_lbs
                                                                         1    ENT_Scrap_Tub        LOC_Empty_Tub_Exit           FIRST 1      Move With RES_Scrap_Forktruck Then Free
 ENT_Scrap_Tub        LOC_Empty_Tub_Exit            v_Scrap_Bay_Cycle = clock() - a_Scrap_Bay_Cycle_Start
                                                    Inc v_STATS_Total_Tubs_Processed_Through_Scrap_Bay
                                                                         1    ENT_Scrap_Tub        EXIT                         FIRST 1      


********************************************************************************
*                                   Arrivals                                   *
********************************************************************************

  Entity               Location                      Qty Each   First Time Occurrences Frequency  Logic
  -------------------- ----------------------------- ---------- ---------- ----------- ---------- ------------
  Dummy                Production_Control            1          0          1           1          
  Rate_Counter         Rate_Count                    1          0          INF         1 Day      
  Dummy                LOC_Remelt_Production_Control 1          0          1           1          
  ENT_WIP_Trigger_TEMP LOC_WIP_TEMP                  1          0          1           1          


********************************************************************************
*                              Shift Assignments                               *
********************************************************************************

  Locations... Resources... Calendar File... Priorities... Disable Logic...
  ------------ ------------ ---------------- ------------- ------- ------------------
               Conestoga    All.pmcal        99,99,99,99   No      



********************************************************************************
*                                  Attributes                                  *
********************************************************************************

  ID                             Type         Classification
  ------------------------------ ------------ --------------
  aProduct                       Integer      Entity        
  aRoutingIndex                  Integer      Entity        
  aNACarDest                     Integer      Entity        
  aFrom                          Integer      Entity        
#
#ADDED!
  a_SC_PF_From                   Integer      Entity        
  aAnneal_RoutingIndex           Integer      Location      
  a_Destination                  Integer      Entity        
#
#ADDED!
  a_SC_PF_Destination            Real         Entity        
  a_Alloy                        Integer      Entity        
  a_LM_Prepped                   Integer      Entity        
  a_Temperature                  Integer      Entity        
  a_Anneal                       Integer      Entity        
  aCoilCar                       Integer      Entity        
  aLM_Inspect                    Integer      Entity        
  aRow                           Integer      Entity        
  aCoilStart                     Real         Entity        
  aCuts                          Integer      Entity        
  aBuildUps                      Integer      Entity        
  a_Not_Going_to_C4              Integer      Entity        
#
#//ADDED 9/1/2021
  a_TEMP_WIP_Order               Integer      Entity        
#
#//ADDED 9/3/2021
  a_Owner                        Integer      Entity        
#
#//ADDED 9/3/2021
  a_Category                     Integer      Entity        
  a_Already_Added_to_C4_Racks    Integer      Entity        
  a_Already_Added_to_C4_Queue_Lb Integer      Entity        
  a_NON_Loadback_Ingot           Integer      Entity        
  a_Weight_Lbs                   Real         Entity        
  a_Tub_Weight_lbs               Real         Entity        
  a_Tub_Blue                     Integer      Entity        
  a_DUMMY_First_tracker          Integer      Entity        
  a_DUMMY_Second_Tracker         Integer      Entity        
  a_Scrap_Bay_Cycle_Start        Real         Entity        


********************************************************************************
*                              Variables (global)                              *
********************************************************************************

  ID                             Type         Initial value      Stats      
  ------------------------------ ------------ ------------------ -----------
  vCFCool_Cap                    Integer      125                Time Series
  vCM_Cool_Cap                   Integer      507                Time Series
  vLM_Cool_Cap                   Integer      89                 Time Series
  vASRS_Entry_Cap                Integer      52                 Time Series
  vASRS_Cool_Cap                 Integer      154                Time Series
  vCM_Exit_Saddle_Cap            Integer      8                  Time Series
  vLM_Saddle_Exit_Cap            Integer      9                  Time Series
  vCM_Exit_Saddle_WIP            Integer      0                  Time Series
  vLM_Saddle_Exit_WIP            Integer      0                  Time Series
  vPlant_Capacity                Integer      1414               Time Series
  vMonth                         Integer      1                  None       
  vNACarW_Needed                 Integer      0                  None       
  vNACarM_Needed                 Integer      0                  None       
  vOrCarM_Needed                 Integer      0                  None       
  vOrCarW_Needed                 Integer      0                  None       
  vSACarE_Needed                 Integer      0                  None       
  vSACarW_Needed                 Integer      0                  None       
  vNACarE_Qty                    Integer      0                  None       
  vAnneal_Wait_Time              Real         0                  Time Series
  vAnneal_Batch                  Integer      0                  Time Series
  vAnneal1_Routing               Integer      0                  None       
  vAnneal2_Routing               Integer      0                  None       
  v_CMEnt                        Integer      0                  None       
  v_OnRoute_to_800               Integer      0                  Time Series
  v_OnRoute_to_700               Integer      0                  Time Series
  v_OnRoute_to_601               Integer      0                  Time Series
#
#//ADDED
  v_ASRS_DEST_S3                 Integer      0                  Time Series
  v_ASRS_DEST_LM                 Integer      0                  Time Series
  v_ASRS_DEST_CMPLUS             Integer      0                  Time Series
  v_Destination_for_A602         Integer      0                  Time Series
  v_Destination_for_A200         Integer      0                  None       
  v_Destination_for_A700         Integer      0                  None       
  v_Destination_for_A800         Integer      0                  None       
  v_Destination_for_A210         Integer      0                  None       
  v_Destination_for_NACar        Integer      0                  None       
  v_Inspect_Mins                 Real         15                 None       
  v_LM_Prep_Mins                 Real         15                 None       
  vCount_CMExit_Finishing        Integer      0                  None       
  vCount_CMExit_NACARM           Integer      0                  None       
  vCount_CMExit_Anneal           Integer      0                  None       
  vCMExitPUDest                  Integer      0                  None       
  v_Cooled_Coils_to_A602_210     Integer      0                  Time Series
  v_Cooled_Coils_to_A602_700     Integer      0                  Time Series
  v_Cooled_Coils_to_A602_800     Integer      0                  Time Series
  v_Coils_to_A800_700            Integer      0                  None       
  v_Coils_to_A800_601            Integer      0                  None       
  v_CoilsLoadedAtA602            Integer      0                  None       
  v_CountNACarQ                  Integer      0                  None       
  vHMCarContents                 Integer      0                  None       
  vHMCarWContents                Integer      0                  None       
#
#CHANGED!
  vHMTrayCoils                   Integer      0                  Time Series
  v_NACarReady                   Integer      1                  None       
  vNATrayCoils                   Integer      1                  None       
  v_NACarQReady                  Integer      1                  None       
  v_HM_Insp_Busy                 Integer      0                  None       
  v_CMCool_Count                 Integer      0                  Time Series
  v_CMCool_Bot_Count             Integer      0                  Time Series
  v_CMCool_Top_Count             Integer      0                  Time Series
  v_CFCool_Count                 Integer      0                  Time Series
  vCFCoilsReady                  Integer      0                  Time Series
  vHMCoilCount                   Integer      0                  Time Series
  vSACarReady                    Integer      1                  Time Series
  vAGVAtA602                     Integer      2                  Time Series
  vAGVAtA700                     Integer      0                  Time Series
  vAGVAtA800                     Integer      3                  Time Series
  vAGVAtA200                     Integer      1                  Time Series
  vAGVAtA210                     Integer      0                  Time Series
  v_CranePU                      Integer      30                 None       
  v_CraneDO                      Integer      30                 None       
  v_ASRS_PU                      Integer      70                 None       
  v_ASRS_DO                      Integer      80                 None       
  vLMElapsedInspectTime          Real         0                  None       
  v_LM_Inspect_Min               Real         5                  None       
  v_A200_Wait_Min                Integer      10                 None       
  v_A602_Wait_Min                Integer      20                 None       
  vLMExitDest                    Integer      0                  None       
  v_HM_Coils_Rolled              Integer      0                  None       
  v_CM_Coils_Rolled              Integer      0                  None       
  vCMCoilsExited                 Integer      0                  None       
  v_LM_Coils_Rolled              Integer      0                  None       
  v_C3_Coils_Rolled              Integer      0                  None       
  vExitNorth                     Real         0                  Time Series
  vExitSouth                     Real         0                  Time Series
  vExitTotalPlant                Integer      0                  Time Series
  vLMCoolCount                   Integer      0                  Time Series
  vASRSSouthMidCount             Integer      0                  Time Series
#
#Coils cooled table time
  vCMCoolBlue                    Integer      0                  Time Series
  vCMCoolGreen                   Integer      0                  Time Series
  vCMCoolBlueGreen               Integer      0                  Time Series
  vCFCoolBlue                    Integer      0                  Time Series
  vCFCoolGreen                   Integer      0                  Time Series
  vCFCoolBlueGreen               Integer      0                  Time Series
  v_CM_Prep_In_Use               Integer      0                  None       
  v_LM_Inspect_In_Use            Integer      0                  None       
  v_LM_InpectFreqCounter         Integer      0                  None       
  vCount_to_log_file             Integer      0                  None       
  vInsp_Count                    Integer      0                  None       
  vMonth1_Demand                 Integer      4588               None       
  vMonth2_Demand                 Integer      4267               None       
  vMonth3_Demand                 Integer      4646               None       
  vMill_WIP                      Integer      0                  Time Series
  vMill_Cap                      Integer      1154               None       
  vFinishing_WIP                 Real         0                  Time Series
  vCoilsInPlant                  Real         0                  Time Series
  vAnneal                        Integer      0                  Time Series
  vPK_Time                       Real         11                 None       
  vP2_Time                       Real         5                  None       
  v_C4_North_Dock_Coils_Ready_fo Integer      0                  Time Series
  vMonth1_Days                   Integer      31                 None       
  vMonth2_Days                   Integer      30                 None       
  vMonth3_Days                   Integer      31                 None       
  vTraff_BW_S3_Baller            Integer      0                  Time Series
  vTraff_Pup_Coiler              Integer      0                  Time Series
  vTraff_OTC_Brzway              Integer      0                  Time Series
  vTraff_Coating_Bay             Integer      0                  Time Series
  vTraff_SL_Bay_Brzway           Integer      0                  Time Series
  vTraff_CM_Bay_Entry            Integer      0                  Time Series
  vTraff_CM_Bay_Exit             Integer      0                  Time Series
  vCM4_Load                      Integer      0                  None       
  vConestoga_Dest                Integer      0                  None       
#
#//ADDED
  v_FluidsCool_Count             Integer      0                  Time Series
#
#//ADDED
  vFluidsCoolBlue                Integer      0                  Time Series
#
#//ADDED
  vFluidsCoolGreen               Integer      0                  Time Series
#
#//ADDED
  v_Conestoga_at_Fluids          Integer      0                  Time Series
#
#//ADDED2
  v_Conestoga_at_North_PU        Integer      0                  Time Series
#
#//ADDED
  v_HM_at_Fluids                 Integer      0                  Time Series
#
#//ADDED
  v_HM_Destination_Fluids_Storag Integer      0                  Time Series
#
#//ADDED
  v_HM_Destination_HMCarW        Integer      0                  Time Series
#
#//ADDED
  v_HM_Destination_HMCarW_From_F Integer      0                  Time Series
  v_Conestoga_Coils              Integer      0                  Time Series
  v_C4_Cap                       Integer      208                Time Series
  v_C4_Rack_Coils_Ready_for_Retu Integer      0                  Time Series
#
#//ADDED (2/19/2020)
  v_N_Dock_Truck_Goal            Integer      8                  Time Series
#
#//ADDED (2/19/2020)
  v_N_Dock_TrucksperHr           Real         0                  Time Series
#
#//ADDED (2/19/2020)
  v_N_Dock_Truck_Calc            Real         0                  Time Series
  v_TAA_Percent                  Real         0.392              Basic      
  v_Novelis_Percent              Real         0.608              Basic      
  v_CB_Percent                   Real         0.75               Basic      
  v_BE_Percent                   Real         0.25               Basic      
  v_Pusher_Furnace_Unloading     Integer      1                  Time Series
  v_Pusher_Furnace_DONE_Unloadin Integer      0                  Time Series
#
#//starts at 32 due to initial WIP
  v_Pusher_Furnace_1_Contents    Integer      32                 Time Series
#
#//starts at 32 due to initial WIP
  v_Pusher_Furnace_2_Contents    Integer      32                 Time Series
#
#//starts at 32 due to initial WIP
  v_Pusher_Furnace_3_Contents    Integer      32                 Time Series
#
#//starts at 32 due to initial WIP
  v_Pusher_Furnace_4_Contents    Integer      32                 Time Series
  v_C4_Racks_Capacity            Integer      0                  Time Series
#
#//used to hold Conestoga in place
  v_C4_Coils_Delivered           Integer      0                  Time Series
  v_C4_Conestoga_Parking_Cap     Integer      0                  Time Series
  v_STATS_Ingot_lbs_Produced_Per Real         0                  Time Series
  v_STATS_Ingots_Produced_Per_Da Integer      0                  Time Series
  v_STATS_lbs_Produced_Per_Day   Real         0                  Time Series
  v_STATS_Coils_Produced_Per_Day Integer      0                  Time Series
  v_STATS_lbs_Through_C4_Per_Day Real         0                  Time Series
  v_STATS_Coils_Through_C4_Per_D Integer      0                  Time Series
  v_Total_Ingot_lbs_Produced     Real         0                  Time Series
  v_Total_Ingots_Produced        Integer      0                  Time Series
  v_Total_lbs_Produced           Real         0                  Time Series
  v_Total_Coils_Produced         Integer      0                  Time Series
  v_Total_lbs_C4_Produced        Real         0                  Time Series
  v_Total_Coils_C4_Produced      Integer      0                  Time Series
  v_Current_CM_LM_Queue          Integer      0                  Time Series
  v_STATS_CM_LM_Transfer_Cutoff  Integer      m_CM_LM_Mill_Queue Time Series
  v_STATS_Total_C4_Coils_Switche Integer      0                  Time Series
  v_STATS_Needs_Milling_at_C4    Integer      0                  Time Series
  v_STATS_Leaving_C4             Integer      0                  Time Series
  v_STATS_Hot_Mill_Lbs           Integer      0                  Time Series
  v_ONROUTE_TRACKING             Integer      0                  Time Series
  v_STATS_Monthly_Exits_North    Integer      0                  Time Series
  v_STATS_Monthly_Exits_South    Integer      0                  Time Series
  v_STATS_Monthly_Exits_Total    Integer      0                  Time Series
  v_Ingot_Central_Storage        Integer      0                  Time Series
  v_STATS_Total_NON_Loadback_Ing Integer      0                  Time Series
  v_STATS_Total_Ingots_Ordered_F Integer      0                  Time Series
  v_STATS_PF_Daily_Exits         Integer      0                  Time Series
  v_PF_Exits                     Integer      0                  Time Series
  v_STATS_SC1_Daily_Exits        Integer      0                  Time Series
  v_STATS_SC2_Daily_Exits        Integer      0                  Time Series
  v_SC1_Exits                    Integer      0                  Time Series
  v_SC2_Exits                    Integer      0                  Time Series
  v_STATS_Scrap_Scalper1         Real         0                  Time Series
  v_STATS_Scrap_Scalper2         Real         0                  Time Series
  v_STATS_Scrap_Reversing_Mill   Real         0                  Time Series
  v_STATS_Scrap_Hot_Mill         Real         0                  Time Series
  v_Ingot_Storage_to_SC          Integer      0                  Time Series
  v_Ingot_Storage_to_PF          Integer      0                  Time Series
  v_Ingot_Storage_to_Outside     Integer      0                  Time Series
  v_STATS_Scrap_Tubs_Scalper_1   Integer      0                  Time Series
  v_STATS_Scrap_Tubs_Scalper_2   Integer      0                  Time Series
  v_STATS_Scrap_Tubs_HM          Integer      0                  Time Series
  v_STATS_Scrap_Tubs_CM          Integer      0                  Time Series
  v_STATS_Scrap_Tubs_C3          Integer      0                  Time Series
  v_STATS_Scrap_Tubs_C4          Integer      0                  Time Series
  v_STATS_Scrap_Tubs_AN          Integer      0                  Time Series
  v_STATS_Scrap_Tubs_HG          Integer      0                  Time Series
  v_STATS_Scrap_Tubs_LC          Integer      0                  Time Series
  v_STATS_Scrap_Tubs_LG          Integer      0                  Time Series
  v_STATS_Scrap_Tubs_TL          Integer      0                  Time Series
  v_STATS_Scrap_Tubs_CT          Integer      0                  Time Series
  v_STATS_Scrap_Tubs_S3          Integer      0                  Time Series
  v_STATS_Scrap_Tubs_S4          Integer      0                  Time Series
  v_STATS_Scrap_lbs_Scalper_1    Real         0                  Time Series
  v_STATS_Scrap_lbs_Scalper_2    Real         0                  Time Series
  v_STATS_Scrap_lbs_HM           Real         0                  Time Series
  v_STATS_Scrap_lbs_CM           Real         0                  Time Series
  v_STATS_Scrap_lbs_C3           Real         0                  Time Series
  v_STATS_Scrap_lbs_C4           Real         0                  Time Series
  v_STATS_Scrap_lbs_AN           Real         0                  Time Series
  v_STATS_Scrap_lbs_HG           Real         0                  Time Series
  v_STATS_Scrap_lbs_LC           Real         0                  Time Series
  v_STATS_Scrap_lbs_LG           Real         0                  Time Series
  v_STATS_Scrap_lbs_TL           Real         0                  Time Series
  v_STATS_Scrap_lbs_CT           Real         0                  Time Series
  v_STATS_Scrap_lbs_S3           Real         0                  Time Series
  v_STATS_Scrap_lbs_S4           Real         0                  Time Series
  v_STATS_Total_Tubs_into_Scrap_ Integer      0                  Time Series
  v_STATS_Total_lbs_into_Scrap_B Real         0                  Time Series
  v_STATS_Total_lbs_Processed_Th Real         0                  Time Series
  v_STATS_Total_Tubs_Processed_T Integer      0                  Time Series
  v_STATS_Scrap_Bay_Max_Tubs     Integer      800                Time Series
  v_STATS_Daily_lbs              Real         0                  Time Series
  v_STATS_Daily_Coils            Integer      0                  Time Series
  v_STATS_Overage_lbs            Real         0                  Time Series
  v_STATS_Overage_Coils          Integer      0                  Time Series
  v_daily_lbs                    Real         0                  Time Series
  v_daily_coils                  Integer      0                  Time Series
  v_overage_lbs                  Real         0                  Time Series
  v_overage_coils                Integer      0                  Time Series
  v_Scrap_Bay_Cycle              Real         0                  Time Series
  v_DUMMY_HM_Car_CHECK           Integer      0                  Time Series


********************************************************************************
*                                    Arrays                                    *
********************************************************************************

  ID                       Dimensions   Type         Import File                   Export File Disable        Persist                        
  ------------------------ ------------ ------------ ----------------------------- ----------- -------------- -------------------------------
  y_Cool_Hours             12,9         Expression   Logan Model 08-31-21 SRC.xlsb             None           Yes                            
#
#Row = A Destination +1
#
#Column 1 = # coils waiting
#Column 2 = Time needed for all WIP coils
  y_Coil_Count             32,2         Real                                                   None           No                             
#
#Keeps track of the status of all location spots
  ySaddle                  40,1         Integer                                                None           No                             
  yProduct_Data            200,17       Expression   Logan Model 08-31-21 SRC.xlsb             None           Yes                            
  yRouting_Data            2000,15      Expression   Logan Model 08-31-21 SRC.xlsb             None           Yes                            
  yWIP                     2000,14      Expression   Logan Model 08-31-21 SRC.xlsb             None           Yes                            
  yDT                      17,12        Real         Logan Model 08-31-21 SRC.xlsb             None           Yes                            
#
#Column 1 = Product #
#Column 2 = Qty Available to Load
#Column 3 = Load qty requested
#
#Row = Annealing furnace
  yAnneal                  2,3          Integer                                                None           No                             
  yTraffic                 9            Integer                                                None           No                             
#
#Tracks previous crane zone
  yCrane_Zones             4            Integer                                                None           No                             
#
#Tracks minutes left in each day (for orders)
  y_Day_Countdown          1000,2       Integer                                                None           No                             
  y_TEMP_Adjusted_Prod_Num 200          Integer      Logan Model 08-31-21 SRC.xlsb             None           No                             
  y_Scrap_Tracker          14,2         Real         Logan Model 08-31-21 SRC.xlsb             None           No                             


********************************************************************************
*                                    Macros                                    *
********************************************************************************

  ID                               Text
  -------------------------------- ------------
  mCooling                         Int iRow, iColumn
                                   Real iCoolHours
                                   Real PercComp
                                   Real CooledHrs = Clock(hr)-aCoilStart 
                                   
                                   If aRow > 0 Then PercComp = rand(100)/100
                                   Else PercComp = 1
                                   aRow = 0
                                   
                                   #Determine Column
                                   If aFrom = 0 Then iColumn = 0
                                   Else iColumn = 3
                                   If a_Alloy = 3000 Then Inc iColumn, 1
                                   Else If a_Alloy = 5000 Then Inc iColumn, 2
                                   Else Inc iColumn, 3
                                   
                                   # Determine row
                                   If Location() = CMCool_Lower_1 
                                   	or Location() = CMCool_Lower_2 
                                    	or Location() = CMCool_Lower_3 
                                   	or Location() = CMCool_5182_OF Then 
                                   		{
                                   		iRow = 1
                                   		Goto CM_Cool
                                   		}
                                   Else If Location() = CMCool_Middle_1 
                                   	or Location() = CMCool_Middle_2 
                                   	or  Location() = CMCool_Middle_3 
                                   	or Location() = CMCool_Upper_1 
                                   	or Location() = CMCool_Upper_2 
                                   	or Location() = CMCool_Upper_3 
                                   	or Location() = CMCool_HM_OF 
                                   	or Location() = CMCool_CM_OF Then 
                                   		{
                                   		iRow = 2
                                   		Goto CM_Cool
                                   		}
                                   Else If Location() = CFCool_1
                                   	or Location() = CFCool_2 
                                   	or Location() = CFCool_3 
                                   	or Location() = CFCool_4 
                                   	or Location() = CFDensePack 
                                   	or Location() = CF_OF Then 
                                   		{
                                   		iRow = 6
                                   		Goto CF_Cool
                                   		}
                                   Else If Location() = LMCoolSE Or Location()=FAC_Overflow Then 
                                   		{
                                   		iRow = 5
                                   		Goto LM_Cool
                                   		}
                                   Else If Location() = ASRSStore 
                                   	or Location() = ASRSMiddle Then 
                                   		{
                                   		iRow = 7
                                   		Goto ASRS_Cool
                                   		}
                                   Else If Location() = Forced_Air_Cool_Tier1 Then 
                                   		{
                                   		iRow = 4
                                   		Goto FAC_Cool
                                   		}		
                                   Else If Location() = Forced_Air_Cool_Tier2
                                   	Or Location() = FAC_Overflow Then
                                   		{
                                   		iRow = 3
                                   		Goto FAC_Cool
                                   		}
                                   Else If Location() = Supercooling 
                                   	Or Location()=Anneal_Saddles Then
                                   		{
                                   		iRow = 8
                                   		Goto SC_Cool
                                   		}
                                   		
                                   //CM Cooling Logic
                                   CM_Cool:
                                   INC v_CMCool_Count
                                   if iRow = 1 then INC v_CMCool_Bot_Count
                                   Else INC v_CMCool_Top_Count
                                   #Wait time until Cool
                                   iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                   WAIT .9 * iCoolHours HR
                                   a_Temperature = m_Cool
                                   GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                   inc vCMCoolBlue
                                   
                                   #Wait remaining time and save clock
                                   WAIT .1 * iCoolHours HR
                                   a_Temperature = m_Cold
                                   GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                   dec vCMCoolBlue
                                   inc vCMCoolGreen
                                   Return
                                   
                                   //LM Cooling Logic
                                   LM_Cool:
                                   Inc vLMCoolCount
                                   #Wait time until Cool
                                   iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                   WAIT .9 * iCoolHours HR
                                   a_Temperature = m_Cool
                                   GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                   
                                   WAIT .1 * iCoolHours HR
                                   a_Temperature = m_Cold
                                   GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                   Return
                                   
                                   //CF Cooling Logic
                                   CF_Cool:
                                   INC v_CFCool_Count
                                   #Wait time until Cool
                                   iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                   WAIT .9 * iCoolHours HR
                                   a_Temperature = m_Cool
                                   Inc vCFCoolBlue
                                   inc vCFCoolBlueGreen
                                   GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                   
                                   WAIT .1 * iCoolHours HR
                                   a_Temperature = m_Cold
                                   Inc vCFCoolGreen
                                   inc vCFCoolBlueGreen
                                   inc vCFCoilsReady
                                   GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                   Return
                                   
                                   //ASRS Cooling Logic
                                   ASRS_Cool:
                                   Inc vASRSSouthMidCount
                                   #Wait time until Cool
                                   iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                   WAIT .9 * iCoolHours HR
                                   a_Temperature = m_Cool
                                   GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                   
                                   WAIT .1 * iCoolHours HR
                                   a_Temperature = m_Cold
                                   GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                   Return
                                   
                                   //FAC Cooling Logic
                                   FAC_Cool:
                                   Inc vLMCoolCount
                                   iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                   WAIT iCoolHours HR
                                   a_Temperature = m_Cold
                                   GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                   Return
                                   
                                   //Supercooling Cooling Logic
                                   SC_Cool:
                                   iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                   if aFrom < 4 Then WAIT iCoolHours HR
                                   a_Temperature = m_Cold
                                   GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                   Return
  mProcessing                      Real rTime = yRouting_Data[aRoutingIndex,12] //Local variable for the Process Time
                                   Real rTimeCur = yRouting_Data[aRoutingIndex,12] //Local variable for the Process Time
                                   Int iDest //used to determine next Routing Index
                                   Int iQty = groupqty(Coil)
                                   If iQty =0 Then iQty=1
                                   
                                   If aBuildUps=0 then aBuildUps=1
                                   Int iBuildups = aBuildUps
                                   Int iBUs = aBuildUps
                                   Int iCoils =iBUs * aCuts
                                   If iCoils =0 Then iCoils=1
                                   
                                   #Update WIP And Load values
                                   Dec y_Coil_Count[a_Destination+1,1], iQty
                                   Dec y_Coil_Count[a_Destination+1,2], rTime*iQty
                                   
                                   #Determine next destination
                                   Inc aRoutingIndex
                                   aFrom = a_Destination
                                   iDest = aRoutingIndex
                                   a_Destination = yRouting_Data[aRoutingIndex,3]
                                   
                                   #Adjust routing if previous operation was a multiple routing option
                                   If yRouting_Data[iDest-1,2] = yRouting_Data[iDest+1,2] Then Inc iDest,2
                                   Else If yRouting_Data[iDest-1,2] = yRouting_Data[iDest,2] Then Inc iDest
                                   
                                   #Check To see If Next operation is a multiple routing
                                   #Check For 3 options
                                   If yRouting_Data[iDest+2,2] = yRouting_Data[iDest,2] Then
                                   	{
                                   	If aFrom = m_LM and yRouting_Data[iDest,3] =aFrom Then iDest = iDest
                                   	Else If aFrom = m_LM and yRouting_Data[iDest+1,3] =aFrom Then iDest = iDest+1
                                   	Else If aFrom = m_LM and yRouting_Data[iDest+2,3] =aFrom Then iDest = iDest+2
                                   	Else If y_Coil_Count[yRouting_Data[iDest,3]+1,2] <= y_Coil_Count[yRouting_Data[iDest+1,3]+1,2] 
                                   		And y_Coil_Count[yRouting_Data[iDest,3]+1,2] <= y_Coil_Count[yRouting_Data[iDest+2,3]+1,2]
                                   		Then iDest = iDest
                                   	Else If y_Coil_Count[yRouting_Data[iDest+1,3]+1,2] < y_Coil_Count[yRouting_Data[iDest,3]+1,2] 
                                   		And y_Coil_Count[yRouting_Data[iDest+1,3]+1,2] < y_Coil_Count[yRouting_Data[iDest+2,3]+1,2]
                                   		Then iDest = iDest + 1
                                   	Else iDest = iDest + 2			
                                   	}
                                   		
                                   #Check for 2 options
                                   Else If yRouting_Data[iDest+1,2] = yRouting_Data[iDest,2] Then
                                   	{
                                   	If aFrom = m_LM and yRouting_Data[iDest,3] =aFrom Then iDest = iDest
                                   	Else If aFrom = m_LM and yRouting_Data[iDest+1,3] =aFrom Then iDest = iDest+1
                                   	Else If aFrom = m_LM and yRouting_Data[iDest,3] = m_LM and vLMCoolCount > 85 Then iDest = iDest + 1	
                                   	Else If yRouting_Data[iDest+1,3] = m_LM and vLMCoolCount > 85 Then iDest = iDest
                                   	Else
                                   		{
                                   		If y_Coil_Count[yRouting_Data[iDest,3]+1,2] <= y_Coil_Count[yRouting_Data[iDest+1,3]+1,2] Then iDest = iDest
                                   		Else iDest = iDest + 1			
                                   		}	
                                   	}
                                   Else if yRouting_Data[iDest-1,2] > yRouting_Data[iDest,2] Then iDest = 0
                                   Else iDest = iDest
                                   
                                   aRoutingIndex = iDest
                                   
                                   #Determine next destination	
                                   If aRoutingIndex = 0 Then a_Destination = m_Exit
                                   Else a_Destination = yRouting_Data[iDest,3] //Assigns the next destination
                                   If a_Destination < 30 Then
                                   	{
                                   	rTime = yRouting_Data[iDest,12]  //Assigns Hrs for the next step
                                   
                                   	#Update WIP And Load values
                                   	Inc y_Coil_Count[a_Destination+1,1], iQty
                                   	Inc y_Coil_Count[a_Destination+1,2], rTime*iQty
                                   	}
                                   Else a_Destination = m_Exit
                                   
                                   # Wait the Process Time
                                   If Location() = Anneal_1 Or Location() = Anneal_2 Then 
                                   	{
                                   	Wait 22 hr
                                   	}
                                   Else If Location() = LG_Light_Gauge_Slitter Or Location() = HG_Heavy_Gauge_Slitter Or Location() = Slitter_3 Then 
                                   	{
                                   	While iBUs > 0 Do
                                   		{
                                   		wait rTimeCur/ iBuildups
                                   		
                                   		If iBUs > 1 and Location() = Slitter_3 Then Order aCuts Coil To Slitter_3_Exit
                                   		Else If iBUs > 1 and Location() = HG_Heavy_Gauge_Slitter Then Order aCuts Coil To HG_Exit
                                   		Else If iBUs > 1 and Location() = LG_Light_Gauge_Slitter Then Order aCuts Coil To Slitter_3_Exit
                                   		
                                   		Dec iBUs
                                   		}
                                   	}
                                   Else If Location()=P2_South Or Location() = PK_Line Then Wait rTimeCur/iCoils Hr 
                                   Else Wait rTimeCur Hr
  Exclude                          0
  mHM_Delay_Hrs                    4
  m_AGV_MIN_to_Wait                20
  m_Scrap                          31
  m_SC                             31.1
  m_ST                             31.1 //SAME AS SC?
  m_PF                             31.2
  m_PH                             31.2 //SAME AS PF?
  m_P4                             31.3
  m_HM                             0
  m_CM                             1
  m_LM                             2
  m_C3                             3
  m_AN                             4
  m_S3                             5
  m_HG                             6
  m_LG                             7
  m_TL                             8
  m_LC                             9
  m_CT                             10
  m_P2                             11
  m_PL                             12
  m_PK                             13
  m_S4                             14
  m_C4                             15
  m_IQ                             31
  m_Exit                           32
  m_Pass_Cols                      26
  m_Hot                            1
  m_Warm                           2
  m_Cool                           3
  m_Cold                           4
  m_LMPrep_Time                    5
  m_Lift_Time_CC1                  25
  m_Lift_Time_CC2                  25
  m_Lift_Time_CC3                  13
  m_Lift_Time_CC4                  25
  m_Lower_Time_CC1                 25
  m_Lower_Time_CC2                 25
  m_Lower_Time_CC3                 13
  m_Lower_Time_CC4                 25
  m_Lift_Time_asrs_CC1             25
  m_Lower_Time_asrs_CC1            25
  m_Lift_Time_asrs_CC2             25
  m_Lower_Time_asrs_CC2            25
  m_Lift_Time_LM_Ent_cc1           25
  m_Lower_Time_LM_Ent_cc1          25
  m_Lift_Time_LM_Exit_cc1          25
  m_Lift_Time_LM_Exit_cc2          25
  m_Lift_Time_LM_Exit_cc3          25
  m_Lower_Time_LM_Exit_cc1         25
  m_Lower_Time_LM_Exit_cc2         25
  m_Lower_Time_LM_Exit_cc3         25
  m_LMProcTime                     8
  m_LMInspect                      5
  ENTER                            1
  LEAVE                            2
  USE_RESOURCE                     3
  MOVE_with_RESOURCE               4
  mConestoga_Load_Unload_Time      5
  m_Daily_Lb_Demand                9497716
  TAA                              1
  Novelis                          2
  m_CB                             1
  m_BE                             2
  m_CM_LM_Mill_Queue               16000000
  m_Total_Conestoga                1
  AD                               1
  AE                               2
  AI                               3
  AO                               4
  AU                               5
  BC                               6
  BE                               7
  BP                               8
  BS                               9
  CB                               10
  CE                               11
  CP                               12
  CT                               13
  DC                               14
  FC                               15
  HB                               16
  OT                               17
  RR                               18
  TC                               19
  TS                               20
  m_DT_SD                          0.2
  m_PF_Speed_Increase              5


********************************************************************************
*                                 Subroutines                                  *
********************************************************************************

  ID                         Type         Parameter       Type         Logic
  -------------------------- ------------ --------------- ------------ ------------------
  sub_Coil_Graphic           Integer      iAlloy          Integer      //Get proper Graphic for alloy and temperature
                                          iTemp           Integer      INT i
                                                                       
                                                                       i = iTemp //parameter
                                                                       IF iAlloy = 5000 or iAlloy = 6000 or iAlloy = 7000 THEN i = i + 4 //always 5 off hot mill
                                                                       
                                                                       RETURN i
  s_Log_File                 None         p_Activity_type Integer      Int iActivity_type = p_Activity_type
                                          p_Resource      Integer      Int iResource = p_Resource
                                                                       If p_Activity_type = Leave Then Goto Done
                                                                       INC vCount_to_log_file			
                                                                       
                                                                       IF vCount_to_log_file = 1 				
                                                                       	THEN			
                                                                       		{		
                                                                       		RESET Log_file		
                                                                       		XWRITE Log_file , "vCount_to_log_file" $ ","		// use XWRITE anywhere text is output (does NOT include a "," so no need to concatenate that with the "$")
                                                                       		XWRITE Log_file , "ENTITY" $ ","		
                                                                       		XWRITE Log_file , "LOCATION" $ ","		
                                                                       		XWRITE Log_file , "OBJECTID()" $ ","		
                                                                       		XWRITE Log_file , "Activity" $ ","	
                                                                       		XWRITE Log_file , "Run Time" $ ","	 //"RESOURCE for USE and Movement" $ ","				// NEED TO PASS TO THE SUB EITHER THE NAME OF THE RESOURCE OR "0" 
                                                                       		XWRITE Log_file , "CLOCK(HR)" $ ","		
                                                                       		XWRITE Log_file , "Product Type" $ ","	
                                                                       		XWRITE Log_file , "Routing Record" $ ","	
                                                                       		XWRITE Log_file , "Lbs" $ ","	
                                                                       
                                                                       		XWRITE Log_file , "Month\n"	
                                                                       		}	
                                                                       				
                                                                       If vCount_to_log_file = 1 Then WRITELINE Log_file ,  0  // this properly separates possible sections for scenarios if used
                                                                       WRITE Log_file , vCount_to_log_file							// use WRITE anywhere numberic data is output (automatically includes a "," so no need to concatenate that)
                                                                       XWRITE Log_file , ENT(ENTITY()) $ ","				
                                                                       XWRITE Log_file , LOC(LOCATION()) $ ","				
                                                                       WRITE Log_file , OBJECTID()				
                                                                       
                                                                       IF p_Activity_type = ENTER THEN XWRITE Log_file , "Enter,"								
                                                                       	ELSE IF p_Activity_type = LEAVE		THEN	XWRITE Log_file , "Leave,"
                                                                       	ELSE IF p_Activity_type = MOVE_with_RESOURCE		THEN	XWRITE Log_file , "MOVE w RES,"
                                                                       	ELSE IF p_Activity_type = USE_RESOURCE		THEN	XWRITE Log_file , "USE_RESOURCE,"
                                                                       	
                                                                       /*
                                                                       IF ( p_Activity_type = MOVE_with_RESOURCE						// NEED TO PASS TO THE SUB EITHER THE NAME OF THE RESOURCE OR "0" 
                                                                       		Or p_Activity_type = USE_RESOURCE )
                                                                       		And p_Resource > 0
                                                                       	THEN  XWRITE Log_file , RES( p_Resource ) $ ","		
                                                                       	Else 	XWRITE Log_file , "na,"
                                                                       */
                                                                       If aRoutingIndex>0 Then WRITE Log_file, yRouting_Data[aRoutingIndex,12]
                                                                       
                                                                       WRITE Log_file , CLOCK(HR)				
                                                                       WRITE Log_file , aProduct
                                                                       WRITE Log_file , aRoutingIndex
                                                                       If aRoutingIndex>0 Then WRITE Log_file , yRouting_Data[aRoutingIndex,8]
                                                                       Else WRITE Log_file , 0
                                                                       
                                                                       WRITELINE Log_file , 	vMonth			
                                                                       				
                                                                       DONE:				
  s_Process                  None                                      Real rTime = yRouting_Data[aRoutingIndex,12] //Local variable for the Process Time
                                                                       Real rTimeCur = yRouting_Data[aRoutingIndex,12] //Local variable for the Process Time
                                                                       Int iDest //used to determine next Routing Index
                                                                       Int iQty = groupqty(Coil) //check for a batch
                                                                       If iQty = 0 Then iQty = 1 //if no batch, then qty = 1
                                                                       Int iBuildups = aBuildUps
                                                                       Int iBUs = aBuildUps
                                                                       Int iCoils = yRouting_Data[aRoutingIndex,6] //number of cuts
                                                                       Int iCuts = aCuts
                                                                       
                                                                       //Update WIP And Load values
                                                                       Dec y_Coil_Count[a_Destination+1,1], iQty //a_Destination for HM = 0, this immediately drops these values back to 0?
                                                                       Dec y_Coil_Count[a_Destination+1,2], rTime*iQty
                                                                       
                                                                       //SCRAP
                                                                       //Determine if the weight has changed
                                                                       If a_Weight_Lbs <> yRouting_Data[aRoutingIndex, 8] Then
                                                                       {
                                                                       	If yRouting_Data[aRoutingIndex, 3] = m_HM Then
                                                                       	{
                                                                       		Inc v_STATS_Scrap_lbs_HM, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		Inc y_Scrap_Tracker[3, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		While y_Scrap_Tracker[3, 2] >= y_Scrap_Tracker[3, 1] Do 
                                                                       		{
                                                                       			a_Tub_Weight_lbs = y_Scrap_Tracker[3, 1]
                                                                       			Inc v_STATS_Scrap_Tubs_HM
                                                                       			Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       			Dec y_Scrap_Tracker[3, 2], y_Scrap_Tracker[3, 1]
                                                                       		}
                                                                       	}
                                                                       	else If yRouting_Data[aRoutingIndex, 3] = m_CM Then
                                                                       	{
                                                                       		Inc v_STATS_Scrap_lbs_CM, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		Inc y_Scrap_Tracker[4, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		while y_Scrap_Tracker[4, 2] >= y_Scrap_Tracker[4, 1] do
                                                                       		{
                                                                       			a_Tub_Weight_lbs = y_Scrap_Tracker[4, 1]
                                                                       			Inc v_STATS_Scrap_Tubs_CM
                                                                       			Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       			Dec y_Scrap_Tracker[4, 2], y_Scrap_Tracker[4, 1]
                                                                       		}
                                                                       	}
                                                                       	else If yRouting_Data[aRoutingIndex, 3] = m_C3 Then
                                                                       	{
                                                                       		Inc v_STATS_Scrap_lbs_C3, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		Inc y_Scrap_Tracker[5, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		while y_Scrap_Tracker[5, 2] >= y_Scrap_Tracker[5, 1] do
                                                                       		{
                                                                       			a_Tub_Weight_lbs = y_Scrap_Tracker[5, 1]
                                                                       			Inc v_STATS_Scrap_Tubs_C3
                                                                       			Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       			Dec y_Scrap_Tracker[5, 2], y_Scrap_Tracker[5, 1]
                                                                       		}
                                                                       	}
                                                                       	else If yRouting_Data[aRoutingIndex, 3] = m_C4 Then
                                                                       	{
                                                                       		Inc v_STATS_Scrap_lbs_C4, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		Inc y_Scrap_Tracker[6, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		while y_Scrap_Tracker[6, 2] >= y_Scrap_Tracker[6, 1] do
                                                                       		{
                                                                       			a_Tub_Weight_lbs = y_Scrap_Tracker[6, 1]
                                                                       			Inc v_STATS_Scrap_Tubs_C4
                                                                       			Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       			Dec y_Scrap_Tracker[6, 2], y_Scrap_Tracker[6, 1]
                                                                       		}
                                                                       	}
                                                                       	else If yRouting_Data[aRoutingIndex, 3] = m_AN Then
                                                                       	{
                                                                       		Inc v_STATS_Scrap_lbs_AN, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		Inc y_Scrap_Tracker[7, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		while y_Scrap_Tracker[7, 2] >= y_Scrap_Tracker[7, 1] do
                                                                       		{
                                                                       			a_Tub_Weight_lbs = y_Scrap_Tracker[7, 1]
                                                                       			Inc v_STATS_Scrap_Tubs_AN
                                                                       			Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       			Dec y_Scrap_Tracker[7, 2], y_Scrap_Tracker[7, 1]
                                                                       		}
                                                                       	}
                                                                       	else If yRouting_Data[aRoutingIndex, 3] = m_HG Then
                                                                       	{
                                                                       		Inc v_STATS_Scrap_lbs_HG, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		Inc y_Scrap_Tracker[8, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		while y_Scrap_Tracker[8, 2] >= y_Scrap_Tracker[8, 1] do
                                                                       		{
                                                                       			a_Tub_Weight_lbs = y_Scrap_Tracker[8, 1]
                                                                       			Inc v_STATS_Scrap_Tubs_HG
                                                                       			Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       			Dec y_Scrap_Tracker[8, 2], y_Scrap_Tracker[8, 1]
                                                                       		}
                                                                       	}
                                                                       	else If yRouting_Data[aRoutingIndex, 3] = m_LC Then
                                                                       	{
                                                                       		Inc v_STATS_Scrap_lbs_LC, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		Inc y_Scrap_Tracker[9, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		while y_Scrap_Tracker[9, 2] >= y_Scrap_Tracker[9, 1] do
                                                                       		{
                                                                       			a_Tub_Weight_lbs = y_Scrap_Tracker[9, 1]
                                                                       			Inc v_STATS_Scrap_Tubs_LC
                                                                       			Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       			Dec y_Scrap_Tracker[9, 2], y_Scrap_Tracker[9, 1]
                                                                       		}
                                                                       	}
                                                                       	else If yRouting_Data[aRoutingIndex, 3] = m_LG Then
                                                                       	{
                                                                       		Inc v_STATS_Scrap_lbs_LG, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		Inc y_Scrap_Tracker[10, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		while y_Scrap_Tracker[10, 2] >= y_Scrap_Tracker[10, 1] do
                                                                       		{
                                                                       			a_Tub_Weight_lbs = y_Scrap_Tracker[10, 1]
                                                                       			Inc v_STATS_Scrap_Tubs_LG
                                                                       			Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       			Dec y_Scrap_Tracker[10, 2], y_Scrap_Tracker[10, 1]
                                                                       		}
                                                                       	}
                                                                       	else If yRouting_Data[aRoutingIndex, 3] = m_TL Then
                                                                       	{
                                                                       		Inc v_STATS_Scrap_lbs_TL, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		Inc y_Scrap_Tracker[11, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		while y_Scrap_Tracker[11, 2] >= y_Scrap_Tracker[11, 1] do
                                                                       		{
                                                                       			a_Tub_Weight_lbs = y_Scrap_Tracker[11, 1]
                                                                       			Inc v_STATS_Scrap_Tubs_TL
                                                                       			Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       			Dec y_Scrap_Tracker[11, 2], y_Scrap_Tracker[11, 1]
                                                                       		}
                                                                       	}
                                                                       	else If yRouting_Data[aRoutingIndex, 3] = m_CT Then
                                                                       	{
                                                                       		Inc v_STATS_Scrap_lbs_CT, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		Inc y_Scrap_Tracker[12, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		while y_Scrap_Tracker[12, 2] >= y_Scrap_Tracker[12, 1] do
                                                                       		{
                                                                       			a_Tub_Weight_lbs = y_Scrap_Tracker[12, 1]
                                                                       			Inc v_STATS_Scrap_Tubs_CT
                                                                       			Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       			Dec y_Scrap_Tracker[12, 2], y_Scrap_Tracker[12, 1]
                                                                       		}
                                                                       	}
                                                                       	else If yRouting_Data[aRoutingIndex, 3] = m_S3 Then
                                                                       	{
                                                                       		Inc v_STATS_Scrap_lbs_S3, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		Inc y_Scrap_Tracker[13, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		while y_Scrap_Tracker[13, 2] >= y_Scrap_Tracker[13, 1] do
                                                                       		{
                                                                       			a_Tub_Weight_lbs = y_Scrap_Tracker[13, 1]
                                                                       			Inc v_STATS_Scrap_Tubs_S3
                                                                       			Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       			Dec y_Scrap_Tracker[13, 2], y_Scrap_Tracker[13, 1]
                                                                       		}
                                                                       	}
                                                                       	else If yRouting_Data[aRoutingIndex, 3] = m_S4 Then
                                                                       	{
                                                                       		Inc v_STATS_Scrap_lbs_S4, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		Inc y_Scrap_Tracker[14, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       		while y_Scrap_Tracker[14, 2] >= y_Scrap_Tracker[14, 1] do
                                                                       		{
                                                                       			a_Tub_Weight_lbs = y_Scrap_Tracker[14, 1]
                                                                       			Inc v_STATS_Scrap_Tubs_S4
                                                                       			Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       			Dec y_Scrap_Tracker[14, 2], y_Scrap_Tracker[14, 1]
                                                                       		}
                                                                       	}
                                                                       }
                                                                       a_Weight_Lbs = yRouting_Data[aRoutingIndex, 8]
                                                                       
                                                                       //Determine next destination
                                                                       Inc aRoutingIndex //for HM - 898 to 899
                                                                       aFrom = a_Destination //for HM - aFrom = 898
                                                                       iDest = aRoutingIndex //for HM - iDest = 899
                                                                       a_Destination = yRouting_Data[aRoutingIndex,3] //for HM = a_Destination = m_CM (1)
                                                                       
                                                                       //Adjust routing if previous operation was a multiple routing option
                                                                       If yRouting_Data[iDest-1,2] = yRouting_Data[iDest+1,2] Then Inc iDest,2 //if the ROUTING tab shows multiple step XX (step 20, step 20, step 20, etc.)
                                                                       Else If yRouting_Data[iDest-1,2] = yRouting_Data[iDest,2] Then Inc iDest
                                                                       
                                                                       //Check To see If Next operation is a multiple routing
                                                                       //Check For 3 options
                                                                       If yRouting_Data[iDest+2,2] = yRouting_Data[iDest,2] Then //if three steps in a row are the same (i.e. C4, C4, C4)
                                                                       {
                                                                       	If aFrom = m_LM and yRouting_Data[iDest,3] = aFrom Then iDest = iDest //LM = Cold Mill 2
                                                                       	Else If aFrom = m_LM and yRouting_Data[iDest+1,3] = aFrom Then iDest = iDest+1
                                                                       	Else If aFrom = m_LM and yRouting_Data[iDest+2,3] = aFrom Then iDest = iDest+2
                                                                       	Else If y_Coil_Count[yRouting_Data[iDest,3]+1,2] <= y_Coil_Count[yRouting_Data[iDest+1,3]+1,2] //Least coil time at iDest (next step)
                                                                       		And y_Coil_Count[yRouting_Data[iDest,3]+1,2] <= y_Coil_Count[yRouting_Data[iDest+2,3]+1,2]
                                                                       		Then iDest = iDest
                                                                       	Else If y_Coil_Count[yRouting_Data[iDest+1,3]+1,2] < y_Coil_Count[yRouting_Data[iDest,3]+1,2] //Least coil time at iDest+1 (next, next step)
                                                                       		And y_Coil_Count[yRouting_Data[iDest+1,3]+1,2] < y_Coil_Count[yRouting_Data[iDest+2,3]+1,2]
                                                                       		Then iDest = iDest + 1
                                                                       	Else iDest = iDest + 2	//Least coil time at iDest+2	
                                                                       }
                                                                       		
                                                                       //Check for 2 options
                                                                       Else If yRouting_Data[iDest+1,2] = yRouting_Data[iDest,2] Then //for HM - if step 900 = step 899 
                                                                       {
                                                                       	If aFrom = m_LM and yRouting_Data[iDest,3] =aFrom Then iDest = iDest //no
                                                                       	Else If aFrom = m_LM and yRouting_Data[iDest+1,3] =aFrom Then iDest = iDest+1 //no
                                                                       	Else If aFrom = m_LM and yRouting_Data[iDest,3] = m_LM and vLMCoolCount > 85 Then iDest = iDest + 1	//no
                                                                       	Else If yRouting_Data[iDest+1,3] = m_LM and vLMCoolCount > 85 Then iDest = iDest //no
                                                                       	Else
                                                                       	{
                                                                       		If y_Coil_Count[yRouting_Data[iDest,3]+1,2] <= y_Coil_Count[yRouting_Data[iDest+1,3]+1,2] Then iDest = iDest //for HM - if coil count at next, next step > next step then just stay at next step (899)
                                                                       		Else iDest = iDest + 1	//if coil count is smaller at next, next step then go to next next step	(900)
                                                                       	}	
                                                                       }
                                                                       Else if yRouting_Data[iDest-1,2] > yRouting_Data[iDest,2] Then iDest = 0
                                                                       Else iDest = iDest //if not just keep it the same
                                                                       
                                                                       aRoutingIndex = iDest //if iDest changed at all in the last 20 lines of code, assign a new aRoutingIndex number
                                                                       //for HM - aRouting index will be either 899 or 900 based on how much coil time is at m_CM
                                                                       
                                                                       //Determine next destination	
                                                                       If aRoutingIndex = 0 Then a_Destination = m_Exit
                                                                       Else a_Destination = yRouting_Data[iDest,3] //Assigns the next destination (m_CM REGARDLESS if 899 or 900)
                                                                       If a_Destination < 30 Then //for HM - YES (1)
                                                                       {
                                                                       	rTime = yRouting_Data[iDest,12]  //Assigns Hrs for the next step (for HM - 0.08 or 0.11)
                                                                       
                                                                       	//Update WIP And Load values
                                                                       	Inc y_Coil_Count[a_Destination+1,1], iQty
                                                                       	Inc y_Coil_Count[a_Destination+1,2], rTime*iQty //y_Coil_Count[2,2] will m_BE inc REGARDLESS if 899 or 900)
                                                                       }
                                                                       Else a_Destination = m_Exit
                                                                       
                                                                       //Wait the Process Time
                                                                       If Location() = LG_Light_Gauge_Slitter Or Location() = HG_Heavy_Gauge_Slitter Or Location() = Slitter_3 Or location() = Slitter_4 Then //ADDED for Slitter 4!
                                                                       {
                                                                       	While iBUs > 0 Do //iBUs ALSO = Buildups
                                                                       	{ 
                                                                       		wait (rTimeCur * 0.8) / iBuildups Hr ////////////////////////////////////////////ADJUSTED FOR SCENARIO! 10/22/2021
                                                                       		
                                                                       		If iBUs > 1 Then
                                                                       		{
                                                                       			If iBUs > 1 and Location() = Slitter_3 Then Order aCuts Coil To Slitter_3_Exit
                                                                       			Else If iBUs > 1 and location() = Slitter_4 Then Order aCuts Coil To Slitter_4_Exit //ADDED for Slitter 4!
                                                                       			Else If iBUs > 1 and Location() = HG_Heavy_Gauge_Slitter Then Order aCuts Coil To HG_Exit
                                                                       			Else If iBUs > 1 and Location() = LG_Light_Gauge_Slitter Then Order aCuts Coil To LG_Exit
                                                                       			Inc vCoilsInPlant, iCuts
                                                                       			Inc vFinishing_WIP, iCuts
                                                                       		}		
                                                                       		Else If iCuts > 1 Then
                                                                       		{
                                                                       			Inc vCoilsInPlant, iCuts-1
                                                                       			Inc vFinishing_WIP, iCuts-1
                                                                       		}
                                                                       		Dec iBUs
                                                                       	}
                                                                       }
                                                                       //Else If Location() = LCL_Level_Clean_Line Then Wait (rTimeCur * 0.8) hr //ADDED 10/22/2021 for SCENARIO 1
                                                                       Else If Location() = LMMill Then Wait (rTimeCur * 0.8) hr //ADDED 10/22/2021 for SCENARIO 3
                                                                       Else If Location() = P2_South Then Wait vP2_Time min
                                                                       Else If Location() = PK_Line Or location() = PK_Line_2 Then Wait vPK_Time min  
                                                                       Else If location() = HMill Then
                                                                       {
                                                                       	Wait (yRouting_Data[aRoutingIndex - 1, 8] / (m_Daily_Lb_Demand / 24)) hr 
                                                                       }
                                                                       Else Wait rTimeCur Hr //for HM - line 898 or 0.11
  s_SC_PF_Process            None                                      Real rTimeCur = yRouting_Data[aRoutingIndex,12] //Local variable for the Process Time
                                                                       Int iDest //used to determine next Routing Index
                                                                       
                                                                       //Starting values for ingots
                                                                       //aRoutingIndex = whataever was determined from the routing tab. (HM - 2 for SC)
                                                                       //a_Destination = m_HM NOTE: THIS IS NOT USED IN THE PROCESSING! It will stay at HM until the Hot Mill
                                                                       //a_SC_PF_Destination = 1
                                                                       
                                                                       //remelt (START) = 0
                                                                       //SC = 1
                                                                       //PF = 2
                                                                       
                                                                       //Determine if the weight has changed
                                                                       If a_Weight_Lbs <> yRouting_Data[aRoutingIndex, 8] Then
                                                                       {
                                                                       	If yRouting_Data[aRoutingIndex, 3] = m_SC Or yRouting_Data[aRoutingIndex, 3] = m_ST Then
                                                                       	{
                                                                       		If location() = LOC_Scalper_1 Then 
                                                                       		{
                                                                       			Inc v_STATS_Scrap_lbs_Scalper_1, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       			Inc y_Scrap_Tracker[1, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       			while y_Scrap_Tracker[1, 2] >= y_Scrap_Tracker[1, 1] do
                                                                       			{
                                                                       				a_Tub_Weight_lbs = y_Scrap_Tracker[1, 1]
                                                                       				Inc v_STATS_Scrap_Tubs_Scalper_1 
                                                                       				Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       				Dec y_Scrap_Tracker[1, 2], y_Scrap_Tracker[1, 1]
                                                                       			}
                                                                       		}
                                                                       		Else If location() = LOC_Scalper_2 Then
                                                                       		{
                                                                       			Inc v_STATS_Scrap_lbs_Scalper_2, (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       			Inc y_Scrap_Tracker[2, 2], (a_Weight_Lbs - yRouting_Data[aRoutingIndex, 8])
                                                                       			while y_Scrap_Tracker[2, 2] >= y_Scrap_Tracker[2, 1] do
                                                                       			{
                                                                       				a_Tub_Weight_lbs = y_Scrap_Tracker[2, 1]
                                                                       				Inc v_STATS_Scrap_Tubs_Scalper_2
                                                                       				Order 1 ENT_Scrap_Tub To LOC_Scrap_Arrival 
                                                                       				Dec y_Scrap_Tracker[2, 2], y_Scrap_Tracker[2, 1]
                                                                       			}
                                                                       		}
                                                                       		Else Display "ERROR: aRoutingIndex at scapler, but no scalper location! Loc = ", loc(location())
                                                                       	}
                                                                       }
                                                                       a_Weight_Lbs = yRouting_Data[aRoutingIndex, 8]
                                                                       
                                                                       //Determine next destination
                                                                       Inc aRoutingIndex //determines position on the routing tab (-2 from HM)
                                                                       iDest = aRoutingIndex //for SC - iDest = 1
                                                                       aFrom = a_SC_PF_Destination //for SC - aFrom = 0
                                                                       
                                                                       //Determine next destination	
                                                                       a_SC_PF_Destination = yRouting_Data[iDest,3] //Assigns the next destination (m_CM REGARDLESS if 899 or 900)
                                                                       
                                                                       Wait rTimeCur hr
  Sub1                       None                                      Int i
                                                                       
                                                                       While i=0 Do	
                                                                       	{
                                                                       	//Update variable
                                                                       	vTraff_BW_S3_Baller = yTraffic[1]
                                                                       	vTraff_CM_Bay_Entry = yTraffic[6]
                                                                       	vTraff_CM_Bay_Exit = yTraffic[7]
                                                                       	vTraff_Coating_Bay = yTraffic[4]
                                                                       	vTraff_OTC_Brzway = yTraffic[3]
                                                                       	vTraff_Pup_Coiler = yTraffic[2]
                                                                       	vTraff_SL_Bay_Brzway = yTraffic[5]
                                                                       	yTraffic[1] = 0
                                                                       	yTraffic[6] = 0
                                                                       	yTraffic[7] = 0
                                                                       	yTraffic[4] = 0
                                                                       	yTraffic[3] = 0
                                                                       	yTraffic[2] = 0
                                                                       	yTraffic[5] = 0
                                                                       	
                                                                       	
                                                                       	//ADDED tracking North Dock trucks per hour (2/19/2020)
                                                                       	v_N_Dock_TrucksperHr = v_N_Dock_Truck_Calc 
                                                                       	v_N_Dock_Truck_Calc = 0
                                                                       	
                                                                       	//Cycle to next time bucket
                                                                       	Wait 1 hr
                                                                       	}
  s_Cooling                  None                                      Int iRow, iColumn
                                                                       Real iCoolHours
                                                                       Real PercComp
                                                                       Real CooledHrs = Clock(hr) - aCoilStart //Clock starts just after Hot Mill!
                                                                       //If Location()=CMCool_Lower_1 Then debug
                                                                       If aRow > 0 Then //If something starts in WIP
                                                                       {
                                                                       	PercComp = rand(100)
                                                                       	If PercComp < 20 then PercComp=1  //Makes 20% of the parts finished cooling
                                                                       	Else PercComp = rand(100)/100
                                                                       	aRow = 0
                                                                       }
                                                                       Else PercComp = 1
                                                                       
                                                                       //Determine Column
                                                                       If aFrom = 0 Then iColumn = 0
                                                                       Else If aFrom = 15 Then iColumn = 6
                                                                       Else iColumn = 3
                                                                       If a_Alloy = 3000 Then Inc iColumn, 1
                                                                       Else If a_Alloy = 5000 Then Inc iColumn, 2
                                                                       Else Inc iColumn, 3
                                                                       
                                                                       //Determine row
                                                                       If Location() = CMCool_Lower_1 
                                                                       or Location() = CMCool_Lower_2 
                                                                       or Location() = CMCool_Lower_3 
                                                                       or Location() = CMCool_5182_OF Then 
                                                                       {
                                                                       	If a_Destination < 4 then
                                                                       	{
                                                                       		iRow = 1
                                                                       		Goto CM_Cool
                                                                       	}
                                                                       	Else 
                                                                       	{
                                                                       		iRow = 9
                                                                       		Goto Before_C4_Cool
                                                                       	}
                                                                       }
                                                                       Else If Location() = CMCool_Middle_1 
                                                                       or Location() = CMCool_Middle_2 
                                                                       or  Location() = CMCool_Middle_3 
                                                                       or Location() = CMCool_Upper_1 
                                                                       or Location() = CMCool_Upper_2 
                                                                       or Location() = CMCool_Upper_3 
                                                                       or Location() = CMCool_HM_OF 
                                                                       or Location() = CMCool_CM_OF Then 
                                                                       {
                                                                       	If a_Destination<4 then
                                                                       	{
                                                                       		iRow = 2
                                                                       		Goto CM_Cool
                                                                       	}
                                                                       	Else 
                                                                       	{
                                                                       		iRow = 10
                                                                       		Goto Before_C4_Cool
                                                                       	}
                                                                       }
                                                                       Else If Location() = C4_Mill_Input_Conv 
                                                                       Or Location() = C4_Racks
                                                                       Or Location() = C4_Racks_OF then
                                                                       {
                                                                       	If a_Destination=m_C4 Then iRow = 9
                                                                       	Else iRow =11
                                                                       	Goto After_C4_Cool
                                                                       }
                                                                       Else If Location() = CFCool_1
                                                                       or Location() = CFCool_2 
                                                                       or Location() = CFCool_3 
                                                                       or Location() = CFCool_4 
                                                                       or Location() = CFDensePack 
                                                                       or Location() = CF_OF Then 
                                                                       {
                                                                       	iRow = 6
                                                                       	Goto CF_Cool
                                                                       }
                                                                       Else If Location() = LMCoolSE Or Location()=FAC_Overflow Then 
                                                                       {
                                                                       	iRow = 5
                                                                       	Goto LM_Cool
                                                                       }
                                                                       Else If Location() = ASRSStore 
                                                                       or Location() = ASRSMiddle Then 
                                                                       {
                                                                       	iRow = 7
                                                                       	Goto ASRS_Cool
                                                                       }
                                                                       Else If Location() = Forced_Air_Cool_Tier1 Then 
                                                                       {
                                                                       	iRow = 4
                                                                       	Goto FAC_Cool
                                                                       }		
                                                                       Else If Location() = Forced_Air_Cool_Tier2 Then
                                                                       {
                                                                       	iRow = 3
                                                                       	Goto FAC_Cool
                                                                       }
                                                                       Else If Location() = Supercooling 
                                                                       Or Location()=Anneal_Saddles
                                                                       Or Location()=Anneal_Saddles_OF Then
                                                                       {
                                                                       	iRow = 8
                                                                       	Goto SC_Cool
                                                                       }
                                                                       Else If Location() = Fluids_Storage Or location() = Fluids_Storage_Overflow	Then		//ADDED!
                                                                       {																				//ADDED!
                                                                       	iRow = 10																		//ADDED!
                                                                       	Goto Fluids_Cool																//ADDED!
                                                                       }																				//ADDED!
                                                                       //CM Cooling Logic
                                                                       CM_Cool:
                                                                       INC v_CMCool_Count
                                                                       if iRow = 1 then INC v_CMCool_Bot_Count
                                                                       Else INC v_CMCool_Top_Count
                                                                       //Wait time until Cool
                                                                       iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                                                       
                                                                       WAIT .9 * iCoolHours HR
                                                                       a_Temperature = m_Cool
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       inc vCMCoolBlue
                                                                       
                                                                       //Wait remaining time and save clock
                                                                       WAIT .1 * iCoolHours HR
                                                                       a_Temperature = m_Cold
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       dec vCMCoolBlue
                                                                       inc vCMCoolGreen
                                                                       Return
                                                                       
                                                                       //LM Cooling Logic
                                                                       LM_Cool:
                                                                       Inc vLMCoolCount
                                                                       //Wait time until Cool
                                                                       iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                                                       WAIT .9 * iCoolHours HR
                                                                       a_Temperature = m_Cool
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       
                                                                       WAIT .1 * iCoolHours HR
                                                                       a_Temperature = m_Cold
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       Return
                                                                       
                                                                       //CF Cooling Logic
                                                                       CF_Cool:
                                                                       INC v_CFCool_Count
                                                                       #Wait time until Cool
                                                                       iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                                                       WAIT .9 * iCoolHours HR
                                                                       a_Temperature = m_Cool
                                                                       Inc vCFCoolBlue
                                                                       inc vCFCoolBlueGreen
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       
                                                                       WAIT .1 * iCoolHours HR
                                                                       a_Temperature = m_Cold
                                                                       Inc vCFCoolGreen
                                                                       inc vCFCoolBlueGreen
                                                                       inc vCFCoilsReady
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       Return
                                                                       
                                                                       //ASRS Cooling Logic
                                                                       ASRS_Cool:
                                                                       Inc vASRSSouthMidCount
                                                                       #Wait time until Cool
                                                                       iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                                                       WAIT .9 * iCoolHours HR
                                                                       a_Temperature = m_Cool
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       
                                                                       WAIT .1 * iCoolHours HR
                                                                       a_Temperature = m_Cold
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       Return
                                                                       
                                                                       //FAC Cooling Logic
                                                                       FAC_Cool:
                                                                       Inc vLMCoolCount
                                                                       iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                                                       WAIT iCoolHours HR
                                                                       a_Temperature = m_Cold
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       Return
                                                                       
                                                                       //Supercooling Cooling Logic
                                                                       SC_Cool:
                                                                       iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                                                       if aFrom < 4 Then WAIT iCoolHours HR
                                                                       a_Temperature = m_Cold
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       Return
                                                                       
                                                                       //C4 Cooling Logic
                                                                       Before_C4_Cool:
                                                                       INC v_CMCool_Count
                                                                       if iRow = 9 then INC v_CMCool_Bot_Count
                                                                       Else INC v_CMCool_Top_Count
                                                                       #Wait time until Cool
                                                                       iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                                                       
                                                                       WAIT .9 * iCoolHours HR
                                                                       a_Temperature = m_Cool
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       inc vCMCoolBlue
                                                                       
                                                                       #Wait remaining time and save clock
                                                                       WAIT .1 * iCoolHours HR
                                                                       a_Temperature = m_Cold
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       dec vCMCoolBlue
                                                                       inc vCMCoolGreen
                                                                       Return
                                                                       
                                                                       //ADDED!
                                                                       //Fluids Cooling Logic
                                                                       Fluids_Cool:
                                                                       INC v_FluidsCool_Count
                                                                       #Wait time until Cool
                                                                       iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                                                       
                                                                       WAIT .9 * iCoolHours HR
                                                                       a_Temperature = m_Cool
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       inc vFluidsCoolBlue
                                                                       
                                                                       #Wait remaining time and save clock
                                                                       WAIT .1 * iCoolHours HR
                                                                       a_Temperature = m_Cold
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       dec vFluidsCoolBlue
                                                                       inc vFluidsCoolGreen
                                                                       Return
                                                                       //ADDED!
                                                                       
                                                                       //After C4 Cooling Logic
                                                                       After_C4_Cool:
                                                                       iCoolHours = (y_Cool_Hours[iRow,iColumn]-CooledHrs) * PercComp
                                                                       WAIT iCoolHours HR
                                                                       a_Temperature = m_Cold
                                                                       GRAPHIC sub_Coil_Graphic(a_Alloy, a_Temperature)
                                                                       Return
  s_Day_Countdown            None                                      Int lv_Min
                                                                       Int lv_Day
                                                                       Int lv_Time_Remaining
                                                                       Int lv_INF_Loop
                                                                       Int lv_Month_Days
                                                                       
                                                                       lv_Day = 1
                                                                       lv_INF_Loop = 1
                                                                       
                                                                       While lv_INF_Loop = 1 Do
                                                                       {
                                                                       	y_Day_Countdown[lv_Day, 2] = 1440 //1 day's worth of minutes
                                                                       	While y_Day_Countdown[lv_Day, 2] > 0 do
                                                                       	{
                                                                       		Wait 1 min 
                                                                       		Dec y_Day_Countdown[lv_Day, 2]
                                                                       	}
                                                                       	
                                                                       	//collect stats
                                                                       	v_STATS_Ingots_Produced_Per_Day = v_Total_Ingots_Produced 
                                                                       	v_STATS_Ingot_lbs_Produced_Per_Day = v_Total_Ingot_lbs_Produced 
                                                                       	v_STATS_Coils_Produced_Per_Day = v_Total_Coils_Produced 
                                                                       	v_STATS_lbs_Produced_Per_Day = v_Total_lbs_Produced 
                                                                       	v_STATS_Coils_Through_C4_Per_Day = v_Total_Coils_C4_Produced 
                                                                       	v_STATS_lbs_Through_C4_Per_Day = v_Total_lbs_C4_Produced 
                                                                       	//The following exit stats are calculated in the Production_Control location
                                                                       	//v_STATS_Monthly_Exits_North = vExitNorth 
                                                                       	//v_STATS_Monthly_Exits_South = vExitSouth 
                                                                       	//v_STATS_Monthly_Exits_Total = vExitTotalPlant 
                                                                       	v_STATS_PF_Daily_Exits = v_PF_Exits 
                                                                       	v_STATS_SC1_Daily_Exits = v_SC1_Exits 
                                                                       	v_STATS_SC2_Daily_Exits = v_SC2_Exits 
                                                                       	v_STATS_Daily_Coils = v_daily_coils 
                                                                       	v_STATS_Daily_lbs = v_daily_lbs 
                                                                       	v_STATS_Overage_Coils = v_overage_coils 
                                                                       	v_STATS_Overage_lbs = v_overage_lbs 
                                                                       	
                                                                       	//reset stats for next day
                                                                       	v_Total_Ingots_Produced = 0
                                                                       	v_Total_Ingot_lbs_Produced = 0
                                                                       	v_Total_Coils_Produced = 0
                                                                       	v_Total_lbs_Produced = 0
                                                                       	v_Total_Coils_C4_Produced = 0
                                                                       	v_Total_lbs_C4_Produced = 0
                                                                       	v_PF_Exits = 0
                                                                       	v_SC1_Exits = 0
                                                                       	v_SC2_Exits = 0
                                                                       	v_daily_coils = 0
                                                                       	v_daily_lbs = 0
                                                                       	v_overage_coils = 0
                                                                       	v_overage_lbs = 0
                                                                       	
                                                                       	Inc lv_Day 
                                                                       }
  s_CM_LM_Queue_ENTER        None                                      //Only TAA counts for queue (non-automotive)
                                                                       //ASSUMPTION - using product weight instead of routing weight due to coil weight decrease through steps
                                                                       If a_Destination = m_CM Or a_Destination = m_LM Then
                                                                       {
                                                                       	If a_Owner = TAA then 
                                                                       	{
                                                                       		If a_Already_Added_to_C4_Queue_Lb = 0 Then
                                                                       		{
                                                                       			a_Already_Added_to_C4_Queue_Lb = 1
                                                                       			Inc v_Current_CM_LM_Queue, yProduct_Data[aProduct, 4]
                                                                       		}
                                                                       	}
                                                                       }
  s_CM_LM_Queue_EXIT         None                                      //ASSUMING ALL COILS COUNT FOR THE CM/LM QUEUE
                                                                       If a_Owner = TAA then 
                                                                       {
                                                                       	If a_Destination <> m_CM Then
                                                                       	{
                                                                       		If a_Destination <> m_LM Then
                                                                       		{
                                                                       			If a_Already_Added_to_C4_Queue_Lb = 1 Then
                                                                       			{
                                                                       				//ASSUMPTION - using product weight instead of routing weight due to coil weight decrease through steps
                                                                       				Dec v_Current_CM_LM_Queue, yProduct_Data[aProduct, 4]
                                                                       				a_Already_Added_to_C4_Queue_Lb = 0
                                                                       			}
                                                                       		}
                                                                       	}
                                                                       }
  s_CM_LM_Route_Change_to_C4 None                                      If v_Current_CM_LM_Queue >= m_CM_LM_Mill_Queue Then
                                                                       {
                                                                       	//check if TAA
                                                                       	If a_Owner = TAA Then //MAY REFERENCE THIS DIRECTLY OFF THE ARRAY
                                                                       	{
                                                                       		//debug
                                                                       		//check category (automotice CANNOT go to C4)
                                                                       		If a_Category >= 6 Then 
                                                                       		{
                                                                       			If a_Destination = m_CM Or a_Destination = m_LM Then
                                                                       			{
                                                                       				If v_C4_Racks_Capacity < (255 - 20 - 1) Then //rack capacity - 20 buffer - this coil
                                                                       				{
                                                                       					Inc v_STATS_Total_C4_Coils_Switched 
                                                                       					a_Already_Added_to_C4_Racks = 1
                                                                       					Inc v_C4_Racks_Capacity 
                                                                       					a_Destination = m_C4 
                                                                       				}
                                                                       			}
                                                                       		}
                                                                       	}
                                                                       }


********************************************************************************
*                              User Distributions                              *
********************************************************************************

  ID                  Type         Cumulative   Percentage           Value       
  ------------------- ------------ ------------ -------------------- ------------
  ud_2_Choices        Discrete     No           50                   1           
                                                50                   2           
  ud_3_Choices        Discrete     No           33                   1           
                                                33                   2           
                                                34                   3           
  ud_4_Choices        Discrete     No           25                   1           
                                                25                   2           
                                                25                   3           
                                                25                   4           
  ud_5_Choices        Discrete     No           20                   1           
                                                20                   2           
                                                20                   3           
                                                20                   4           
                                                20                   5           
  udAssociate         Discrete     No           80                   1           
                                                20                   2           
  udMonth1Demand      Discrete     No           2.15780296425458     4           
                                                4.0104620749782      7           
                                                8.02092414995641     8           
                                                8.71839581517001E-02 9           
                                                1.61290322580645     11          
                                                0.196163905841325    12          
                                                1.24237140366173     13          
                                                0.959023539668701    14          
                                                0.2615518744551      16          
                                                0.1743679163034      18          
                                                1.76547515257193     20          
                                                0.544899738448126    21          
                                                0.370531822144725    22          
                                                0.21795989537925     23          
                                                0.501307759372276    24          
                                                0.2615518744551      25          
                                                0.04359197907585     26          
                                                1.08979947689625     27          
                                                0.2615518744551      28          
                                                0.544899738448126    29          
                                                0.152571926765475    30          
                                                0.806451612903226    34          
                                                0.784655623365301    35          
                                                0.13077593722755     36          
                                                1.1333914559721      38          
                                                0.326939843068875    59          
                                                1.02441150828248     60          
                                                0.13077593722755     63          
                                                0.021795989537925    67          
                                                0.021795989537925    68          
                                                0.1743679163034      69          
                                                0.1743679163034      70          
                                                0.1743679163034      71          
                                                8.71839581517001E-02 73          
                                                8.71839581517001E-02 74          
                                                0.04359197907585     75          
                                                0.108979947689625    76          
                                                8.71839581517001E-02 77          
                                                0.2615518744551      79          
                                                0.2615518744551      80          
                                                0.3487358326068      81          
                                                0.021795989537925    82          
                                                0.021795989537925    83          
                                                0.021795989537925    84          
                                                0.04359197907585     88          
                                                0.1743679163034      89          
                                                0.13077593722755     93          
                                                0.4359197907585      94          
                                                0.544899738448126    95          
                                                0.610287707061901    96          
                                                0.523103748910201    98          
                                                0.021795989537925    99          
                                                1.98343504795118     100         
                                                0.30514385353095     101         
                                                0.414123801220575    102         
                                                0.4359197907585      103         
                                                0.806451612903226    104         
                                                0.239755884917175    108         
                                                0.108979947689625    110         
                                                0.108979947689625    113         
                                                0.196163905841325    116         
                                                0.850043591979076    118         
                                                2.2667829119442      119         
                                                6.49520488230166     122         
                                                0.39232781168265     123         
                                                2.02702702702703     124         
                                                2.615518744551       125         
                                                11.7262423714037     126         
                                                10.3748910200523     127         
                                                1.4821272885789      128         
                                                9.08892763731473     129         
                                                1.98343504795118     130         
                                                8.71839581517001E-02 135         
                                                0.980819529206626    137         
                                                2.24498692240628     140         
                                                0.021795989537925    142         
                                                0.30514385353095     144         
                                                5.03487358326068     145         
                                                0.3487358326068      146         
                                                0.2615518744551      147         
                                                2.48474280732345     151         
                                                6.53879686137751E-02 154         
                                                1.0462074978204      156         
  udMonth2Demand      Discrete     No           1.4295758143895      4           
                                                4.99179751581908     7           
                                                11.2959925005859     8           
                                                0.234356690883525    9           
                                                1.40614014530115     11          
                                                0.37497070541364     12          
                                                0.726505741738927    13          
                                                1.57018982891962     14          
                                                0.445277712678697    16          
                                                0.304663698148582    18          
                                                0.773377079915632    20          
                                                1.49988282165456     21          
                                                7.03070072650574E-02 22          
                                                0.234356690883525    23          
                                                9.37426763534099E-02 24          
                                                0.679634403562222    25          
                                                4.68713381767049E-02 26          
                                                0.796812749003984    27          
                                                0.468713381767049    28          
                                                0.843684087180689    29          
                                                0.210921021795172    30          
                                                2.34356690883525E-02 32          
                                                0.984298101710804    34          
                                                0.351535036325287    35          
                                                0.210921021795172    37          
                                                0.749941410827279    38          
                                                0.234356690883525    59          
                                                1.19521912350598     60          
                                                0.164049683618467    63          
                                                7.03070072650574E-02 67          
                                                7.03070072650574E-02 68          
                                                0.351535036325287    69          
                                                0.351535036325287    70          
                                                0.351535036325287    71          
                                                7.03070072650574E-02 73          
                                                7.03070072650574E-02 74          
                                                7.03070072650574E-02 75          
                                                0.140614014530115    76          
                                                4.68713381767049E-02 77          
                                                0.257792359971877    79          
                                                0.28122802906023     80          
                                                0.37497070541364     81          
                                                9.37426763534099E-02 82          
                                                9.37426763534099E-02 83          
                                                9.37426763534099E-02 84          
                                                9.37426763534099E-02 85          
                                                9.37426763534099E-02 86          
                                                9.37426763534099E-02 87          
                                                0.18748535270682     88          
                                                0.164049683618467    89          
                                                0.164049683618467    93          
                                                0.749941410827279    94          
                                                0.773377079915632    95          
                                                9.37426763534099E-02 96          
                                                1.4295758143895      98          
                                                4.68713381767049E-02 99          
                                                1.35926880712444     100         
                                                0.210921021795172    102         
                                                0.679634403562222    103         
                                                0.937426763534099    110         
                                                0.28122802906023     116         
                                                0.890555425357394    118         
                                                0.18748535270682     119         
                                                7.52284977736114     122         
                                                0.140614014530115    123         
                                                3.32786501054605     124         
                                                2.13264588704008     125         
                                                14.9050855401922     126         
                                                6.39793766112023     127         
                                                0.867119756269042    128         
                                                6.11670963206        129         
                                                1.54675415983126     130         
                                                0.585891727208812    137         
                                                2.24982423248184     140         
                                                0.820248418092337    144         
                                                7.07757206468245     145         
                                                0.867119756269042    146         
                                                4.68713381767049E-02 147         
                                                0.210921021795172    151         
                                                0.632763065385517    154         
                                                0.913991094445746    156         
  udMonth3Demand      Discrete     No           1.16229014205768     4           
                                                3.93887214808437     7           
                                                10.8049935428325     8           
                                                0.215238915195867    9           
                                                1.76495910460611     11          
                                                0.365906155832975    12          
                                                0.365906155832975    13          
                                                1.57124408092983     14          
                                                0.258286698235041    16          
                                                0.215238915195867    18          
                                                0.495049504950495    20          
                                                1.70038743004735     21          
                                                0.086095566078347    22          
                                                0.150667240637107    23          
                                                0.236762806715454    24          
                                                0.387430047352561    25          
                                                0.107619457597934    26          
                                                1.07619457597934     27          
                                                0.344382264313388    28          
                                                0.947051226861817    29          
                                                0.408953938872148    30          
                                                0.150667240637107    32          
                                                0.86095566078347     34          
                                                0.236762806715454    35          
                                                0.258286698235041    37          
                                                0.817907877744296    38          
                                                0.236762806715454    59          
                                                0.904003443822643    60          
                                                0.172191132156694    63          
                                                2.15238915195867E-02 67          
                                                2.15238915195867E-02 68          
                                                0.236762806715454    69          
                                                0.236762806715454    70          
                                                0.236762806715454    71          
                                                0.107619457597934    73          
                                                0.107619457597934    74          
                                                0.086095566078347    75          
                                                6.45716745587602E-02 76          
                                                4.30477830391735E-02 77          
                                                0.215238915195867    79          
                                                0.215238915195867    80          
                                                0.279810589754628    81          
                                                0.086095566078347    82          
                                                0.086095566078347    83          
                                                0.086095566078347    84          
                                                6.45716745587602E-02 85          
                                                6.45716745587602E-02 86          
                                                6.45716745587602E-02 87          
                                                0.107619457597934    88          
                                                0.215238915195867    89          
                                                0.344382264313388    93          
                                                1.16229014205768     94          
                                                1.52819629789066     95          
                                                1.16229014205768     96          
                                                2.56134309083082     98          
                                                2.15238915195867E-02 99          
                                                1.20533792509686     100         
                                                2.15238915195867E-02 102         
                                                0.086095566078347    103         
                                                1.11924235901851     116         
                                                1.09771846749892     118         
                                                0.086095566078347    119         
                                                11.8596642272923     122         
                                                6.45716745587602E-02 124         
                                                0.258286698235041    125         
                                                23.2458028411537     126         
                                                0.258286698235041    127         
                                                0.086095566078347    128         
                                                7.42574257425743     129         
                                                0.107619457597934    130         
                                                0.753336203185536    137         
                                                3.16401205337925     140         
                                                0.516573396470082    144         
                                                4.82135170038743     145         
                                                1.42057684029273     146         
                                                2.41067585019371     151         
                                                0.086095566078347    154         
                                                0.236762806715454    156         
  udTAA_CB_Excess     Discrete     Yes          5.81159369404164     31          
                                                5.81159369404164     32          
                                                5.81159369404164     33          
                                                24.1950774200344     34          
                                                67.9259857448826     35          
                                                68.6338260594783     36          
                                                74.5254731224325     37          
                                                75.83652259401       38          
                                                79.0681506969559     39          
                                                84.1557529581124     40          
                                                86.9807942136863     41          
                                                90.9364137495172     42          
                                                93.6638460728205     43          
                                                99.905902180401      44          
                                                100                  45          
  udTAA_BE_Excess     Discrete     Yes          32.8054451108565     18          
                                                41.6200552597884     19          
                                                43.3587168946695     20          
                                                73.4011725857538     21          
                                                88.6178313902554     22          
                                                89.8443291326909     23          
                                                93.2070894265112     24          
                                                100                  25          
  udNOVELIS_CB_Excess Discrete     Yes          1.77886637472476     75          
                                                3.61675732417215     76          
                                                21.6393987269071     77          
                                                21.9893048884365     78          
                                                25.6442337938664     79          
                                                29.0962878137227     80          
                                                65.9488288746806     81          
                                                78.3849886722298     82          
                                                80.1401745289521     83          
                                                97.3810053970375     84          
                                                100                  85          
  udNOVELIS_BE_Excess Discrete     Yes          6.03196595576228     69          
                                                74.4593992775496     70          
                                                75.7434806274432     71          
                                                97.0062843287644     72          
                                                100                  73          


********************************************************************************
*                                External Files                                *
********************************************************************************

  ID         Type              File Name                     Prompt    
  ---------- ----------------- ----------------------------- ----------
  (null)                       Logan Model 08-31-21 SRC.xlsb           
  Log_File   General Write     logfile.csv                             
  (null)     Shift             All.pmcal                               
  (null)                       Dummy Dest ASRS Tracker.xlsx            


